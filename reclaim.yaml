---
swagger: "2.0"
info:
  description: |
    # Introduction
    
    The Reclaim Partner API provides secure access to our hosted subscriber and group information and is available only to trusted partners under legal contract. Authorization is required for all endpoints (See Security and Authorization for the process of acquiring and access token). The api follows conventional REST guidelines. Two primary sets of resources are available, group and subscriber. Group endpoints are primarily for creating new employer groups and uploading eligibility data in csv format. Subscriber endpoints provide enrollment recommendation-related resources for individual subscribers.


  version: "v0.1"
  title: "RECLAIM Backend APIs"
host: "platform.reclaim.health"
x-logo:
  url: 'https://rebilly.github.io/ReDoc/petstore-logo.png'


#![foo](https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png 'title')
#You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For this sample, you can use the api key `special-key` to test the authorization filters.

#This API is documented in **OpenAPI format** and is based on [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team. It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo) tool and [ReDoc](https://github.com/Rebilly/ReDoc) documentation. In addition to standard OpenAPI syntax we use a few [vendor extensions](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md).

### OpenAPI Specification
#    This API is documented in **OpenAPI format** and is based on
#    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
#    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
#    tool and [ReDoc](https://github.com/Rebilly/ReDoc) documentation. In addition to standard
#    OpenAPI syntax we use a few [vendor extensions](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md).
#    # Cross-Origin Resource Sharing
#    This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).
#    And that allows cross-domain communication from the browser.
#    All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.
#    # Authentication
#    Petstore offers two forms of authentication:
#      - API Key
#      - OAuth2
#
#    OAuth2 - an open protocol to allow secure authorization in a simple
#    and standard method from web, mobile and desktop applications.
#    <!-- ReDoc-Inject: <security-definitions> -->

tags:
- name: "Security and Authorization"
  description: |   
    ## Security
    All calls to Reclaim’s APIs are encrypted over HTTPS. Our APIs support connections using TLS version 1.2 or higher. All modern languages and frameworks support TLS 1.2 (although specific older ones do not).
    
#    While these examples illustrate the typical process of obtaining an access token and then properly utilizing that token in an Authorization header for subsequent API requests, be aware that it is extremely inefficient to request a new token if you already obtained one that is still valid (note the number of seconds specified in the expires_in parameter in the cURL example’s response). For this reason we recommend using a PokitDok client library, giving you the ability to instantiate and use a long-lived PokitDok client connection that provides automatic handling of token retrieval, expiration, and rotation.
- name: "Group-Specific Endpoints"
  description: "This section documents the available endpoints associated with open enrollment. These endpoints come from the perspective of obtaining or updating information specific to a subscriber. Following the Reclaim terminology, an employee who enrolls their family in an employer-sponsored plan is the subscriber of the plan."
- name: "Subscriber-Specific Endpoints"
  description: "This section documents the available endpoints associated with open enrollment. These endpoints come from the perspective of obtaining or updating information specific to a subscriber. Following the Reclaim terminology, an employee who enrolls their family in an employer-sponsored plan is the subscriber of the plan."
schemes:
- "https"
paths:
  /oauth2/token:
    post:
      tags:
      - "Security and Authorization"
      summary: "Authorization via OAuth2"
      description: |   
       Access to our APIs is controlled via OAuth2 using the client credentials grant. This is a secure authorization workflow that allows you to obtain a **short-lived (1 hour)** access token that must be transmitted with your API request.
    
       The auth flow follows the following steps: 
         - A client encodes its `client key` and `secret key` into a specially encoded set of credentials. 
         - A client makes a request to the POST oauth2 / token endpoint to exchange these credentials for a bearer token.
         - When accessing the REST API, the client uses the bearer token to authenticate.

       In the cURL tab to the right you can see an example of obtaining an access token via the command line. Likewise, the Python tab contains an example of authorization from scratch using the popular requests library. 
      x-code-samples:
      - lang: "cURL"
        source: |                             
            # define your client id and secret
            CLIENT_ID=<YOUR_CLIENT_ID>
            CLIENT_SECRET=<YOUR_CLIENT_SECRET>

            # remove control characters if necessary (may occur with base64 on some OS platforms)
            CREDENTIALS=$(echo "$CLIENT_ID":"$CLIENT_SECRET" | base64 | tr -d "[:cntrl:]")

            # request an access token
            curl -i -X POST -H "Authorization: Basic $CREDENTIALS" -d "grant_type=client_credentials" https://platform.reclaim.health/oauth2/token; echo ""

            # the response from https://platform.reclaim.health/oauth2/token
            HTTP/1.1 200 OK
            Content-Type: application/json;charset=UTF-8
            {
                "access_token": "s8KYRJGTO0rWMy0zz1CCSCwsSesDyDlbNdZoRqVR",
                "token_type": "bearer",
                "expires_in": 3600
            }       
      - lang: "Python"
        source: |
            from base64 import urlsafe_b64encode
            import requests

            client_id = 'your_client_id'
            client_secret = 'your_client_secret'
            bearer_token = requests.post('https://platform.reclaim.health/oauth2/token',
                             headers={'Authorization': 'Basic ' + urlsafe_b64encode(client_id + ':' + client_secret)}, data={'grant_type': 'client_credentials'}).json()['bearer_token']                           
  /api/groups:
    post:
      tags:
      - "Group-Specific Endpoints"
      summary: "Adding Groups"
      description: "This endpoint allows the client to add employer groups to the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AddGroupDetailInput"
        required: true
        schema:
          $ref: "#/definitions/AddGroupDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AddGroupDetailOutput"
    get:
      tags:
      - "Group-Specific Endpoints"
      summary: "List Available Groups"
      description: "This endpoints allows the client to list all the available group IDs in the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/GroupListDetailOutput"  
  /api/group/[group_id]:
    delete:
      tags:
      - "Group-Specific Endpoints"
      summary: "Delete Existing Group"
      description: "This endpoints allows the client to delete an existing employer group in the Reclaim system. This is especially helpful at the beginning of the integration process."
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/DeleteGroupDetailOutput"   
    put:
      tags:
      - "Group-Specific Endpoints"
      summary: "Update Existing Group"
      description: "This endpoint allows the client to update the information of an existing employer group in the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "UpdateGroupDetailInput"
        required: true
        schema:
          $ref: "#/definitions/UpdateGroupDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UpdateGroupDetailOutput"          
  /api/group/[group_id]/files:
    post:
      tags:
      - "Group-Specific Endpoints"
      summary: "Upload Eligibility/Benefit File"
      description: |
        This endpoint allows the client to add a group eligibility or benefit file in the Reclaim system. Note that the type of file to upload should be provided in the header of the API. File types include
        
        `eligibility` referring to a group's eligibility file. 
        
        `basic` referring to a group's basic plans offerings and their attributes.
        
        `hospital` referring to a group's supplemental hospital indemnity offerings and their attributes.
        
        <b> Discuss with client types of voluntary benefits to include in recommendations. </b>
        
        <details>
        <summary id="text" onClick="function()"><font color="blue"><u> Click for Reclaim's preferred schema details for each of the file types</u></font></summary>
        <p>
        <br/>
        <b> Eligibility file schema </b>
        <table id="table" style="width:100%">
          <tr>
            <th>column</th>
            <th>description</th> 
            <th>type</th>
            <th>example</th>
          </tr>
          <tr>
            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2019</td>
          </tr>
          <tr>
            <td> group</td><td> Employer group code</td><td> string</td><td> acmecorp</td>
          </tr>
          <tr>
            <td> division</td><td> Employer division code</td><td> string</td><td> corporate</td>
          </tr>
          <tr>
            <td> subscriber_id</td><td> Plan subscriber ID</td><td> integer</td><td> 579635785</td>
          </tr>
          <tr>
            <td> subscriber_ssn</td><td> Plan subscriber's social security </td><td> integer</td><td> 1234567890</td>
          </tr>
          <tr>
            <td> subscriber_dob</td><td> Plan subscriber's date of birth</td><td> date</td><td> 1980-03-24</td>
          </tr>
          <tr>
            <td> subscriber_gender</td><td> Plan subscriber's gender</td><td> string</td><td> female</td>
          </tr>
          <tr>
            <td> subscriber_address</td><td> Plan subscriber street address</td><td> string</td><td> 123 Street #1</td>
          </tr>
          <tr>
            <td> subscriber_city</td><td> Plan subscriber city address</td><td> string</td><td> Cambridge</td>
          </tr>
          <tr>
            <td> subscriber_state</td><td> Plan subscriber state address</td><td> string</td><td> MA</td>
          </tr>
          <tr>
            <td> subscriber_zip</td><td> Plan subscriber zip code</td><td> string</td><td> 02139</td>
          </tr>
          <tr>
            <td> subscriber_status</td><td> Plan subscriber status</td><td> string</td><td> active</td>
          </tr>
          <tr>
            <td> member_id</td><td> Plan member ID</td><td> integer</td><td> 579635786</td>
          </tr>
          <tr>
            <td> member_ssn</td><td> Plan subscriber's social security</td><td> integer</td><td> 1234567891</td>
          </tr>
          <tr>
            <td> member_dob</td><td> Plan member's date of birth</td><td> date</td><td> 2010-04-26</td>
          </tr>
          <tr>
            <td> member_gender</td><td> Plan member's gender</td><td> string</td><td> female</td>
          </tr>
          <tr>
            <td> member_address</td><td> Plan member street address</td><td> string</td><td> 123 Street #1</td>
          </tr>
          <tr>
            <td> member_city</td><td> Plan member city address</td><td> string</td><td> Cambridge</td>
          </tr>
          <tr>
            <td> member_state</td><td> Plan member state address</td><td> string</td><td> MA</td>
          </tr>
          <tr>
            <td> member_zip</td><td> Plan member zip code</td><td> integer</td><td> 02139</td>
          </tr>
            <td> member_relation</td><td> Plan member zip code</td><td> integer</td><td> child</td>
          </tr>
          <tr>
            <td> member_status</td><td> Plan member status</td><td> string</td><td> active</td>
          </tr>
          <tr>
            <td> benefit</td><td> Benefit plan ID (if enrolled)</td><td> string</td><td> hdhp_13958</td>
          </tr>
          <tr>
            <td> benefit_start</td><td> Coverage start date (if enrolled)</td><td> date</td><td> 2019-01-01</td
          </tr>
          <tr>
            <td> benefit_end</td><td> Coverage end date (if known)</td><td> date</td><td></td>
          </tr>
          <tr>
            <td> benefit_type</td><td> Benefit plan type (if enrolled)</td><td> string</td><td> basic</td>
          </tr>
          <tr>
            <td> eligible_benefits</td><td> List of all eligible benefit IDs</td><td> string</td><td> hdhp_13958;ppo_14827 </td>
          </tr>
        </table>
        <button type="button" style="background-color:#4CAF50;color:white;width:300px;height:40px;font-size:14px;" onclick="exportTableToCSV('eligibility_reclaim_schema.csv')">EXPORT ELIGIBILITY SCHEMA TO CSV</button>
        </p>
        
        <p>
        <br/>
        <b> Basic health plan file schema </b>
        <table id="table2" style="width:100%">
          <tr>
            <th>column</th>
            <th>description</th> 
            <th>type</th>
            <th>example</th>
          </tr>
          <tr>
            <td> benefit_id</td><td> Benefit plan ID </td><td> string </td><td> hdhp_13958</td>
          </tr>
          <tr>
            <td> benefit_type</td><td> Benefit plan type </td><td> string </td><td> basic </td>
          </tr>
          <tr>
            <td> benefit_name</td><td> Benefit plan user-friendly name </td><td> string </td><td> HDHP Choice Base Plus </td>
          </tr>
          <tr> 
            <td> group</td><td> Employer group code </td><td> string </td><td> acmecorp </td>
          </tr>
          <tr> 
            <td> division</td><td> Employer group division code </td><td> string </td><td> corporate </td>
          </tr>
          <tr> 
            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2019</td>
          </tr>
          <tr>    
            <td> start_date </td><td> Plan start date</td><td> date</td><td> 2019-01-01</td>
          </tr>
          <tr>
            <td> end_date </td><td> Plan end date</td><td> date</td><td> 2019-12-31</td>
          </tr>
          <tr>    
            <td> ee_premium </td><td> Monthly premium for subscriber only</td><td> float</td><td> 356.7</td>
          </tr>
          <tr>
            <td> ec_premium </td><td> Monthly premium for subscriber and children dependents</td><td> float</td><td> 456.7</td>
          </tr>
          <tr>
            <td> es_premium </td><td> Monthly premium for subscriber and spouse</td><td> float</td><td> 556.7</td>
          </tr>
          <tr>
            <td> ef_premium </td><td> Monthly premium for subscriber and family (spouse and children)</td><td> float</td><td> 656.7</td>
          </tr>
          <tr>
            <td> hra_included </td><td> Indicator whether benefit is associated with HRA</td><td> bool</td><td> true</td>
          </tr>
          <tr>
            <td> ee_hra_contribution </td><td> Group HRA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
          </tr>
          <tr>
            <td> ef_hra_contribution </td><td> Group HRA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
          </tr>
          <tr>
            <td> hsa_included </td><td> Indicator whether benefit is associated with HSA</td><td> bool</td><td> true</td>
          </tr>
          <tr>
            <td> ee_hsa_contribution </td><td> Group HSA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
          </tr>
          <tr>
            <td> ef_hsa_contribution </td><td> Group HSA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
          </tr>
          <tr>
            <td> hsa_bank </td><td> HSA bank name; if applicable</td><td> string</td><td> HSA Bank</td>
          </tr> 
          <tr>
            <td> fsa_included </td><td> Indicator whether benefit is associated with FSA</td><td> bool</td><td> true</td>
          </tr>
          <tr>
            <td> ee_fsa_contribution </td><td> Group FSA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
          </tr>
          <tr>
            <td> ef_fsa_contribution </td><td> Group FSA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
          </tr>
          <tr>
            <td> fsa_bank </td><td> FSA bank name; if applicable</td><td> string</td><td> Wageworks</td>
          </tr> 
          <tr>
            <td> in_network_ee_deductible </td><td> In network deductible for subscriber only plan; if applicable</td><td> integer </td><td> 1500</td>
          </tr>
          <tr>
            <td> in_network_ef_deductible </td><td> In network deductible for subscriber and dependents; if applicable</td><td> integer </td><td> 3000</td>
          </tr>
          <tr>
            <td> out_network_ee_deductible </td><td> Out-of network deductible for subscriber only plan; if applicable</td><td> integer </td><td> 3000</td>
          </tr>
          <tr>
            <td> out_network_ef_deductible </td><td> Out-of network deductible for subscriber and dependents; if applicable</td><td> integer </td><td> 6000</td>
          </tr>
          <tr>
            <td> in_network_ee_oop_max </td><td> In network out-of-pocket max for subscriber only plan; if applicable</td><td> integer </td><td> 3000</td>
          </tr>
          <tr>
            <td> in_network_ef_oop_max </td><td> In network out-of-pocket max for subscriber and dependents; if applicable</td><td> integer </td><td> 6000</td>
          </tr>
          <tr>
            <td> out_network_ee_oop_max </td><td> Out-of network out-of-pocket max for subscriber only plan; if applicable</td><td> integer </td><td> 6000</td>
          </tr>
          <tr>
            <td> out_network_ef_oop_max </td><td> Out-of network out-of-pocket max for subscriber and dependents; if applicable</td><td> integer </td><td> 10000</td>
          </tr>
          <tr>
            <td> in_network_coinsurance </td><td> In network coinsurance; if applicable</td><td> integer </td><td> 20</td>
          </tr>
          <tr>
            <td> out_network_coinsurance </td><td> Out-of network coinsurance; if applicable</td><td> integer </td><td> 30</td>
          </tr>
        </table>
        <button type="button" style="background-color:#4CAF50;color:white;width:250px;height:40px;font-size:14px;" onclick="exportTableToCSV2('benefits_reclaim_schema.csv')">EXPORT SCHEMA TO CSV</button>   
        </p>
        
        <p>
        <br/>
        <b> Supplemental hospital indemnity file schema </b>
        <table id="table2" style="width:100%">
          <tr>
            <th>column</th>
            <th>description</th> 
            <th>type</th>
            <th>example</th>
          </tr>
          <tr>
            <td> benefit_id</td><td> Benefit plan ID </td><td> string </td><td> aflac_bronze_13958</td>
          </tr>
          <tr>
            <td> benefit_type</td><td> Benefit plan type </td><td> string </td><td> hospital </td>
          </tr>
          <tr>
            <td> benefit_name</td><td> Benefit plan user-friendly name </td><td> string </td><td> Aflac Hospital Benefit (Bronze) </td>
          </tr>
          <tr> 
            <td> group</td><td> Employer group code </td><td> string </td><td> acmecorp </td>
          </tr>
          <tr> 
            <td> division</td><td> Employer group division code </td><td> string </td><td> corporate </td>
          </tr>
          <tr> 
            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2019</td>
          </tr>
          <tr>    
            <td> start_date </td><td> Plan start date</td><td> date</td><td> 2019-01-01</td>
          </tr>
          <tr>
            <td> end_date </td><td> Plan end date</td><td> date</td><td> 2019-12-31</td>
          </tr>
          <tr>    
            <td> ee_premium </td><td> Monthly premium for subscriber only</td><td> float</td><td> 50.7</td>
          </tr>
          <tr>
            <td> ec_premium </td><td> Monthly premium for subscriber and children dependents</td><td> float</td><td> 66.7</td>
          </tr>
          <tr>
            <td> es_premium </td><td> Monthly premium for subscriber and spouse</td><td> float</td><td> 76.7</td>
          </tr>
          <tr>
            <td> ef_premium </td><td> Monthly premium for subscriber and family (spouse and children)</td><td> float</td><td> 86.7</td>
          </tr>
          <tr>
            <td> service </td> <td> Service for which the benefit applies </td><td> string</td><td> intensive_care_unit</td>
          </tr>
          <tr>
            <td> limit </td> <td> Maximum limit (days, number of visits, etc.) eligible for benefit</td><td> integer</td><td> 39</td>
          </tr>
          <tr>
            <td> limit_unit </td> <td> Unit corresponding to maximum limit  </td><td> string</td><td> days/confinement</td>
          </tr>
          <tr>
            <td> reimbursement </td> <td> Benefit reimbursement potential for given service</td><td> float</td><td> 50.0</td>
          </tr>
          <tr>
            <td> reimbursement_unit </td> <td> Unit corresponding to reimbursement</td><td> string</td><td> day</td>
          </tr>
        </table>
        <button type="button" style="background-color:#4CAF50;color:white;width:250px;height:40px;font-size:14px;" onclick="exportTableToCSV2('benefits_reclaim_schema.csv')">EXPORT SCHEMA TO CSV</button>
        </p>
        </details>
        
        
         
#        | **Column**          | **Description**                   | **Type**  | **Example**        |
#        |---------------------|-----------------------------------|-----------|--------------------|
#        | plan_year           | Plan start date's year            | integer   | 2019               |
#        | group               | Employer group code               | string    | acmecorp           |
#        | division            | Employer division code            | string    | corporate          |
#        | subscriber_id       | Plan subscriber ID                | integer   | 579635785          |
#        | subscriber_ssn      | Plan subscriber's social security | integer | 1234567890           |
#        | subscriber_dob      | Plan subscriber's date of birth   | date    | 1980-03-24           |
#        | subscriber_gender   | Plan subscriber's gender          | string  | female               |
#        | subscriber_address  | Plan subscriber street address    | string  | 123 Street #1        |
#        | subscriber_city     | Plan subscriber city address      | string  | Cambridge            |
#        | subscriber_state    | Plan subscriber state address     | string  | MA                   |
#        | subscriber_zip      | Plan subscriber zip code          | string  | 02139                |
#        | subscriber_status   | Plan subscriber status            | string  | active               |
#        | member_id           | Plan member ID                    | integer | 579635786            |
#        | member_ssn          | Plan subscriber's social security | integer | 1234567891           |
#        | member_dob          | Plan member's date of birth       | date    | 2010-04-26           |
#        | member_gender       | Plan member's gender              | string  | female               |
#        | member_address      | Plan member street address        | string  | 123 Street #1        |
#        | member_city         | Plan member city address          | string  | Cambridge            |
#        | member_state        | Plan member state address         | string  | MA                   |
#        | member_zip          | Plan member zip code              | integer | 02139                |
#        | member_relation     | Plan member zip code              | integer | child                |
#        | member_status       | Plan member status                | string  | active               |
#        | benefit             | Benefit plan ID (if enrolled)     | string  | hdhp_13958           |
#        | benefit_start       | Coverage start date (if enrolled) | date    | 2019-01-01           |
#        | benefit_end         | Coverage end date (if known)      | date    |                      |
#        | benefit_type        | Benefit plan type (if enrolled)   | string  | basic                |
#        | eligible_benefits   | List of all eligible benefit IDs  | string  | hdhp_13958;ppo_14827 |

#        | **Column**          | **Description**                   | **Type**  | **Example**        |
#        |---------------------|-----------------------------------|-----------|--------------------|
#        | plan_year           | Plan start date's year            | integer   | 2019               |
#        | group               | Employer group code               | string    | acmecorp           |
#        | division            | Employer division code            | string    | corporate          |
#        | subscriber_id       | Plan subscriber ID                | integer   | 579635785          |
#        | subscriber_ssn      | Plan subscriber's social security | integer | 1234567890           |
#        | subscriber_dob      | Plan subscriber's date of birth   | date    | 1980-03-24           |
#        | subscriber_gender   | Plan subscriber's gender          | string  | female               |
#        | subscriber_address  | Plan subscriber street address    | string  | 123 Street #1        |
#        | subscriber_city     | Plan subscriber city address      | string  | Cambridge            |
#        | subscriber_state    | Plan subscriber state address     | string  | MA                   |
#        | subscriber_zip      | Plan subscriber zip code          | string  | 02139                |
#        | subscriber_status   | Plan subscriber status            | string  | active               |
#        | member_id           | Plan member ID                    | integer | 579635786            |
#        | member_ssn          | Plan subscriber's social security | integer | 1234567891           |
#        | member_dob          | Plan member's date of birth       | date    | 2010-04-26           |
#        | member_gender       | Plan member's gender              | string  | female               |
#        | member_address      | Plan member street address        | string  | 123 Street #1        |
#        | member_city         | Plan member city address          | string  | Cambridge            |
#        | member_state        | Plan member state address         | string  | MA                   |
#        | member_zip          | Plan member zip code              | integer | 02139                |
#        | member_relation     | Plan member zip code              | integer | child                |
#        | member_status       | Plan member status                | string  | active               |
#        | benefit             | Benefit plan ID (if enrolled)     | string  | hdhp_13958           |
#        | benefit_start       | Coverage start date (if enrolled) | date    | 2019-01-01           |
#        | benefit_end         | Coverage end date (if known)      | date    |                      |
#        | benefit_type        | Benefit plan type (if enrolled)   | string  | basic                |
#        | eligible_benefits   | List of all eligible benefit IDs  | string  | hdhp_13958;ppo_14827 |
       
#        | **Column**          | **Description**                   | **Type**  | **Example**        |
#        |---------------------|-----------------------------------|-----------|--------------------|
#        | plan_year           | Plan start date's year            | integer   | 2019               |
#        
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "formData"
        name: "file"
        type: "file"
        description: "Eligibility/benefit file to upload"
        required: true  
        x-mimetype: text/csv
      - in: "formData"
        name: "name"
        description: "Description of the file to upload"
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # post file including bearer token authorization in header
            curl -X POST
            -H 'authorization: [bearer_token]' \
            -H 'type: eligibility' \
            -F 'file=@group_id_eligibility.csv' \
            -F 'name=group_id_eligibility' \
            https://platform.reclaim.health/api/group/[group_id]/eligibility_files
      - lang: "Python"
        source: |
            import requests

            files = {'file': open('/path/group_id_eligibility.csv', 'rb')}
            payload = {'name': 'group_id_eligibility'}
            headers = {'Authorization': 'bearer_token', 'Type': 'eligibility'}
            
            response = requests.put('https://platform.reclaim.health/api/group/[group_id]/files', files=files, data=payload, headers=headers).json()
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UploadDetailOutput"
    get:
      tags:
      - "Group-Specific Endpoints"
      summary: "Files Upload Status"
      description: "This endpoint checks the status of all uploaded data files for an existing employer group in the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/StatusCheckDetailOutput"   
  /group/[group_id]/file/[file_id]:
    get:
      tags:
      - "Group-Specific Endpoints"
      summary: "Specific File Upload Status"
      description: "This endpoint checks the status of a single uploaded data file in the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UploadDetailOutput"
#    delete:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Delete Existing File"
#      description: "This endpoint deletes an existng file in the Reclaim system."
#      consumes:
#      - "application/json"
#      produces:
#      - "application/json"
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/DeleteDetailOutput" 
#    put:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Update Existing File"
#      description: |
#        This endpoint allows the client to update an existing file in the Reclaim system. Refer to the data files schema above.
#      consumes:
#      - "multipart/form-data"
#      produces:
#      - "application/json"
#      parameters:
#      - in: "formData"
#        name: "file"
#        type: "file"
#        description: "Data file to upload"
#        required: true  
#        x-mimetype: text/csv
#      - in: "formData"
#        name: "name"
#        description: "Description of the data file to upload"
#      x-code-samples:
#      - lang: "cURL"
#        source: |                              
#            # post file including bearer token authorization in header
#            curl -X POST
#            -H 'authorization: [bearer_token]' \
#            -H 'type: eligibility' \
#            -F 'file=@group_id_eligibility.csv' \
#            -F 'name=group_id_eligibility' \
#            https://platform.reclaim.health/api/group/[group_id]/file/[file_id]
#      - lang: "Python"
#        source: |
#            import requests
#
#            files = {'file': open('/path/group_id_eligibility.csv', 'rb')}
#            payload = {'name': 'group_id_eligibility'}
#            headers = {'Authorization': 'bearer_token', 'Type': 'eligibility'}
#            
#            response = requests.put('https://platform.reclaim.health/api/group/[group_id]/file/[file_id]', files=files, data=payload, headers=headers).json()
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/UpdateDetailOutput"        
#  /group/[group_id]/benefits:
#    post:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Upload Group Benefits File"
#      description: |
#        This endpoint allows the client to upload the benefit and plan attributes offered by a specific employer group to their subscribers. 
#        
#        <details>
#    
#        <summary id="text" onClick="function()"><font color="blue"><u> Click for Reclaim's preferred benefits attributes file schema details </u></font></summary>
#        <p>
#        <table id="table2" style="width:100%">
#          <tr>
#            <th>column</th>
#            <th>description</th> 
#            <th>type</th>
#            <th>example</th>
#          </tr>
#          <tr>
#            <td> benefit_id</td><td> Benefit plan ID </td><td> string </td><td> hdhp_13958</td>
#          </tr>
#          <tr>
#            <td> benefit_type</td><td> Benefit plan type </td><td> string </td><td> basic </td>
#          </tr>
#          <tr>
#            <td> benefit_name</td><td> Benefit plan user-friendly name </td><td> string </td><td> HDHP Choice Base Plus </td>
#          </tr>
#          <tr> 
#            <td> group</td><td> Employer group code </td><td> string </td><td> acmecorp </td>
#          </tr>
#          <tr> 
#            <td> division</td><td> Employer group division code </td><td> string </td><td> corporate </td>
#          </tr>
#          <tr> 
#            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2019</td>
#          </tr>
#          <tr>    
#            <td> start_date </td><td> Plan start date</td><td> date</td><td> 2019-01-01</td>
#          </tr>
#          <tr>
#            <td> end_date </td><td> Plan end date</td><td> date</td><td> 2019-12-31</td>
#          </tr>
#          <tr>    
#            <td> ee_premium </td><td> Monthly premium for subscriber only</td><td> float</td><td> 356.7</td>
#          </tr>
#          <tr>
#            <td> ec_premium </td><td> Monthly premium for subscriber and children dependents</td><td> float</td><td> 456.7</td>
#          </tr>
#          <tr>
#            <td> es_premium </td><td> Monthly premium for subscriber and spouse</td><td> float</td><td> 556.7</td>
#          </tr>
#          <tr>
#            <td> ef_premium </td><td> Monthly premium for subscriber and family (spouse and children)</td><td> float</td><td> 656.7</td>
#          </tr>
#          <tr>
#            <td> hra_included </td><td> Indicator whether benefit is associated with HRA</td><td> bool</td><td> true</td>
#          </tr>
#          <tr>
#            <td> ee_hra_contribution </td><td> Group HRA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
#          </tr>
#          <tr>
#            <td> ef_hra_contribution </td><td> Group HRA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
#          </tr>
#          <tr>
#            <td> hsa_included </td><td> Indicator whether benefit is associated with HSA</td><td> bool</td><td> true</td>
#          </tr>
#          <tr>
#            <td> ee_hsa_contribution </td><td> Group HSA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
#          </tr>
#          <tr>
#            <td> ef_hsa_contribution </td><td> Group HSA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
#          </tr>
#          <tr>
#            <td> hsa_bank </td><td> HSA bank name; if applicable</td><td> string</td><td> HSA Bank</td>
#          </tr> 
#          <tr>
#            <td> fsa_included </td><td> Indicator whether benefit is associated with FSA</td><td> bool</td><td> true</td>
#          </tr>
#          <tr>
#            <td> ee_fsa_contribution </td><td> Group FSA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
#          </tr>
#          <tr>
#            <td> ef_fsa_contribution </td><td> Group FSA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
#          </tr>
#          <tr>
#            <td> fsa_bank </td><td> FSA bank name; if applicable</td><td> string</td><td> Wageworks</td>
#          </tr> 
#          <tr>
#            <td> in_network_ee_deductible </td><td> In network deductible for subscriber only plan; if applicable</td><td> integer </td><td> 1500</td>
#          </tr>
#          <tr>
#            <td> in_network_ef_deductible </td><td> In network deductible for subscriber and dependents; if applicable</td><td> integer </td><td> 3000</td>
#          </tr>
#          <tr>
#            <td> out_network_ee_deductible </td><td> Out-of network deductible for subscriber only plan; if applicable</td><td> integer </td><td> 3000</td>
#          </tr>
#          <tr>
#            <td> out_network_ef_deductible </td><td> Out-of network deductible for subscriber and dependents; if applicable</td><td> integer </td><td> 6000</td>
#          </tr>
#          <tr>
#            <td> in_network_ee_oop_max </td><td> In network out-of-pocket max for subscriber only plan; if applicable</td><td> integer </td><td> 3000</td>
#          </tr>
#          <tr>
#            <td> in_network_ef_oop_max </td><td> In network out-of-pocket max for subscriber and dependents; if applicable</td><td> integer </td><td> 6000</td>
#          </tr>
#          <tr>
#            <td> out_network_ee_oop_max </td><td> Out-of network out-of-pocket max for subscriber only plan; if applicable</td><td> integer </td><td> 6000</td>
#          </tr>
#          <tr>
#            <td> out_network_ef_oop_max </td><td> Out-of network out-of-pocket max for subscriber and dependents; if applicable</td><td> integer </td><td> 10000</td>
#          </tr>
#          <tr>
#            <td> in_network_coinsurance </td><td> In network coinsurance; if applicable</td><td> integer </td><td> 20</td>
#          </tr>
#          <tr>
#            <td> out_network_coinsurance </td><td> Out-of network coinsurance; if applicable</td><td> integer </td><td> 30</td>
#          </tr>
#        </table>
#        <button type="button" style="background-color:#4CAF50;color:white;width:250px;height:40px;font-size:14px;" onclick="exportTableToCSV2('benefits_reclaim_schema.csv')">EXPORT SCHEMA TO CSV</button>
#
#    
#        </p>
#        </details>
##        | **Column**          | **Description**                   | **Type**  | **Example**        |
##        |---------------------|-----------------------------------|-----------|--------------------|
##        | plan_year           | Plan start date's year            | integer   | 2019               |
##        | group               | Employer group code               | string    | acmecorp           |
##        | division            | Employer division code            | string    | corporate          |
##        | subscriber_id       | Plan subscriber ID                | integer   | 579635785          |
##        | subscriber_ssn      | Plan subscriber's social security | integer | 1234567890           |
##        | subscriber_dob      | Plan subscriber's date of birth   | date    | 1980-03-24           |
##        | subscriber_gender   | Plan subscriber's gender          | string  | female               |
##        | subscriber_address  | Plan subscriber street address    | string  | 123 Street #1        |
##        | subscriber_city     | Plan subscriber city address      | string  | Cambridge            |
##        | subscriber_state    | Plan subscriber state address     | string  | MA                   |
##        | subscriber_zip      | Plan subscriber zip code          | string  | 02139                |
##        | subscriber_status   | Plan subscriber status            | string  | active               |
##        | member_id           | Plan member ID                    | integer | 579635786            |
##        | member_ssn          | Plan subscriber's social security | integer | 1234567891           |
##        | member_dob          | Plan member's date of birth       | date    | 2010-04-26           |
##        | member_gender       | Plan member's gender              | string  | female               |
##        | member_address      | Plan member street address        | string  | 123 Street #1        |
##        | member_city         | Plan member city address          | string  | Cambridge            |
##        | member_state        | Plan member state address         | string  | MA                   |
##        | member_zip          | Plan member zip code              | integer | 02139                |
##        | member_relation     | Plan member zip code              | integer | child                |
##        | member_status       | Plan member status                | string  | active               |
##        | benefit             | Benefit plan ID (if enrolled)     | string  | hdhp_13958           |
##        | benefit_start       | Coverage start date (if enrolled) | date    | 2019-01-01           |
##        | benefit_end         | Coverage end date (if known)      | date    |                      |
##        | benefit_type        | Benefit plan type (if enrolled)   | string  | basic                |
##        | eligible_benefits   | List of all eligible benefit IDs  | string  | hdhp_13958;ppo_14827 |
#
#
#      consumes:
#      - "multipart/form-data"
#      produces:
#      - "application/json"
#      parameters:
#      - in: "formData"
#        name: "file"
#        type: "file"
#        description: "Benefit file to upload"
#        required: true  
#        x-mimetype: text/csv
#      - in: "formData"
#        name: "name"
#        description: "Description of the benefit file to upload"
#      - in: "formData"
#        name: "id"
#        description: "Benefit file ID that can be used to identify the status of the specific file upload into the Reclaim system"
#      x-code-samples:
#      - lang: "cURL"
#        source: |                              
#            # post file including bearer token authorization in header
#            curl -X POST
#            -H 'authorization: [bearer_token]' \
#            -F 'file=@group_id_benefit.csv' \
#            -F 'name=group_id_benefit' \
#            -F 'id=group_id_ben_2019_4_5' \
#            https://platform.reclaim.health/api/groups/[group_id]/benefit
#      - lang: "Python"
#        source: |
#            import requests
#
#            files = {'file': open('/path/group_id_benefit.csv', 'rb')}
#            payload = {'name': 'group_id_benefit', 'id': 'group_id_ben_2019_4_5'}
#            headers = {'Authorization': 'bearer_token'}
#            
#            response = requests.put('https://platform.reclaim.health/api/groups/[group_id]/benefit', files=files, data=payload, headers=headers).json()
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/BenefitUploadDetailOutput"
#    get:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Benefit Upload Status Check"
#      description: "This endpoint checks the status of all uploaded benefit data files for an existing employer group in the Reclaim system."
#      consumes:
#      - "application/json"
#      produces:
#      - "application/json"
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/BenefitStatusCheckDetailOutput"   
#  /groups/[group_id]/benefits/[upload_id]:
#    get:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Benefit File Upload Status Check"
#      description: "This endpoint checks the status of a single uploaded benefit data file in the Reclaim system."
#      consumes:
#      - "application/json"
#      produces:
#      - "application/json"
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/BenefitUploadDetailOutput"            
  /subscribers:
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Subscriber Details"
      description: "This endpoints is designed to obtain information about a specific subscriber, including whether claims data is available in the Reclaim system for the subscriber, and if so, whether the subscriber has authorized Reclaim to use their claims data to personalize the optimization of their plan recommendations. The assumption is that the `subscriber_id` that identifies the subscriber for the client is known to the Reclaim platform."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SubscriberDetailOutput"
    post:
      post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Add Subscriber"
      description: "This endpoint is designed to post a subscriber's information, should their information not have been communicated through the eligibility file upload."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "SubscriberDetailInput"
        required: true
        schema:
          $ref: "#/definitions/SubscriberDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SubscriberDetailOutput"        
  /subscriber/[subscriber_id]/authorize:
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Check Claim Authorization"
      description: "This endpoint is designed to allow the client to check if a subscriber has authorized Reclaim to make use of their claims data throughout the decision making process. This may be useful for subscribers that have access the continuous engagement Reclaim application or who have authorized Reclaim during last year's open enrollment."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AuthorizationDetailOutput"
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Claim Authorization"
      description: "This endpoint is designed to allow a subscriber to authorize Reclaim to make use of their claims data throughout the decision making process. The Reclaim platform recalls the subscriber's decision in its system and mirrors it in the mobile application for the continuous yearlong member engagement."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AuthorizationDetailInput"
        required: true
        schema:
          $ref: "#/definitions/AuthorizationDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AuthorizationDetailOutput"
  /subscriber/[subscriber_id]/review:
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Current Plan Review"
      description: "This endpoint allows the client to output a review of how the subscriber's current plan has performed given their healthcare bills (and those of their dependents') for the year. The goal of this endpoint is to present information to the user about their current plan performance to frame the conversation around their next year's plan selections in a highly personalized manner. Please note that this is only available if Reclaim has the subscriber's claims data in its system and the subscriber has authorized Reclaim to utilize their claims data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ReviewDetailOutput"
  /subscriber/[subscriber_id]/survey:
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Enrollment Survey"
      description: "This endpoint is designed to retrieve the subscriber's most updated responses to the survey questionnaires that have been saved in the Reclaim system. Note that this endpoint can be accessible even if the subscriber has no claims in the Reclaim system or has not authorized the use of their claims data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SurveyDetailOutput"
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Enrollment Survey"
      description: "This endpoint is designed to post the subscriber's responses to the survey questionnaires and share them with the Reclaim system. If the Reclaim system receives the subscriber's answers, it will feed them into its enrollment recommendation algorithm. Note that this endpoint can be accessible even if the subscriber has no claims in the Reclaim system or has not authorized the use of their claims data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "SurveyDetailInput"
        required: true
        schema:
          $ref: "#/definitions/SurveyDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SurveyDetailOutput"
  /subscriber/[subscriber_id]/recommendation:
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Recommended Plan Bundles"
      description: "This endpoint allows the client to post the list of members that the subscriber would like to include in their plan, as well as their eligibility to a specific array of benefits from their employer group. Note that the benefit features have been already shared and processed by Reclaim. The eligibility to these benefits in this POST API is designed to reference the particular benefit IDs that the subscriber is eligible to select. The API then outputs a review of how the subscriber's current plan has performed given their healthcare bills (and those of their dependents') for the year. The goal of this endpoint is to present information to the user about their current plan performance to frame the conversation around their next year's plan selections in a highly personalized manner. Please note that this is only available if Reclaim has the subscriber's claims data in its system and the subscriber has authorized Reclaim to utilize their claims data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RecommendationDetailInput"
        required: true
        schema:
          $ref: "#/definitions/RecommendationDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/RecommendationDetailOutput"
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Recommended Plan Bundles"
      description: "This endpoint allows the client to output a review of how the subscriber's current plan has performed given their healthcare bills (and those of their dependents') for the year. The goal of this endpoint is to present information to the user about their current plan performance to frame the conversation around their next year's plan selections in a highly personalized manner. Please note that this is only available if Reclaim has the subscriber's claims data in its system and the subscriber has authorized Reclaim to utilize their claims data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/RecommendationDetailOutput"    
definitions:
# Add Group Detail Input
  AddGroupDetailInput:
    type: "object"
    properties:
      groups:
        type: "array"
        description: "Array of employer groups to add in the Reclaim system"
        items:
          type: "object"
          properties:
            id: 
              type: "string"
              description: "Short identifier for the employer group"
            name: 
              type: "string"
              description: "Detailed name for the employer group"
    example:
      groups:
        - id: "acmecorp"
          name: "ACME Corporation"
        - id: "abc"
          name: "ABC, Inc."
# Claim Authorization Detail Input
  AuthorizationDetailInput:
    type: "object"
    properties:
      authorized:
        type: "boolean"
        description: "True is the subscriber authorizes Reclaim to utilize their claims data for the decision support during open enrollment, False otherwise"
    example:
      authorized: true
# Enrollment Survey Detail Input
  SurveyDetailInput:
    type: "object"
    properties:
      survey:
        type: "array"
        description: "Array containing the subscriber's questions and answers to the different types of questionnaires the client has selected to ask on their platform, if applicable. Note that the health related questions may only needed if the subscriber has no claims in the Reclaim system or whether they have elected to not use their claims"
        items:
          type: "object"
          properties:
            id:
              type: "string"
              description: "Slug describing the survey question. The first term defines the umbrella under which the question is served, e.g. **health**, **financial**, and **personality**. The remainder is a short description of the survey question"
            value:
              type: "string, integer, array"
              description: "String, integer or an array of subscriber's answer, depending on the question type. Note that an array is only applicable for questions of type `multi`" 
            ignore:
              type: "bool"
              description: "Indicator whether the question can be ignored for the purposes of the recommendation. This is for instance applicable if the client chooses not to ask health questions to subscribers that have claims data in the Reclaim system and have authorized Reclaim to utilize their claims data"
    example:
      survey:
        - id: "health_doctor_visits"
          value: 8
          ignore: false
        - id: "health_prescriptions"
          ignore: true
        - id: "health_expected_events"
          value: 
            - "pregnancy"
            - "income_loss" 
          ignore: false 
# Add Group Detail Output
  AddGroupDetailOutput:
    type: "object"
    properties:
      groups:
        type: "array"
        description: "Array of employer groups just added in the Reclaim system by the client"
        items:
          type: "object"
          properties:
            id: 
              type: "string"
              description: "Short identifier for the employer group"
            name: 
              type: "string"
              description: "Detailed name for the employer group"
            updated:
              type: "timestamp"
              description: "Timestamp (in UTC) recording the latest update to the employer group entry in the Reclaim system. Note all the timestamps are UTC" 
            detail: 
              type: "array"
              description: "Array of messages (string), if applicable. These would include any list of error detailed descriptions"  
              items:
                type: "string"
    example:
      groups:
        - id: "acmecorp"
          name: "ACME Corporation"
          updated: "2019-04-10 14:59:23"
        - id: "abc"
          name: "ABC, Inc."  
          updated: "2019-04-04 14:59:23"
          detail: 
            - "Client attempted to add a group that already existed"
# Update Group Detail Input
  UpdateGroupDetailInput:
    type: "object"
    properties:
      id: 
        type: "string"
        description: "Short identifier for the employer group"
      name: 
        type: "string"
        description: "Detailed name for the employer group"
    example:
      id: "abc"
      name: "ABC, Inc."   
# Update Group Detail Output
  UpdateGroupDetailOutput:
    type: "object"
    properties:
      id: 
        type: "string"
        description: "Short identifier for the employer group"
      name: 
        type: "string"
        description: "Detailed name for the employer group"
      updated:
        type: "timestamp"
        description: "Timestamp (in UTC) recording the latest update to the employer group entry in the Reclaim system. Note all the timestamps are UTC" 
      detail: 
        type: "array"
        description: "Array of messages (string), if applicable. These would include any list of error detailed descriptions"  
        items:
          type: "string"
    example:
      id: "abc"
      name: "ABC, Inc."  
      updated: "2019-04-04 14:59:23"
      detail: 
        - "ABC group name updated from ABC Corp to ABC, Inc."  
# Delete Group Detail Output
  DeleteGroupDetailOutput:
    type: "object"
    properties:
      id: 
        type: "string"
        description: "Short identifier for the employer group"
      name: 
        type: "string"
        description: "Detailed name for the employer group"
      updated:
        type: "timestamp"
        description: "Timestamp (in UTC) recording the latest update to the employer group entry in the Reclaim system. Note all the timestamps are UTC" 
      detail: 
        type: "array"
        description: "Array of messages (string), if applicable. These would include any list of error detailed descriptions"  
        items:
          type: "string"
    example:
      id: "abc"
      name: "ABC, Inc."  
      updated: "2019-04-04 14:59:23"
      detail: 
        - "Group ABC, Inc. has been deleted successfully."          
#Group List Detail Output
  GroupListDetailOutput:
    type: "object"
    properties: 
      count:   
            type: "integer"
            description: "Number of employer groups available in the Reclaim system"
      groups:   
            type: "array"
            description: "Array containing all the employer groups available in the Reclaim system" 
            items:
              type: object
              properties:
                id:   
                  type: "string"
                  description: "Short identifier for the employer group"  
                name:
                  type: "string"
                  description: "Detailed name for the employer group"
                updated:
                  type: "timestamp"
                  description: "Timestamp (in UTC) recording the latest update to the employer group entry in the Reclaim system. Note all the timestamps are UTC"  
                detail: 
                  type: "array"
                  description: "Array of messages (string), if applicable. These would include any list of error detailed descriptions"
                  items:
                    type: "string"
    example: 
          count: 4
          groups:
            - id: "acmecorp"
              name: "ACME Corporation"
              updated: "2019-04-10 14:59:23"
            - id: "abc"
              name: "ABC, Inc."
              updated: "2019-04-04 14:59:23"
              detail: 
                - "Client attempted to add a group that already existed"
            - id: "def"
              name: "DEF LLC."
              updated: "2019-04-10 14:59:23"
            - id: "xyz"
              name: "XYZ, Inc."
              updated: "2019-04-04 14:59:23"   
# Eligibility Upload Detail Output  
  UploadDetailOutput:
    type: "object"
    properties: 
      id:   
            type: "string"
            description: "Data file upload ID created by the Reclaim system to refer to the upload activity"
      type:   
            type: "string"
            description: "Data file type, e.g., eligibility, basic, hospital, etc."        
      name: 
            type: "string"
            description: "Description of the data file to upload as provided by the client"        
      status:   
            type: "string"
            description: |
              Status of the data file upload in the Reclaim system. This can take one of three values:
              
              `processing` meaning the ingestion of the data file is still processing
              
              `fail` meaning the ingestion of the data file has failed
              
              `success` meaning the ingestion of the data file has finished successfully
      detail:
            type: "array"
            description: "Detailed description of failure error, if the ingestion of the data file were to encounter a failure"
            items: 
              type: "string"
      updated: 
            type: "timestamp"
            description: "Timestamp (in UTC) of the most recent update on the status of the data file upload"        
    example: 
          id: "group_id_elig_2019_4_5"
          type: "eligibility"
          name: "group_id_eligibility"
          status: "processing"
          updated: "2019-04-10 14:59:23"
#Eligibility Status Check Detail Output      
  StatusCheckDetailOutput:
    type: "object"
    properties: 
      files:
        type: "array"
        description: "Array of all data files uploaded to the Reclaim system"
        items:
          type: "object"
          properties:
            id:   
              type: "string"
              description: "Data file upload ID created by the Reclaim system to refer to the upload activity"
            type:   
              type: "string"
              description: "Data file type, e.g., eligibility, basic, hospital, etc."    
            name:
              type: "string"
              description: "Description of the data file to upload as provided by the client"  
            status:   
              type: "string"
              description: |
                Status of the data file upload in the Reclaim system. This can take one of three values:
              
                `processing` meaning the ingestion of the data file is still processing
              
                `fail` meaning the ingestion of the data file has failed
              
                `success` meaning the ingestion of the data file has finished successfully
            detail:
              type: "array"
              description: "Detailed description of failure error, if the ingestion of the data file were to encounter a failure"   
              items: 
                type: "string"
            updated: 
              type: "timestamp"
              description: "Timestamp (in UTC) of the most recent update on the status of the data file upload"
    example: 
      files:
        - id: "group_id_elig_2019_4_5"
          type: "eligibility"
          name: "group_id_eligibility"
          status: "success"
          updated: "2019-04-10 14:59:23"
        - id: "group_id_basic_2019_5_5"  
          type: "basic_plans"
          name: "group_id_basic"
          status: "processing"
          updated: "2019-05-10 12:59:29"
        - id: "group_id_supplemental_2019_5_6" 
          type: "supplemental_plans"
          name: "group_id_supplemental"
          status: "fail"
          updated: "2019-05-10 12:59:29"  
          detail: 
            - "line 9, column 10 - found unexpected data format" 
            - "line 145, column 74 - found unexpected character"
# Update Eligibility Detail Output  
  UpdateDetailOutput:
    type: "object"
    properties: 
      id:   
            type: "string"
            description: "Data file ID created by the Reclaim system to refer to the upload activity"
      type:   
            type: "string"
            description: "Data file type, e.g., eligibility, basic, hospital, etc."         
      name:
            type: "string"
            description: "Description of the data file to upload as provided by the client"        
      status:   
            type: "string"
            description: |
              Status of the data file upload in the Reclaim system. This can take one of three values:
              
              `processing` meaning the ingestion of the data file is still processing
              
              `fail` meaning the ingestion of the data file has failed
              
              `success` meaning the ingestion of the data file has finished successfully
      detail:
            type: "array"
            description: "Detailed description of failure error, if the ingestion of the data file were to encounter a failure"
            items: 
              type: "string"
      updated: 
            type: "timestamp"
            description: "Timestamp (in UTC) of the most recent update on the status of the data file upload"        
    example: 
          id: "group_id_elig_2019_4_5"
          type: "eligibility"
          name: "group_id_eligibility"
          status: "processing"
          updated: "2019-04-10 14:59:23"    
# Delete Eligibility Detail Output  
  DeleteDetailOutput:
    type: "object"
    properties: 
      id:   
            type: "string"
            description: "Data file ID created by the Reclaim system to refer to the upload activity"
      type:   
            type: "string"
            description: "Data file type, e.g., eligibility, basic, hospital, etc."           
      name:
            type: "string"
            description: "Description of the data file to upload as provided by the client"        
      status:   
            type: "string"
            description: |
              Status of the data file upload in the Reclaim system. This can take one of three values:
              
              `processing` meaning the ingestion of the data file is still processing
              
              `fail` meaning the ingestion of the data file has failed
              
              `success` meaning the ingestion of the data file has finished successfully
      detail:
            type: "array"
            description: "Detailed description of failure error, if the deletion of the data file were to encounter a failure"
            items: 
              type: "string"
      updated: 
            type: "timestamp"
            description: "Timestamp (in UTC) of the most recent update on the deletion status of the data file"        
    example: 
          id: "group_id_elig_2019_4_5"
          type: "eligibility"
          name: "group_id_eligibility"
          status: "success"
          updated: "2019-04-10 14:59:23" 
          detail: 
            - "The file 'group_id_eligibility.csv' was successfully deleted."
## Benefit Upload Detail Output  
#  BenefitUploadDetailOutput:
#    type: "object"
#    properties: 
#      id:   
#            type: "string"
#            description: "Benefit upload ID as instructed by client upload post request"
#      status:   
#            type: "string"
#            description: |
#              Status of benefits file upload and ingestion process into the Reclaim system. This can take one of three values:
#              
#              `processing` meaning the ingestion of the benefits file is still processing
#              
#              `fail` meaning the ingestion of the benefits file has failed
#              
#              `success` meaning the ingestion of the benefits file has finished successfully
#      detail:
#            type: "string"
#            description: "Detailed description of failure error, if the ingestion of the benefits file were to encounter a failure"
#      updated: 
#            type: "timestamp"
#            description: "Timestamp of the most recent update on the status of the benefits file upload"        
#    example: 
#          id: "group_id_ben_2019_4_5"
#          status: "processing"
#          updated: "2019-04-10 14:59:23"
##Benefit Status Check Detail Output      
#  BenefitStatusCheckDetailOutput:
#    type: "object"
#    properties: 
#      eligibility:
#        type: "array"
#        description: "Array of objects describing the status of the most recent benefit file uploads by the client to the Reclaim system"
#        items:
#          type: "object"
#          properties:
#            id:   
#              type: "string"
#              description: "Benefit upload ID as instructed by client upload post request"
#            status:   
#              type: "string"
#              description: |
#                Status of benefit file upload and ingestion process into the Reclaim system. This can take one of three values:
#              
#                `processing` meaning the ingestion of the benefit file is still processing
#              
#                `fail` meaning the ingestion of the benefit file has failed
#              
#                `success` meaning the ingestion of the benefit file has finished successfully
#            detail:
#              type: "string"
#              description: "Detailed description of failure error, if the ingestion of the benefit were to encounter a failure"    
#            updated: 
#              type: "timestamp"
#              description: "Timestamp of the most recent update on the status of the benefit file upload"
#    example: 
#      eligibility:
#        - id: "group_id_ben_2019_4_5"
#          status: "success"
#          updated: "2019-04-10 14:59:23"
#        - id: "group_id_ben_2019_5_5"  
#          status: "processing"
#          updated: "2019-05-10 12:59:29"
#        - id: "group_id_ben_2019_5_6"  
#          status: "fail"
#          updated: "2019-05-10 12:59:29"  
#          detail: "line 9, column 10 - found unexpected data format"   

#Subscriber Detail Iutput
  SubscriberDetailInput:
    type: "object"
    properties: 
      subscriber:   
            type: "integer"
            description: "Subscriber ID"
      group:   
            type: "string"
            description: "Employer group ID" 
      division:   
            type: "string"
            description: "Employer group's division ID"  
      members: 
            type: "array"
            description: "Array of all the current dependents on the subscriber's plan."
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                  description: "Plan member ID"
                is_subscriber:
                  type: "boolean"
                  description: "True if the member is the plan subscriber, false otherwise"
                name:
                  type: "string"
                  description: "Member's first name"  
                relation:
                  type: "string"
                  description: |
                    Slug describing the relation of the member to the subscriber. This takes three possible values
                      
                    `subscriber` referring to the member being the plan subscriber, 
                      
                    `spouse` referring to the member being the subscriber's spouse, 
                      
                    `child` referring to the member being the subscriber's child.         
    example:
      subscriber: 57122389
      group: "acmecorp"
      division: "corporate"
      members:
        - id: 57122389
          is_subscriber: true
          name: "Susan"
          relation: "subscriber"
        - id: 57122390
          is_subscriber: false
          name: "Cora"
          relation: "Spouse"   
          
#Subscriber Detail Output
  SubscriberDetailOutput:
    type: "object"
    properties: 
      subscriber:   
            type: "integer"
            description: "Subscriber ID"
      group:   
            type: "string"
            description: "Employer group ID" 
      division:   
            type: "string"
            description: "Employer group's division ID"    
      claims_available: 
            type: "object"
            properties:
              flag: 
                type: "boolean"
                description: "True if Reclaim has mapped the medical and pharmacy claims of this subscriber and their dependants, False otherwise"
              updated: 
                type: "timestamp"
                description: "Timestamp (in UTC) recording the time the flag was updated to the current value, if applicable"
      authorized:   
            type: "object"
            properties:
              flag: 
                type: "boolean"
                description: "True if the subscriber has authorized Reclaim to use their claims to personalize their decision support, False otherwise"
              updated: 
                type: "timestamp"
                description: "Timestamp (in UTC) recording the time the flag was updated to the current value, if applicable"
      survey:   
            type: "object"
            properties:
              flag: 
                type: "boolean"
                description: "True if the subscriber has taken the subscriber enrollment survey, False otherwise"
              updated: 
                type: "timestamp"
                description: "Timestamp (in UTC) recording the time the flag was updated to the current value, if applicable"   
      members: 
            type: "array"
            description: "Array of all the current dependents on the subscriber's plan."
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                  description: "Plan member ID"
                is_subscriber:
                  type: "boolean"
                  description: "True if the member is the plan subscriber, false otherwise"
                name:
                  type: "string"
                  description: "Member's first name"  
                relation:
                  type: "string"
                  description: |
                    Slug describing the relation of the member to the subscriber. This takes three possible values
                      
                    `subscriber` referring to the member being the plan subscriber, 
                      
                    `spouse` referring to the member being the subscriber's spouse, 
                      
                    `child` referring to the member being the subscriber's child.             
    example:
      subscriber: 57122389
      group: "acmecorp"
      division: "corporate"
      claims_available: 
        flag: true
        updated: "2019-05-10 12:59:29"
      authorized: 
        flag: true
        updated: "2019-05-10 12:59:29"
      survey: 
        flag: false
      members:
        - id: 57122389
          is_subscriber: true
          name: "Susan"
          relation: "subscriber"
        - id: 57122390
          is_subscriber: false
          name: "Cora"
          relation: "Spouse"      
    title: "subscriber_detail"  
#Authorization Detail Output
  AuthorizationDetailOutput:
    type: "object"
    properties: 
      authorized:   
            type: "object"
            properties:
              flag: 
                type: "boolean"
                description: "True if the subscriber has authorized Reclaim to use their claims to personalize their decision support, False otherwise"
              updated: 
                type: "timestamp"
                description: "Timestamp (in UTC) recording the time the flag was updated to the current value, if applicable"
    example: 
      authorized: 
        flag: true
        updated: "2019-05-10 12:59:29"
    title: "claim_authorization" 
#Current Plan Performance Review Detail Output
  ReviewDetailOutput:
    type: "object"
    properties: 
      authorized:   
            type: "object"
            properties:
              flag: 
                type: "boolean"
                description: "True if the subscriber has authorized Reclaim to use their claims to personalize their decision support, False otherwise"
              updated: 
                type: "timestamp"
                description: "Timestamp (in UTC) recording the time the flag was updated to the current value, if applicable"
      members: 
            type: "array"
            description: "Array of all the current dependents on the subscriber's plan."
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                  description: "Plan member ID"
                is_subscriber:
                  type: "boolean"
                  description: "True if the member is the plan subscriber, false otherwise"
                name:
                  type: "string"
                  description: "Member's first name"  
                relation:
                  type: "string"
                  description: |
                    Slug describing the relation of the member to the subscriber. This takes three possible values
                      
                    `subscriber` referring to the member being the plan subscriber, 
                      
                    `spouse` referring to the member being the subscriber's spouse, 
                      
                    `child` referring to the member being the subscriber's child.            
      plan: 
            type: "object"
            description: "Object describing the assessment of the subscriber's current plan performance"
            properties:
                plan: 
                    type: "string"
                    description: "Name of the subscriber's current health plan"
                carrier: 
                    type: "string"
                    description: "Name of the subscriber's current insurance carrier"  
                assessment: 
                    type: "string"
                    description: |
                      Slug conferring an assessment of how the current plan has been performing, given the subscriber's claims and healthcare bills for the year thus far. This can take on three different values:
                      
                      `well_insured` signifies that the cureent year's selected plan was the best option for the subscriber, 
                      
                      `high_premium` signifies that the subscriber is overpaying on premiums while not needing that comprehensive of coverage, and 
                      
                      `high_oop` meaning the subscriber has paid more in out-of-pocket expenses with respect to other plans they could have chosen for the current year.
                premium:
                    type: "float"
                    description: "Total amount of premiums paid by the subscriber thus far for the current plan year"
                oop: 
                    type: "float"
                    description: "Total amount of out-of-pocket expenses (medical and pharmacy) paid by the subscriber thus far for the current plan year"
                group_contribution: 
                    type: "float"
                    description: "Amount contributed by the employer group either through an HSA or an HRA contribution"
                subscriber_contribution: 
                    type: "float"
                    description: "Amount contributed by the subscriber either to an HSA or an FSA, if known"    
                alternative_savings: 
                    type: "float"
                    description: "Amount that the subscriber could have saved, had they selected another plan for the current year from the options that were made available to them during last year's open enrollment"   
      events: 
            type: "array"
            description: "Array describing the highlights of the subscriber and their dependents' healthcare episodes for the current year"
            items:
              type: "object"
              properties:
                episode:
                  type: "string"
                  description: "Episode description"
                event:
                  type: "string"
                  description: "Episode description"
                name:
                  type: "string"
                  description: "First name of the member associated with the episode of care"
                start:
                  type: "date"
                  description: "Start date of the episode of care"
                end:
                  type: "date"
                  description: "End date of the episode of care"  
                charge:
                  type: "float"
                  description: "Out-of-pocket expense to the subscriber and their dependents"
    example:
      authorized: 
        flag: true
        updated: "2019-05-10 12:59:29"
      members:
        - id: 511750
          is_subscriber: true
          name: "Susan"
          relation: "subscriber"
        - id: 511751
          is_subscriber: false
          name: "Cora"
          relation: "Spouse"  
      plan:
        plan: "HDHP Choice Base Plus"
        carrier: "United Healthcare"
        assessment: "well_insured"
        premium: 8800
        oop: 3535
        group_contribution: 1000
        subscriber_contribution: 5500
        alternative_savings: 500
      events:
        - episode: "Pregnancy"
          event: "Labor and Childbirth"
          name: "Susan"
          start: "2017-03-28"
          end: "2017-04-02"
          charge: 6173.4
        - episode: "Dislocated Shoulder" 
          event: "Urgent Care"
          name: "Cora"
          start: "2017-08-05"
          end: "2017-08-05"
          charge: 568.3  
    title: "year_review"  
# Enrollment Survey Detail Output
  SurveyDetailOutput:
    type: "object"
    properties:
      updated: 
        type: "timestamp"
        description: "Timestamp (in UTC) of latest updated responses saved into the Reclaim system, if applicable"
      survey:
        type: "array"
        description: "Array containing the subscriber's questions and answers to the different types of questionnaires the client has selected to ask on their platform, if applicable. Note that the health related questions may only needed if the subscriber has no claims in the Reclaim system or whether they have elected to not use their claims"
        items:
          type: "object"
          properties:
            name:
              type: "string"
              description: "Slug describing the survey question. The first term defines the umbrella under which the question is served, e.g. **health**, **financial**, and **personality**. The remainder is a short description of the survey question"
            description:
              type: "string"
              description: "Survey question verbiage, if necessary to include"  
            type:
              type: "string"
              description: |
                Slugs describing the type of the question. This can take the following values:
                
                `bool` if the answer to the question is True or False
                
                `int` if the answer to the question is an integer
                
                `select` if the answer involves selecting a single option from the available choices
                
                `multi` if the answer involves selecting at least one option from the available choices
            min:
              type: "integer"
              description: "Minimum integer value to suggest to the subscriber, if applicable and if the expected answer to the question is of type `int`"
            max:
              type: "integer"
              description: "Maximum integer value to suggest to the subscriber, if applicable and if the expected answer to the question is of type `int`"
            options:
              type: "array"
              description: "Array of options to suggest to the subscriber, if the expected answer is of type `select` or `multi`"  
              items:
                type: "object"
                properties:
                  name: 
                    type: "string"
                    description: "User-friendly description of the option"
                  value:
                    description: "Slug or number identifying the option"
            value:
              type: "string, integer, array"
              description: "String, integer or an array of subscriber's answer, depending on the question type. Note that an array is only applicable for questions of type `multi`"  
    example:
      updated: "2019-02-05 14:59:23"
      survey:
        - name: "health_doctor_visits"
          description: "How many doctor visits do you and your dependents expect to need in the upcoming plan year?"
          type: "int"
          value: 8
        - name: "health_prescriptions"
          description: "How many prescriptions do you have in your drug cabinet?"
          type: "select"
          options: 
            - name: "Less than 3 prescriptions"
              value: "low"
            - name: "Between 4 and 7 prescriptions"
              value: "medium"
            - name: "More than 8 prescriptions"
              value: "high"
          value: "low"
        - name: "health_expected_events"
          description: "Do you expect any especially significant events during the upcoming plan year? Select all that may apply."
          type: "multi"
          options:
            - name: "Pregnancy / having a baby"
              value: "pregnancy"
            - name: "Elective surgery (e.g. knee replacement)" 
              value: "surgery"
            - name: "Retirement (you or your spouse)"
              value: "retirement"
            - name: "Loss of income (staying home with kids, etc.)"
              value: "income_loss"
          value: 
            - "pregnancy"
            - "income_loss"
#Recommendation Detail Iutput
  RecommendationDetailInput:
    type: "object"
    properties: 
      subscriber:   
            type: "integer"
            description: "Subscriber ID"
      group:   
            type: "string"
            description: "Employer group ID" 
      division:   
            type: "string"
            description: "Employer group's division ID"  
      members: 
            type: "array"
            description: "Array of all the current dependents on the subscriber's plan."
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                  description: "Plan member ID"
                is_subscriber:
                  type: "boolean"
                  description: "True if the member is the plan subscriber, false otherwise"
                name:
                  type: "string"
                  description: "Member's first name"  
                relation:
                  type: "string"
                  description: |
                    Slug describing the relation of the member to the subscriber. This takes three possible values
                      
                    `subscriber` referring to the member being the plan subscriber, 
                      
                    `spouse` referring to the member being the subscriber's spouse, 
                      
                    `child` referring to the member being the subscriber's child.      
      eligibility: 
            type: "array"
            description: "Array of all the benefits that the subscriber has access to."
            items:
              type: "object"
              properties:
                benefit_id:
                  type: "string"
                  description: "Benefit plan ID"
                benefit_type:
                  type: "boolean"
                  description: |
                    Type of the benefit plan. This takes the following possible values
                      
                    `medical` referring to the basic health plan, 
                      
                    `hospital` referring to hospital indemnity benefits.      
                
                    
    example:
      subscriber: 57122389
      group: "acmecorp"
      division: "corporate"
      members:
        - id: 57122389
          is_subscriber: true
          name: "Susan"
          relation: "subscriber"
        - id: 57122390
          is_subscriber: false
          name: "Cora"
          relation: "Spouse"  
      eligibility:
        - benefit_id: "HumanaCDHP"
          type: "medical"
        - benefit_id: "UnumHospitalGold"
          type: "hospital"     
            
# Plan Recommendation Detail Output
  RecommendationDetailOutput:
    type: "object"
    properties:
      updated: 
        type: "timestamp"
        description: "Timestamp (in UTC) of latest updated recommendations computed in the Reclaim system"
      claims_available: 
            type: "object"
            properties:
              flag: 
                type: "boolean"
                description: "True if Reclaim has mapped the medical and pharmacy claims of this subscriber and their dependants, False otherwise"
              updated: 
                type: "timestamp"
                description: "Timestamp (in UTC) recording the time the flag was updated to the current value, if applicable"
      authorized:   
            type: "object"
            properties:
              flag: 
                type: "boolean"
                description: "True if the subscriber has authorized Reclaim to use their claims to personalize their decision support, False otherwise"
              updated: 
                type: "timestamp"
                description: "Timestamp (in UTC) recording the time the flag was updated to the current value, if applicable"
      survey:   
            type: "object"
            properties:
              flag: 
                type: "boolean"
                description: "True if the subscriber has taken the subscriber enrollment survey, False otherwise"
              updated: 
                type: "timestamp"
                description: "Timestamp (in UTC) recording the time the flag was updated to the current value, if applicable"    
      recommendations:
        type: "array"
        description: "Object containing the subscriber's recommended bundled plans. Note that the recommendations are based off of consumer data and survery answers (if available) for the case where the subscriber has no claims in the Reclaim system or if they have not authorized Reclaim to use their claims data. The recommendations are based off of consumer data, survey answers (if available) and the claims data associated with the subscriber and their dependents, if the the subscriber has claims in the Reclaim system and has authorized Reclaim to use their claims data"
        items:
              type: "object"
              properties:
                confidence:
                  type: "float"
                  description: "Proportion of people like the subscriber that would save by enrolling in this bundled plan"
                cost:
                  type: "object"
                  properties:
                    low:
                      type: "float"
                      description: "Lower end of predicted total annual cost (total premiums + out-of-pocket expenses - potential reimbursements - potential group contributions) for this bundled plan"
                    high:
                      type: "float"
                      description: "Upper end of predicted total annual cost (total premiums + out-of-pocket expenses - potential reimbursements - potential group contributions) for this bundled plan"
                benefits:
                  type: "array"
                  description: "Array containing the detailed policy information within this bundled plan"
                  items:
                    type: "object"
                    properties:
                      type:
                        type: "string"
                        description: |
                          Slug describing the policy type. This can take any one of the following values:
                          
                          `basic` refers to the medical and rx plan (basic health plan)
                          
                          `hospital` refers to a supplemental hospital indemnity plan
                          
                          `accident` refers to a supplemental accident coverage plan
                          
                          `critical_illness` refers to a supplemental critical illness plan
                          
                          `disease_management` refers to a generic disease management benefit
                      id:    
                        type: "integer"
                        description: "Policy unique ID"  
                      premium:    
                        type: "float"
                        description: "Policy yearly premium"      
                      oop:    
                        type: "object"
                        description: "Object containing the predicted annual out of pocket expenses under this policy. This is only applicable for the basic policy."
                        properties:
                          low:
                            type: "float"
                            description: "Lower end of predicted annual out-of-pocket cost for the policy, if applicable"
                          high:
                            type: "float"
                            description: "Upper end of predicted annual out-of-pocket cost for the policy, if applicable"   
                      hsa:
                        type: "object"
                        description: "Object containing the HSA related information, if applicable with the basic plan."
                        properties:
                          group_contribution:
                            type: "float"
                            description: "Subscriber's employer group's contribution to the HSA, if applicable"
                          recommended_savings:
                            type: "float"
                            description: "Recommended subscriber's annual contribution to the HSA. Note that we do not have visibility into their retirement savings or contributions"      
                      fsa:
                        type: "object"
                        description: "Object containing the FSA related information, if applicable with the basic plan."
                        properties:
                          group_contribution:
                            type: "float"
                            description: "Subscriber's employer group's contribution to the FSA, if applicable"
                          recommended_savings:
                            type: "float"
                            description: "Recommended subscriber's annual contribution to the FSA based on their health needs for the upcoming plan year"                                
                      reimbursement:    
                        type: "object"
                        description: "Object containing the predicted reimbursement to the subscriber under this policy. This is only applicable for the supplemental policies (hospital, accident, and critical illness)."
                        properties:
                          probability:
                            type: "float"
                            description: "Proportion of people like the subscriber who have benefitted from such supplemental policy"
                          typical:
                            type: "float"
                            description: "Typical reimbursement implied from people like the subscriber who have benefitted from such supplemental policy"      
    example:
      updated: "2019-07-05 14:59:23"
      claims_available: 
        flag: true
        updated: "2019-05-10 12:59:29"
      authorized: 
        flag: true
        updated: "2019-07-05 14:00:29"
      survey: 
        flag: true
        updated: "2019-07-05 14:15:29"
      recommendations:
        - confidence: 0.754
          cost:
            low: 6000
            high: 7000
          benefits:
            - type: "basic"
              id: 2579285709
              premium: 4000
              oop:
                low: 3000
                high: 4000
              hsa:
                group_contribution: 1000
                recommended_savings: 5500
            - type: "hospital"
              id: 5128746926
              premium: 500
              reimbursement: 
                probability: 0.30
                typical_benefit: 2500
            - type: "disease_management"
              id: 35847948578