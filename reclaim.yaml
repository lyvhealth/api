---
swagger: "2.0"
info:
  description: |
    # Introduction
    
    The Reclaim Client API provides secure access to our hosted subscriber and group information and is available only to trusted partners under legal contract. Authorization is required for all endpoints (See Security and Authorization for the process of acquiring and access token). The api follows conventional REST guidelines. Two primary sets of resources are available, group and subscriber. Group endpoints are primarily for creating new employer groups and uploading eligibility data in csv format. Subscriber endpoints provide enrollment recommendation-related resources for individual subscribers.
    
    # Getting Started
    
    The Reclaim Client API is a REST API that is designed to access the following RESTful resources:
    
      - **group** or **groups** which provide access to employer group(s) data. Group related APIs can be accessed offline (i.e., before open enrollment), to set up an employer group, upload the features of the benefits they provide to their employees (subscribers), and to gain analytics insights that are related to their employee population.  
    
      - **subscriber** which provide access to a specific subscriber (employee) data. Subscriber related APIs can be accessed at open enrollment and are designed for real-time access as the subscriber is making decisions regarding their benefits.
    
    <br></br>
    
    To better understand the flow of how the API endpoints can be used, we consider separately the following three scenarios:
    
      - **Pre-Enrollment**: The Client can set up the employer groups, upload their corresponding eligibility files and the list of benefits and plan features they offer. 
      
      - **Open Enrollment**: The Client can access or set up a subscriber, allow them to authorize the use of their claims data, if available, and guide them through the enrollment survey and optimized bebenfit packages.
      
      - **Post Enrollment**: The Client uploads the enrollment files at least once after open enrollment. Ideally, the Client shares these enrollment files regularly, especially for groups/subscribers with claiming data in the Reclaim system.
    
    ## Pre-Enrollment
    Before subscribers enroll on the Client's platform, the Reclaim system should obtain the following information from the Client:
      - **List of Groups** for which the recommendation engine will be utilized to assist their members with their benefit enrollment
      
      - **Eligibility File** which includes the list of subscribers, their dependents, and their current benefits, if known. Note that, new subscribers may join the employer group in the interim. These subscribers can then be added to the Reclaim system in real-time at open enrollment, alongside their dependents' information.
      
      - **Benefit Features** which contains the list of benefits (basic, supplemental, and wellness) that are available for subscribers to enroll in for next plan year. Note that this file is only intended to share the schema and features of the benefits. The exact benefits a specific subscriber is eligible for will be communicated at open enrollment in real-time.
      
    Uploading files to the Reclaim system can be done via the group-specific APIs. Below is a summary flowchart indicating the steps that Reclaim takes to ingest, save, validate, and  store the eligibility and benefit data shared by the Client. 
    
    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="643px" height="1022px" viewBox="-0.5 -0.5 643 1022" style="background-color: rgb(255, 255, 255);"><defs/><g><rect x="188" y="107" width="227" height="53" fill="#ffffff" stroke="#000000" pointer-events="none"/><g transform="translate(208.5,143.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="185" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 185px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Check the status of the file upload.</font></div></div></foreignObject><text x="93" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="188" y="9" width="226" height="65" fill="#ffffff" stroke="#000000" pointer-events="none"/><g transform="translate(189.5,43.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="223" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 222px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Upload a file (eligibility or benefit features), using API endpoints.</font></div></div></foreignObject><text x="112" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="214" y="192" width="188" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(222.5,191.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="171" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 172px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'status' = 'uploading'</font></div></div></foreignObject><text x="86" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">[Not supported by viewer]</text></switch></g><rect x="477" y="36" width="110" height="110" fill="#fff2cc" stroke="#d6b656" pointer-events="none"/><g transform="translate(478.5,50.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="106" height="81" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 106px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Reclaim assigns file identifier, sets the file status to uploading, and writes file is being transferred to S3.</font></div></div></foreignObject><text x="53" y="47" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Group-Specific-Endpoints/paths/~1api~1groups~1file/post"><rect x="188" y="10" width="227" height="28" fill="#238fb2" stroke="none"/><g transform="translate(249.5,17.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="103" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 104px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">POST /groups/file</div></div></foreignObject><text x="52" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">POST /groups/file</text></switch></g></a><rect x="453" y="1" width="10" height="215" fill="#d5e8d4" stroke="#82b366"/><rect x="111.5" y="0" width="10" height="276" fill="#e1d5e7" stroke="#9673a6"/><rect x="151" y="134" width="10" height="72" fill="#e1d5e7" stroke="#9673a6"/><path d="M 128 80 L 440.63 80" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 445.88 80 L 438.88 83.5 L 440.63 80 L 438.88 76.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><a xlink:href="#tag/Group-Specific-Endpoints/paths/~1api~1groups~1file/get"><rect x="188" y="107" width="227" height="28" fill="#6bbc5b" stroke="none"/><g transform="translate(235.5,114.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="131" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 132px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">GET /groups/file/file_id</div></div></foreignObject><text x="66" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">GET /groups/file/file_id</text></switch></g></a><path d="M 168 170 L 441.13 169.51" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 446.38 169.5 L 439.39 173.01 L 441.13 169.51 L 439.38 166.01 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><path d="M 447 187 L 174.37 187" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 169.12 187 L 176.12 183.5 L 174.37 187 L 176.12 190.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><path d="M 437 251 L 134.37 251" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 129.12 251 L 136.12 247.5 L 134.37 251 L 136.12 254.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><rect x="180.5" y="256" width="227" height="15" fill="#f5f5f5" stroke="#b3b3b3"/><g transform="translate(184.5,255.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="218" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 220px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'status' = 'upload complete'</font></div></div></foreignObject><text x="109" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">&lt;font style="font-size: 13px"&gt;'status' = 'upload complete'&lt;/font&gt;</text></switch></g><rect x="151" y="322" width="10" height="72" fill="#e1d5e7" stroke="#9673a6"/><a xlink:href="#tag/Group-Specific-Endpoints/paths/~1api~1groups~1file/get"><rect x="188" y="322" width="227" height="28" fill="#6bbc5b" stroke="none"/><g transform="translate(235.5,329.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="131" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 132px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">GET /groups/file/file_id</div></div></foreignObject><text x="66" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">GET /groups/file/file_id</text></switch></g></a><path d="M 168 358 L 441.13 357.51" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 446.38 357.5 L 439.39 361.01 L 441.13 357.51 L 439.38 354.01 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><path d="M 447 375 L 174.37 375" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 169.12 375 L 176.12 371.5 L 174.37 375 L 176.12 378.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><rect x="453" y="323" width="10" height="72" fill="#d5e8d4" stroke="#82b366"/><rect x="453" y="436" width="10" height="140" fill="#d5e8d4" stroke="#82b366"/><rect x="477" y="482" width="110" height="63" fill="#fff2cc" stroke="#d6b656"/><g transform="translate(478.5,493.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="106" height="39" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 106px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Reclaim begins the validation process on the file upload.</font></div></div></foreignObject><text x="53" y="26" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="181.5" y="380.5" width="227" height="15" fill="#f5f5f5" stroke="#b3b3b3"/><g transform="translate(185.5,379.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="218" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 220px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'status' = 'upload complete'</font></div></div></foreignObject><text x="109" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">&lt;font style="font-size: 13px"&gt;'status' = 'upload complete'&lt;/font&gt;</text></switch></g><rect x="151" y="468" width="10" height="72" fill="#e1d5e7" stroke="#9673a6"/><a xlink:href="#tag/Group-Specific-Endpoints/paths/~1api~1groups~1file/get"><rect x="188" y="468" width="227" height="28" fill="#6bbc5b" stroke="none"/><g transform="translate(235.5,475.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="131" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 132px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">GET /groups/file/file_id</div></div></foreignObject><text x="66" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">GET /groups/file/file_id</text></switch></g></a><path d="M 168 504 L 441.13 503.51" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 446.38 503.5 L 439.39 507.01 L 441.13 503.51 L 439.38 500.01 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><path d="M 447 521 L 174.37 521" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 169.12 521 L 176.12 517.5 L 174.37 521 L 176.12 524.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><rect x="201.5" y="527" width="185" height="15" fill="#f5f5f5" stroke="#b3b3b3"/><g transform="translate(204.5,526.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="179" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 181px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'status' = 'validating'</font></div></div></foreignObject><text x="90" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">[Not supported by viewer]</text></switch></g><rect x="312" y="697.5" width="10" height="155" fill="#d5e8d4" stroke="#82b366"/><rect x="0" y="747.5" width="10" height="72" fill="#e1d5e7" stroke="#9673a6"/><a xlink:href="#tag/Group-Specific-Endpoints/paths/~1api~1groups~1file/get"><rect x="51" y="747.5" width="220" height="28" fill="#6bbc5b" stroke="none"/><g transform="translate(95.5,754.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="131" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 132px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">GET /groups/file/file_id</div></div></foreignObject><text x="66" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">GET /groups/file/file_id</text></switch></g></a><path d="M 16 783.5 L 300.13 783.01" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 305.38 783 L 298.39 786.51 L 300.13 783.01 L 298.38 779.51 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><path d="M 306 800.5 L 22.37 800.5" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 17.12 800.5 L 24.12 797 L 22.37 800.5 L 24.12 804 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><rect x="27.5" y="806.5" width="279" height="15" fill="#f5f5f5" stroke="#b3b3b3"/><g transform="translate(34.5,805.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="265" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 267px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'status' = 'validation successful'</font></div></div></foreignObject><text x="133" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">&lt;font style="font-size: 13px"&gt;'status' = 'validation successful'&lt;/font&gt;</text></switch></g><rect x="108" y="610" width="199" height="58" fill="#fff2cc" stroke="#d6b656"/><g transform="translate(109.5,619.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="195" height="39" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 195px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Validation is successful. </font><span>Reclaim stores data from file into database, ready for client to review.</span></div></div></foreignObject><text x="98" y="26" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="362" y="331" width="10" height="520" fill="#333333" stroke="none" transform="rotate(90,367,591)"/><path d="M 316 600.5 L 316 684.63" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 316 689.88 L 312.5 682.88 L 316 684.63 L 319.5 682.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><rect x="426" y="610" width="203" height="60" fill="#fff2cc" stroke="#d6b656"/><g transform="translate(427.5,620.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="199" height="39" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 199px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Validation failed. Reclaim reaches out to Client and issues list of errors to help Client debug file uploads.</font></div></div></foreignObject><text x="100" y="26" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="0" y="902" width="10" height="72" fill="#e1d5e7" stroke="#9673a6"/><a xlink:href="#tag/Group-Specific-Endpoints/paths/~1api~1groups~1file/get"><rect x="42.5" y="902.5" width="220" height="28" fill="#6bbc5b" stroke="none"/><g transform="translate(86.5,909.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="131" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 132px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">GET /groups/file/file_id</div></div></foreignObject><text x="66" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">GET /groups/file/file_id</text></switch></g></a><path d="M 16 938 L 300.13 937.51" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 305.38 937.5 L 298.39 941.01 L 300.13 937.51 L 298.38 934.01 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><path d="M 306 955 L 22.37 955" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 17.12 955 L 24.12 951.5 L 22.37 955 L 24.12 958.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><rect x="60" y="961" width="185" height="15" fill="#f5f5f5" stroke="#b3b3b3"/><g transform="translate(66.5,960.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="171" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 174px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'status' = 'available'</font></div></div></foreignObject><text x="86" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">[Not supported by viewer]</text></switch></g><path d="M 415.5 600 L 415.01 1006.63" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 415 1011.88 L 411.51 1004.88 L 415.01 1006.63 L 418.51 1004.89 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><rect x="632" y="841" width="10" height="72" fill="#e1d5e7" stroke="#9673a6"/><a xlink:href="#tag/Group-Specific-Endpoints/paths/~1api~1groups~1file/get"><rect x="441" y="847" width="171" height="28" fill="#6bbc5b" stroke="none"/><g transform="translate(460.5,854.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="131" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 132px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">GET /groups/file/file_id</div></div></foreignObject><text x="66" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">GET /groups/file/file_id</text></switch></g></a><path d="M 422 900 L 615.63 900" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 620.88 900 L 613.88 903.5 L 615.63 900 L 613.88 896.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><path d="M 622 882 L 428.37 882" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 423.12 882 L 430.12 878.5 L 428.37 882 L 430.12 885.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/><rect x="449.5" y="910" width="154" height="15" fill="#f5f5f5" stroke="#b3b3b3"/><g transform="translate(452.5,909.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="148" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 150px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'status' = 'failed'</font></div></div></foreignObject><text x="74" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">[Not supported by viewer]</text></switch></g><path d="M 316 861 L 316 1005.63" fill="none" stroke="#000000" stroke-miterlimit="10"/><path d="M 316 1010.88 L 312.5 1003.88 L 316 1005.63 L 319.5 1003.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10"/></g></svg>
    
    ## Open Enrollment
    Now fast-forward to the time a specific subscriber is ready to start enrolling in their benefits on the Client's platform.
    
    Our assumption is that by the time the Client is ready to enroll a subscriber in their benefits, Reclaim has already ingested the benefit features available to the subscriber's group ahead of time. Note that, Reclaim does not know which of these benefits is the subscriber specifically eligible for. 
    
    Furthermore, while the Client may have shared an eligibility file ahead of open enrollment, the subscriber in question may have joined their employer group recently and therefore may not exist in the Reclaim system. Under this scenario, the Client can add that subscriber's information, along with that of their dependents (members). 
    
    Below is a summary flowchart indicating the minimum steps required for the open enrollment API flow. Click on the POST and GET methods below to delve into the details of the schemas of the expected request payload and the expected outputs, along with sample examples.
    
    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="630px" height="1061px" viewBox="-0.5 -0.5 630 1061" style="background-color: rgb(255, 255, 255);"><defs/><g><rect x="0" y="0" width="180" height="50" fill="#fff2cc" stroke="#d6b656" pointer-events="none"/><g transform="translate(1.5,5.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="176" height="39" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 176px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Subscriber (employee) ready to enroll in next year's benefits on Client platform.</font></div></div></foreignObject><text x="88" y="26" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="217.5" y="107.5" width="158" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(221.5,106.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="149" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 149px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'status': 'success'</font></div></div></foreignObject><text x="75" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">[Not supported by viewer]</text></switch></g><path d="M 298 100 L 298 70" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="385.5" y="94.5" width="150" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(393.5,93.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="133" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 134px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px"><b>'status': 'error'</b></font></div></div></foreignObject><text x="67" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New">[Not supported by viewer]</text></switch></g><path d="M 460.5 115 L 460.5 133.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 460.5 138.88 L 457 131.88 L 460.5 133.63 L 464 131.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 297 128 L 297 143 Q 297 153 297.07 163 L 297.95 283.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 297.99 288.88 L 294.44 281.91 L 297.95 283.63 L 301.44 281.86 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="101" y="292" width="510" height="50" fill="#fff2cc" stroke="#d6b656" pointer-events="none"/><g transform="translate(102.5,303.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="506" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 506px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">The output will indicate whether the subscriber and their members have claims data available and whether they have authorized their use, or not.</font></div></div></foreignObject><text x="253" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">&lt;font color="#333333" style="font-size: 12px"&gt;The output will indicate whether the subscriber and their members have claims data available and whether they have authorized their use, or not.&lt;/font&gt;</text></switch></g><path d="M 90 452 L 90 583.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 90 588.88 L 86.5 581.88 L 90 583.63 L 93.5 581.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 460.5 90 L 460.5 70" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="378" y="238" width="165" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(385.5,237.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="149" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 149px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'status': 'success'</font></div></div></foreignObject><text x="75" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">[Not supported by viewer]</text></switch></g><path d="M 460.5 260 L 460.5 283.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 460.5 288.88 L 457 281.88 L 460.5 283.63 L 464 281.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 460.5 233 L 460.5 213" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="388.5" y="372" width="223" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(394.5,371.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="211" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 211px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'claims.available': 'false'</font></div></div></foreignObject><text x="106" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">&lt;font style="font-size: 13px"&gt;'claims.available': 'false'&lt;/font&gt;</text></switch></g><path d="M 499 391 L 499.49 683.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 499.5 688.88 L 495.99 681.89 L 499.49 683.63 L 502.99 681.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="69.5" y="372" width="223" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(78.5,371.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="204" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 204px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'claims.available': 'true'</font></div></div></foreignObject><text x="102" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">&lt;font style="font-size: 13px"&gt;'claims.available': 'true'&lt;/font&gt;</text></switch></g><path d="M 180.5 368 L 180.5 346" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="2" y="432" width="175" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(11.5,431.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="156" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 156px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'authorized': 'true'</font></div></div></foreignObject><text x="78" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">[Not supported by viewer]</text></switch></g><path d="M 89 428 L 89 390" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="182.5" y="412.5" width="180" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(190.5,411.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="164" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 166px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'authorized': 'false'</font></div></div></foreignObject><text x="82" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">[Not supported by viewer]</text></switch></g><path d="M 272 410 L 272 391" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 272 430.5 L 272 443.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 272 448.88 L 268.5 441.88 L 272 443.63 L 275.5 441.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="96" y="546" width="168" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(101.5,545.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="156" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 157px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'authorized'+ 'true'</font></div></div></foreignObject><text x="78" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">[Not supported by viewer]</text></switch></g><path d="M 179.5 543 L 179.5 524" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 180 566 L 180 582.13" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 180 587.38 L 176.5 580.38 L 180 582.13 L 183.5 580.38 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="282.5" y="546" width="178" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(288.5,545.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="165" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 165px; white-space: nowrap; overflow-wrap: normal; font-weight: bold; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'authorized': 'false'</font></div></div></foreignObject><text x="83" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New" font-weight="bold">[Not supported by viewer]</text></switch></g><path d="M 371 540 L 371 525.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 372 566.5 L 372 681.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 372 686.88 L 368.5 679.88 L 372 681.63 L 375.5 679.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 136 663.5 L 136 681.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 136 686.88 L 132.5 679.88 L 136 681.63 L 139.5 679.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 186 25 L 249.63 24.55" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 254.88 24.51 L 247.91 28.06 L 249.63 24.55 L 247.86 21.06 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 499 347 L 499 367" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="70" y="693" width="540" height="25" fill="#fff2cc" stroke="#d6b656" pointer-events="none"/><g transform="translate(76.5,699.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="526" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 526px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Subscriber now starts the survey. Client can filter survey questions based on flag 'ignore_if_claims'.</font></div></div></foreignObject><text x="263" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">&lt;font color="#333333" style="font-size: 12px"&gt;Subscriber now starts the survey. Client can filter survey questions based on flag 'ignore_if_claims'.&lt;/font&gt;</text></switch></g><path d="M 350 722 L 350 740.13" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 350 745.38 L 346.5 738.38 L 350 740.13 L 353.5 738.38 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 351.5 804 L 351.5 822.13" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 351.5 827.38 L 348 820.38 L 351.5 822.13 L 355 820.38 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="69" y="912" width="560" height="50" fill="#fff2cc" stroke="#d6b656" pointer-events="none"/><g transform="translate(70.5,923.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="556" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 556px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Subscriber now is ready to get their optimal bundle recommendations. Client may auto-enroll subscriber iteratively into basic plans before posting subscriber's eligible plans to Reclaim. </font></div></div></foreignObject><text x="278" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><path d="M 350 887 L 350 900.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 350 905.88 L 346.5 898.88 L 350 900.63 L 353.5 898.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 352.5 966 L 352.5 984.13" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 352.5 989.38 L 349 982.38 L 352.5 984.13 L 356 982.38 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="261" y="0" width="240" height="65" fill="#ffffff" stroke="#000000" pointer-events="none"/><g transform="translate(262.5,34.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="236" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 236px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Check if Reclaim has subscriber info from an earlier eligibility file ingest.</font></div></div></foreignObject><text x="118" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Subscriber-Specific-Endpoints/paths/~1api~1subscriber~1[subscriber_id]/get"><rect x="260.5" y="0" width="240" height="28" fill="#6bbc5b" stroke="none"/><g transform="translate(289.5,7.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="181" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 184px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">GET /subscriber/[subscriber_id]</div></div></foreignObject><text x="91" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">GET /subscriber/[subscriber_id]</text></switch></g></a><rect x="340.5" y="145" width="240" height="65" fill="#ffffff" stroke="#000000"/><g transform="translate(342.5,179.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="236" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 236px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Subscriber is not in Reclaim system. Add subscriber and their member information.</font></div></div></foreignObject><text x="118" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Subscriber-Specific-Endpoints/paths/~1api~1subscriber/post"><rect x="340.5" y="145" width="240" height="28" fill="#238fb2" stroke="none"/><g transform="translate(408.5,152.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="103" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 104px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">POST /subscriber</div></div></foreignObject><text x="52" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">POST /subscriber</text></switch></g></a><rect x="147.5" y="454.5" width="250" height="65" fill="#ffffff" stroke="#000000"/><g transform="translate(149.5,489.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="246" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 246px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Subscriber authorize claims through Client. Client posts subscriber response.</font></div></div></foreignObject><text x="123" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Subscriber-Specific-Endpoints/paths/~1subscriber~1[subscriber_id]~1authorize/post"><rect x="147.5" y="454.5" width="250" height="28" fill="#238fb2" stroke="none"/><g transform="translate(151.5,461.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="241" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 241px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">POST /subscriber/subscriber_id/authorize</font></div></div></foreignObject><text x="121" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">&lt;font style="font-size: 13px"&gt;POST /subscriber/subscriber_id/authorize&lt;/font&gt;</text></switch></g></a><rect x="10.5" y="595.5" width="250" height="65" fill="#ffffff" stroke="#000000"/><g transform="translate(12.5,630.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="246" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 246px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Subscriber reviews current year claims and plan performance before the survey.</font></div></div></foreignObject><text x="123" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Subscriber-Specific-Endpoints/paths/~1subscriber~1[subscriber_id]~1review/get"><rect x="11" y="596" width="250" height="28" fill="#6bbc5b" stroke="none"/><g transform="translate(23.5,603.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="224" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 224px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">GET /subscriber/[subscriber_id]/review</div></div></foreignObject><text x="112" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">GET /subscriber/[subscriber_id]/review</text></switch></g></a><rect x="230" y="750" width="240" height="50" fill="#ffffff" stroke="#000000"/><g transform="translate(249.5,783.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="201" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 201px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Client list and filters survey questions.</font></div></div></foreignObject><text x="101" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Subscriber-Specific-Endpoints/paths/~1subscriber~1[subscriber_id]~1surveys/get"><rect x="229" y="750" width="240" height="28" fill="#6bbc5b" stroke="none"/><g transform="translate(233.5,757.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="231" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 231px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">GET /subscriber/[subscriber_id]/surveys</div></div></foreignObject><text x="116" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">GET /subscriber/[subscriber_id]/surveys</text></switch></g></a><rect x="228.5" y="832" width="240" height="50" fill="#ffffff" stroke="#000000"/><g transform="translate(257.5,865.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="181" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 181px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Client posts subscriber's answers.</font></div></div></foreignObject><text x="91" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Subscriber-Specific-Endpoints/paths/~1subscriber~1[subscriber_id]~1surveys/post"><rect x="228.5" y="832" width="241" height="28" fill="#238fb2" stroke="none"/><g transform="translate(233.5,839.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="231" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 234px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">POST /subscriber/subscriber_id/surveys</font></div></div></foreignObject><text x="116" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">&lt;font style="font-size: 13px"&gt;POST /subscriber/subscriber_id/surveys&lt;/font&gt;</text></switch></g></a><rect x="200" y="994" width="300" height="66" fill="#ffffff" stroke="#000000"/><g transform="translate(201.5,1029.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="296" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 296px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Client posts subscriber's list of eligible benefits. Reclaim outputs the optimal benefit bundle(s). </font></div></div></foreignObject><text x="148" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Subscriber-Specific-Endpoints/paths/~1subscriber~1[subscriber_id]~1recommendation/post"><rect x="200" y="994" width="300" height="28" fill="#238fb2" stroke="none"/><g transform="translate(207.5,1001.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="285" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 285px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">POST /subscriber/subscriber_id/recommendation</font></div></div></foreignObject><text x="143" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">&lt;font style="font-size: 13px"&gt;POST /subscriber/subscriber_id/recommendation&lt;/font&gt;</text></switch></g></a></g></svg>

    Note that the Reclaim API includes a wider array of methods and resources that you can access, well beyond those presented in the flowchart above. The rest of the documentation attempts to delve into the details of both the group-specific and the subscriber-specific endpoints.
    
    ## Post-Enrollment
    After subscribers enroll on the Client's platform, the Reclaim system should obtain the following information from the Client:
    
      - **Completed Enrollment File**, especially for groups with claims data in the Reclaim system. 
      
      - **Regular Eligibility Files**, preferably monthly throughout the plan year, for groups with claims data in the Reclaim system. This helps Reclaim stay updated with the benefits that subscribers have enrolled in to effectively engage them with their benefits throughout the year.
      
    Uploading files to the Reclaim system can be done via the group-specific APIs. 
    

    # Service Help Desk
    
    To reach our team for any questions or to highlight issues with any of the processes related to the Reclaim API, please feel free to issue a request using our <a href="https://re-claim.atlassian.net/servicedesk/customer/portal/1" target="_blank"> **SERVICE HELP CENTER**</a>. Note that our help center is powered by Jira, and your Jira user needs to be created internally by Reclaim to be able to log in to our help desk center.
    
  
  version: "v0.2"
  title: "RECLAIM Backend APIs"
host: "sandbox.reclaim.health/api"
x-logo:
   url: 'https://rebilly.github.io/ReDoc/petstore-logo.png'


#![foo](https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png 'title')
#You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For this sample, you can use the api key `special-key` to test the authorization filters.

#This API is documented in **OpenAPI format** and is based on [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team. It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo) tool and [ReDoc](https://github.com/Rebilly/ReDoc) documentation. In addition to standard OpenAPI syntax we use a few [vendor extensions](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md).

### OpenAPI Specification
#    This API is documented in **OpenAPI format** and is based on
#    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
#    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
#    tool and [ReDoc](https://github.com/Rebilly/ReDoc) documentation. In addition to standard
#    OpenAPI syntax we use a few [vendor extensions](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md).
#    # Cross-Origin Resource Sharing
#    This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).
#    And that allows cross-domain communication from the browser.
#    All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.
#    # Authentication
#    Petstore offers two forms of authentication:
#      - API Key
#      - OAuth2
#
    

tags:
- name: "Security and Authorization"
  description: |   
    ## Security
    All calls to Reclaim’s APIs are encrypted over HTTPS. Our APIs support connections using TLS version 1.2 or higher. All modern languages and frameworks support TLS 1.2 (although specific older ones do not).
    
#    While these examples illustrate the typical process of obtaining an access token and then properly utilizing that token in an Authorization header for subsequent API requests, be aware that it is extremely inefficient to request a new token if you already obtained one that is still valid (note the number of seconds specified in the expires_in parameter in the cURL example’s response). For this reason we recommend using a PokitDok client library, giving you the ability to instantiate and use a long-lived PokitDok client connection that provides automatic handling of token retrieval, expiration, and rotation.
- name: "Group-Specific Endpoints"
  description: "This section documents the available endpoints associated with open enrollment. These endpoints come from the perspective of obtaining or updating information specific to a subscriber. Following the Reclaim terminology, an employee who enrolls their family in an employer-sponsored plan is the subscriber of the plan."
- name: "Subscriber-Specific Endpoints"
  description: "This section documents the available endpoints associated with open enrollment. These endpoints come from the perspective of obtaining or updating information specific to a subscriber. Following the Reclaim terminology, an employee who enrolls their family in an employer-sponsored plan is the subscriber of the plan."
schemes:
- "https"
paths:
  /oauth2/token:
    post:
      tags:
      - "Security and Authorization"
      summary: "Authorization via OAuth2"
      description: |   
       All API methods requires authentication via an oauth2 token.  This endpoint returns a token for valid client identifiers and secrets provided in the authentication header of the request.  Tokens will expire after 3600 seconds (1 hour) unless refreshed or revoked.
    
       The auth flow follows the following steps: 
         - A client encodes its `client key` and `secret key` into a specially encoded set of credentials. 
         - A client makes a request to the POST oauth2 / token endpoint to exchange these credentials for a bearer token.
         - When accessing the REST API, the client uses the bearer token to authenticate.

       In the cURL tab to the right you can see an example of obtaining an access token via the command line. Likewise, the Python tab contains an example of authorization from scratch using the popular requests library. 
       
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AuthOutput"   
      x-code-samples:
      - lang: "cURL"
        source: |                             
            # define your client id and secret
            CLIENT_ID=<YOUR_CLIENT_ID>
            CLIENT_SECRET=<YOUR_CLIENT_SECRET>

            # request an access token
            curl -X POST -u $CLIENT_ID:$CLIENT_SECRET -d "grant_type=client_credentials" https://sandbox.reclaim.health/oauth2/token

            # the response from https://sandbox.reclaim.health/oauth2/token
            {
              "access_token": "[token]",
              "expires_in": 3600,
              "token_type": "Bearer"
            }
   
      - lang: "Python"
        source: |
            # define your client id and secret
            client_id     = <YOUR_CLIENT_ID>
            client_secret = <YOUR_CLIENT_SECRET>

            # request an access token
            r = requests.post (url    = "https://sandbox.reclaim.health/oauth2/token',
                               params = {"grant_type": "client_credentials"},
                               auth   = (client_id, client_secret))
            access_token = r.json () ['access_token']                                              
  /api/groups:
    get:
      tags:
      - "Group-Specific Endpoints"
      summary: "List Available Groups"
      description: "This endpoints allows the client to list all the available group IDs in the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/GroupListDetailOutput" 
    post:
      tags:
      - "Group-Specific Endpoints"
      summary: "Adding Groups"
      description: "This endpoint allows the client to add employer groups to the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AddGroupDetailInput"
        required: true
        schema:
          $ref: "#/definitions/AddGroupDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AddGroupDetailOutput" 
  /api/groups/file:
    post:
      tags:
      - "Group-Specific Endpoints"
      summary: "Upload Eligibility/Benefit File"
      description: |
        This endpoint allows the client to add a group eligibility or benefit file in the Reclaim system. Note that the type of file to upload should be provided in the header of the API. File types include
        
        `eligibility` referring to a group's eligibility file. 
        
        `basic` referring to a group's basic plans offerings and their attributes.
        
        `savings` referring to a group's HSA/FSA/HRA offerings and their attributes.
        
        `hospital` referring to a group's supplemental hospital indemnity offerings and their attributes.
        
        `accident` referring to a group's supplemental accident policy offerings and their attributes.
        
        `critical_illness` referring to a group's supplemental accident policy offerings and their attributes.
        
        <b> Discuss with Client types of voluntary benefits to include in recommendations. </b>
        
        <details>
        <summary id="text" onClick="function()"><font color="blue"><u> Click for Reclaim's preferred schema details for each of the file types</u></font></summary>
        <p>
        <br/>
        <b> Eligibility file schema </b>
        <table id="table" style="width:100%">
          <tr>
            <th>column</th>
            <th>description</th> 
            <th>type</th>
            <th>example</th>
          </tr>
          <tr>
            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2019</td>
          </tr>
          <tr>
            <td> group</td><td> Employer group code</td><td> string</td><td> acme</td>
          </tr>
          <tr>
            <td> division</td><td> Employer division code</td><td> string</td><td> corporate</td>
          </tr>
          <tr>
            <td> subscriber_id</td><td> Plan subscriber ID</td><td> integer</td><td> 579635785</td>
          </tr>
          <tr>
            <td> subscriber_ssn</td><td> Plan subscriber's social security </td><td> integer</td><td> 1234567890</td>
          </tr>
          <tr>
            <td> subscriber_dob</td><td> Plan subscriber's date of birth</td><td> date</td><td> 1980-03-24</td>
          </tr>
          <tr>
            <td> subscriber_gender</td><td> Plan subscriber's gender</td><td> string</td><td> m/f</td>
          </tr>
          <tr>
            <td> subscriber_first_name</td><td> Plan subscriber's first name</td><td> string</td><td> Rose </td>
          </tr>
          <tr>
            <td> subscriber_middle_name</td><td> Plan subscriber's middle name</td><td> string</td><td> T </td>
          </tr>
          <tr>
            <td> subscriber_last_name</td><td> Plan subscriber's last name</td><td> string</td><td> Petal </td>
          </tr>
          <tr>
            <td> subscriber_address_1</td><td> Plan subscriber street address (first line)</td><td> string</td><td> 123 Street</td>
          </tr>
          <tr>
            <td> subscriber_address_2</td><td> Plan subscriber street address (second line)</td><td> string</td><td>#1</td>
          </tr>
          <tr>
            <td> subscriber_city</td><td> Plan subscriber city address</td><td> string</td><td> Cambridge</td>
          </tr>
          <tr>
            <td> subscriber_state</td><td> Plan subscriber state address</td><td> string</td><td> MA</td>
          </tr>
          <tr>
            <td> subscriber_zip</td><td> Plan subscriber zip code</td><td> string</td><td> 02139</td>
          </tr>
          <tr>
            <td> subscriber_status</td><td> Plan subscriber status</td><td> string</td><td> active</td>
          </tr>
          <tr>
            <td> member_id</td><td> Plan member ID</td><td> integer</td><td> 579635786</td>
          </tr>
          <tr>
            <td> member_ssn</td><td> Plan subscriber's social security</td><td> integer</td><td> 1234567891</td>
          </tr>
          <tr>
            <td> member_dob</td><td> Plan member's date of birth</td><td> date</td><td> 2010-04-26</td>
          </tr>
          <tr>
            <td> member_gender</td><td> Plan member's gender</td><td> string</td><td> female</td>
          </tr>
          <tr>
            <td> member_first_name</td><td> Plan member's first name</td><td> string</td><td> Jane </td>
          </tr>
          <tr>
            <td> member_middle_name</td><td> Plan member's middle name</td><td> string</td><td> T </td>
          </tr>
          <tr>
            <td> member_last_name</td><td> Plan member's last name</td><td> string</td><td> Petal </td>
          </tr>
          <tr>
            <td> member_address_1</td><td> Plan member street address (first line)</td><td> string</td><td> 123 Street</td>
          </tr>
          <tr>
            <td> subscriber_address_2</td><td> Plan subscriber street address (second line)</td><td> string</td><td>#1</td>
          </tr>
          <tr>
            <td> member_city</td><td> Plan member city address</td><td> string</td><td> Cambridge</td>
          </tr>
          <tr>
            <td> member_state</td><td> Plan member state address</td><td> string</td><td> MA</td>
          </tr>
          <tr>
            <td> member_zip</td><td> Plan member zip code</td><td> string </td><td> 02139</td>
          </tr>
            <td> member_relation</td><td> Member's relation to subscriber </td><td> string </td><td> child/spouse</td>
          </tr>
          <tr>
            <td> member_status</td><td> Plan member status</td><td> string</td><td> active</td>
          </tr>
          <tr>
            <td> benefit</td><td> Benefit plan ID (if enrolled)</td><td> string</td><td> hdhp_13958</td>
          </tr>
          <tr>
            <td> benefit_start</td><td> Coverage start date (if enrolled)</td><td> date</td><td> 2019-01-01</td
          </tr>
          <tr>
            <td> benefit_end</td><td> Coverage end date (if known)</td><td> date</td><td>2019-12-31</td>
          </tr>
          <tr>
            <td> benefit_type</td><td> Benefit plan type (if enrolled)</td><td> string</td><td> basic</td>
          </tr>
          <tr>
            <td> eligible_benefits</td><td> List of all eligible benefit IDs</td><td> string</td><td> 0220D|A4970|SP1035 </td>
          </tr>
        </table>
        <button type="button" style="background-color:#4CAF50;color:white;width:250px;height:40px;font-size:14px;"> <a href="docs/eligibility.csv" download="eligibility.csv" style="color:white;font-size:14px;"> EXPORT SCHEMA TO CSV </a>  </button>  
        
        </p>
        
        <p>
        <br/>
        <b> Basic health plan file schema </b>
        <table id="table2" style="width:100%">
          <tr>
            <th>column</th>
            <th>description</th> 
            <th>type</th>
            <th>example</th>
          </tr>
          <tr>
            <td> id </td><td> Benefit plan ID </td><td> string </td><td> A1025 </td>
          </tr>
          <tr>
            <td> parent_id </td><td> Benefit parent ID </td><td> string </td><td> A1025 </td>
          </tr>
          <tr>
            <td> name </td><td> Benefit plan user-friendly name </td><td> string </td><td> HDHP Choice Base Plus </td>
          </tr>
          <tr>
            <td> description </td><td> Benefit plan description </td><td> string </td><td> HDHP Choice Base Plus </td>
          </tr>
          <tr>
            <td> type </td><td> Benefit plan type </td><td> string </td><td> basic </td>
          </tr>
           <tr> 
            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2019</td>
          </tr>
          <tr> 
            <td> group</td><td> Employer group short descriptor </td><td> string </td><td> acme </td>
          </tr>
          <tr> 
            <td> division</td><td> Employer group division code </td><td> string </td><td> corporate </td>
          </tr>
          <tr>    
            <td> start_date </td><td> Plan start date</td><td> date</td><td> 1/1/20 </td>
          </tr>
          <tr>
            <td> end_date </td><td> Plan end date</td><td> date</td><td> 12/31/20 </td>
          </tr>
          <tr>    
            <td> ee_premium </td><td> Monthly premium for subscriber only</td><td> float</td><td> 356.7</td>
          </tr>
          <tr>
            <td> ec_premium </td><td> Monthly premium for subscriber and children dependents</td><td> float</td><td> 456.7</td>
          </tr>
          <tr>
            <td> es_premium </td><td> Monthly premium for subscriber and spouse</td><td> float</td><td> 556.7</td>
          </tr>
          <tr>
            <td> ef_premium </td><td> Monthly premium for subscriber and family (spouse and children)</td><td> float</td><td> 656.7</td>
          </tr>
          <tr>
            <td> carrier </td><td> Carrier name </td><td> string </td><td> United Healthcare</td>
          </tr>
          <tr>
            <td> network </td><td> Plan network </td><td> string </td><td> nexus</td>
          </tr>
          <tr>
            <td> claim_type </td><td> Type of medical/pharmacy claims under the plan </td><td> string </td><td> MED|RX </td>
          </tr>
          <tr>
            <td> in_network_ee_deductible </td><td> In network deductible for subscriber only plan; if applicable</td><td> integer </td><td> 1500</td>
          </tr>
          <tr>
            <td> in_network_ef_deductible </td><td> In network deductible for subscriber and dependents; if applicable</td><td> integer </td><td> 3000</td>
          </tr>
          <tr>
            <td> out_network_ee_deductible </td><td> Out-of network deductible for subscriber only plan; if applicable</td><td> integer </td><td> 3000</td>
          </tr>
          <tr>
            <td> out_network_ef_deductible </td><td> Out-of network deductible for subscriber and dependents; if applicable</td><td> integer </td><td> 6000</td>
          </tr>
          <tr>
            <td> in_network_ee_oop_max </td><td> In network out-of-pocket max for subscriber only plan; if applicable</td><td> integer </td><td> 3000</td>
          </tr>
          <tr>
            <td> in_network_ef_oop_max </td><td> In network out-of-pocket max for subscriber and dependents; if applicable</td><td> integer </td><td> 6000</td>
          </tr>
          <tr>
            <td> out_network_ee_oop_max </td><td> Out-of network out-of-pocket max for subscriber only plan; if applicable</td><td> integer </td><td> 6000</td>
          </tr>
          <tr>
            <td> out_network_ef_oop_max </td><td> Out-of network out-of-pocket max for subscriber and dependents; if applicable</td><td> integer </td><td> 10000</td>
          </tr>
          <tr>
            <td> in_network_coinsurance </td><td> In network coinsurance; if applicable</td><td> integer </td><td> 20</td>
          </tr>
          <tr>
            <td> out_network_coinsurance </td><td> Out-of network coinsurance; if applicable</td><td> integer </td><td> 30</td>
          </tr>
        </table>
        
        <button type="button" style="background-color:#4CAF50;color:white;width:250px;height:40px;font-size:14px;"> <a href="docs/basic.csv" download="basic_plans.csv" style="color:white;font-size:14px;"> EXPORT SCHEMA TO CSV </a>  </button>  
        
        </p>
        
        <p>
        <br/>
        <b> Health savings plan file schema </b>
        <table id="table2" style="width:100%">
          <tr>
            <th>column</th>
            <th>description</th> 
            <th>type</th>
            <th>example</th>
          </tr>
          <tr>
            <td> id </td><td> Benefit plan ID </td><td> string </td><td> 11225 </td>
          </tr>
          <tr>
            <td> parent_id </td><td> Benefit parent ID </td><td> string </td><td> B1122 </td>
          </tr>
          <tr>
            <td> name </td><td> Benefit plan user-friendly name </td><td> string </td><td> HSA </td>
          </tr>
          <tr>
            <td> description </td><td> Benefit plan description </td><td> string </td><td> Fidelity HSA </td>
          </tr>
          <tr>
            <td> type </td><td> Savings plan type (hsa, fsa, hra) </td><td> string </td><td> hsa </td>
          </tr>
           <tr> 
            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2020</td>
          </tr>
          <tr> 
            <td> group</td><td> Employer group short descriptor </td><td> string </td><td> acme </td>
          </tr>
          <tr> 
            <td> division</td><td> Employer group division code </td><td> string </td><td> corporate </td>
          </tr>
          <tr>    
            <td> start_date </td><td> Plan start date</td><td> date</td><td> 1/1/20 </td>
          </tr>
          <tr>
            <td> end_date </td><td> Plan end date</td><td> date</td><td> 12/31/20 </td>
          </tr>
          <tr>    
            <td> ee_group_contribution </td><td> Employer group contribution for single coverage, if applicable </td><td> float</td><td> 1000</td>
          </tr>
          <tr>    
            <td> ef_group_contribution </td><td> Employer group contribution for family coverage, if applicable </td><td> float</td><td> 2000</td>
          </tr>
          <tr>    
            <td> ee_max_contribution </td><td> Maximum total contribution for single coverage </td><td> float</td><td> 3550 </td>
          </tr>
          <tr>    
            <td> ef_max_contribution </td><td> Maximum total contribution for family coverage </td><td> float</td><td> 7100 </td>
          </tr>
          <tr>    
            <td> bank </td><td> Bank administering savings plan </td><td> string</td><td> Fidelity </td>
          </tr>
        </table>
        
        <button type="button" style="background-color:#4CAF50;color:white;width:250px;height:40px;font-size:14px;"> <a href="docs/savings.csv" download="health_savings.csv" style="color:white;font-size:14px;"> EXPORT SCHEMA TO CSV </a>  </button>  
        
        </p>
        
        <p>
        <br/>
        <b> Supplemental hospital indemnity file schema </b>
        <table id="table2" style="width:100%">
          <tr>
            <th>column</th>
            <th>description</th> 
            <th>type</th>
            <th>example</th>
          </tr>
          <tr>
            <td> id </td><td> Benefit plan ID </td><td> string </td><td> SP1035 </td>
          </tr>
          <tr>
            <td> parent_id </td><td> Benefit parent ID </td><td> string </td><td> SP1035 </td>
          </tr>
          <tr>
            <td> name</td><td> Benefit plan user-friendly name </td><td> string </td><td> Aflac Hospital </td>
          </tr>
          <tr>
            <td> description </td><td> Benefit plan user-friendly description </td><td> string </td><td> Aflac Hospital Bronze Benefit </td>
          </tr>
          <tr>
            <td> type </td><td> Benefit plan type </td><td> string </td><td> hospital </td>
          </tr>
           <tr> 
            <td> group</td><td> Employer group code </td><td> string </td><td> acme </td>
          </tr>
          <tr> 
            <td> division</td><td> Employer group division code </td><td> string </td><td> corporate </td>
          </tr>
          <tr> 
            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2019</td>
          </tr>
          <tr>    
            <td> start_date </td><td> Plan start date</td><td> date</td><td> 2019-01-01</td>
          </tr>
          <tr>
            <td> end_date </td><td> Plan end date</td><td> date</td><td> 2019-12-31</td>
          </tr>
          <tr>    
            <td> ee_premium </td><td> Monthly premium for subscriber only</td><td> float</td><td> 50.7</td>
          </tr>
          <tr>
            <td> ec_premium </td><td> Monthly premium for subscriber and children dependents</td><td> float</td><td> 66.7</td>
          </tr>
          <tr>
            <td> es_premium </td><td> Monthly premium for subscriber and spouse</td><td> float</td><td> 76.7</td>
          </tr>
          <tr>
            <td> ef_premium </td><td> Monthly premium for subscriber and family (spouse and children)</td><td> float</td><td> 86.7</td>
          </tr>
          <tr>
            <td> carrier </td><td> Carrier name </td><td> string </td><td> Aflac </td>
          </tr>
          <tr>
            <td> overall_limit </td><td> Overall limit of reimbursement per service </td><td> integer </td><td> 1</td>
          </tr>
           <tr>
            <td> overall_limit_unit </td><td> Unit of overall limit of reimbursement (e.g., calendar_year) </td><td> string </td><td> calendar_year </td>
          </tr>
          <tr>
            <td> service </td> <td> Service for which the benefit applies (admission, stay, icu) </td><td> string</td><td> admission</td>
          </tr>
          <tr>
            <td> reimbursement </td> <td> Reimbursement eligible for associated service </td><td> integer</td><td> 1000 </td>
          </tr>
          <tr>
            <td> limit </td> <td> Maximum limit (days, number of visits, etc.) eligible for benefit</td><td> integer</td><td> 1</td>
          </tr>
          <tr>
            <td> limit_unit </td> <td> Unit corresponding to maximum limit (e.g., calendar_year, days) </td><td> string</td><td> calendar_year</td>
          </tr>
          <tr>
            <td> preexisting_conditions_limitation </td> <td> Flag whether preexiting conditions apply for the plan</td><td> boolean </td><td> TRUE</td>
          </tr>
          <tr>
            <td> months_pre_coverage </td> <td> If applicable, number of months pre-coverage for preexisting conditions </td><td> integer </td><td> 12</td>
          </tr>
          <tr>
            <td> months_post_coverage </td> <td> If applicable, number of months post-coverage for preexisting conditions</td><td> integer </td><td> 12</td>
          </tr>
        </table>
        <button type="button" style="background-color:#4CAF50;color:white;width:250px;height:40px;font-size:14px;"> <a href="docs/hospital.csv" download="hospital_indemnity.csv" style="color:white;font-size:14px;"> EXPORT SCHEMA TO CSV </a>  </button>  
        </p>
        
        <p>
        <br/>
        <b> Supplemental accident insurance file schema </b>
        <table id="table2" style="width:100%">
          <tr>
            <th>column</th>
            <th>description</th> 
            <th>type</th>
            <th>example</th>
          </tr>
          <tr>
            <td> id </td><td> Benefit plan ID </td><td> string </td><td> SP1037 </td>
          </tr>
          <tr>
            <td> parent_id </td><td> Benefit parent ID </td><td> string </td><td> SP1037 </td>
          </tr>
          <tr>
            <td> name</td><td> Benefit plan user-friendly name </td><td> string </td><td> Unum Accident </td>
          </tr>
          <tr>
            <td> description </td><td> Benefit plan user-friendly description </td><td> string </td><td> Unum Accident Coverage </td>
          </tr>
          <tr>
            <td> type </td><td> Benefit plan type </td><td> string </td><td> accident </td>
          </tr>
           <tr> 
            <td> group</td><td> Employer group code </td><td> string </td><td> acme </td>
          </tr>
          <tr> 
            <td> division</td><td> Employer group division code </td><td> string </td><td> corporate </td>
          </tr>
          <tr> 
            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2019</td>
          </tr>
          <tr>    
            <td> start_date </td><td> Plan start date</td><td> date</td><td> 2019-01-01</td>
          </tr>
          <tr>
            <td> end_date </td><td> Plan end date</td><td> date</td><td> 2019-12-31</td>
          </tr>
          <tr>    
            <td> ee_premium </td><td> Monthly premium for subscriber only</td><td> float</td><td> 50.7</td>
          </tr>
          <tr>
            <td> ec_premium </td><td> Monthly premium for subscriber and children dependents</td><td> float</td><td> 66.7</td>
          </tr>
          <tr>
            <td> es_premium </td><td> Monthly premium for subscriber and spouse</td><td> float</td><td> 76.7</td>
          </tr>
          <tr>
            <td> ef_premium </td><td> Monthly premium for subscriber and family (spouse and children)</td><td> float</td><td> 86.7</td>
          </tr>
          <tr>
            <td> carrier </td><td> Carrier name </td><td> string </td><td> Unum </td>
          </tr>
          <tr>
            <td> overall_limit </td><td> Overall limit of reimbursement per service, if applicable </td><td> integer </td><td> 1</td>
          </tr>
           <tr>
            <td> overall_limit_unit </td><td> Unit of overall limit of reimbursement, if applicable (e.g., calendar_year, accident) </td><td> string </td><td> calendar_year </td>
          </tr>
          <tr>
            <td> service </td> <td> Service for which the benefit applies (see attached example) </td><td> string</td><td> open fracture reduction</td>
          </tr>
          <tr>
            <td> reimbursement </td> <td> Reimbursement eligible for associated service </td><td> integer</td><td> 10000 </td>
          </tr>
          <tr>
            <td> limit </td> <td> Maximum limit (days, number of visits, etc.) eligible for benefit</td><td> integer</td><td> 1</td>
          </tr>
          <tr>
            <td> limit_unit </td> <td> Unit corresponding to maximum limit (e.g., calendar_year, days) </td><td> string</td><td> calendar_year</td>
          </tr>
          <tr>
            <td> preexisting_conditions_limitation </td> <td> Flag whether preexiting conditions apply for the plan</td><td> boolean </td><td> TRUE</td>
          </tr>
          <tr>
            <td> months_pre_coverage </td> <td> If applicable, number of months pre-coverage for preexisting conditions </td><td> integer </td><td> 12</td>
          </tr>
          <tr>
            <td> months_post_coverage </td> <td> If applicable, number of months post-coverage for preexisting conditions</td><td> integer </td><td> 12</td>
          </tr>
        </table>
        <button type="button" style="background-color:#4CAF50;color:white;width:250px;height:40px;font-size:14px;"> <a href="docs/accident.csv" download="accident_coverage.csv" style="color:white;font-size:14px;"> EXPORT SCHEMA TO CSV </a>  </button>  
        </p>
        
        <p>
        <br/>
        <b> Supplemental critical illness file schema </b>
        <table id="table2" style="width:100%">
          <tr>
            <th>column</th>
            <th>description</th> 
            <th>type</th>
            <th>example</th>
          </tr>
          <tr>
            <td> id </td><td> Benefit plan ID </td><td> string </td><td> CI1035 </td>
          </tr>
          <tr>
            <td> parent_id </td><td> Benefit parent ID </td><td> string </td><td> CI1035 </td>
          </tr>
          <tr>
            <td> name</td><td> Benefit plan user-friendly name </td><td> string </td><td> Aflac Bronze </td>
          </tr>
          <tr>
            <td> description </td><td> Benefit plan user-friendly description </td><td> string </td><td> Alflac Critical Illness Benefit (Bronze) </td>
          </tr>
          <tr>
            <td> type </td><td> Benefit plan type </td><td> string </td><td> critical_illness </td>
          </tr>
           <tr> 
            <td> group</td><td> Employer group code </td><td> string </td><td> acme </td>
          </tr>
          <tr> 
            <td> division</td><td> Employer group division code </td><td> string </td><td> corporate </td>
          </tr>
          <tr> 
            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2019</td>
          </tr>
          <tr>    
            <td> start_date </td><td> Plan start date</td><td> date</td><td> 2019-01-01</td>
          </tr>
          <tr>
            <td> end_date </td><td> Plan end date</td><td> date</td><td> 2019-12-31</td>
          </tr>
          <tr>
            <td> reimbursement </td> <td> Eligible reimbursement limit </td><td> integer</td><td> 10000 </td>
          </tr>
          <tr>
            <td> covered </td> <td> Plan member relation for the coverage (subscriber, spouse) </td><td> string</td><td> subscriber </td>
          </tr>
          <tr>
            <td> tobacco </td> <td> Boolean for tobacco</td><td> boolean </td><td> FALSE </td>
          </tr>
          <tr>
            <td> premium_18_24 </td> <td> Monthly premium for covered person for age group 18 to 24 </td><td> boolean </td><td> 3.6 </td>
          </tr>
          <tr>
            <td> premium_25_29 </td> <td> Monthly premium for covered person for age group 25 to 29 </td><td> boolean </td><td> 3.6 </td>
          </tr>
          <tr>
            <td> premium_30_34 </td> <td> Monthly premium for covered person for age group 30 to 34 </td><td> boolean </td><td> 5.15 </td>
          </tr>
          <tr>
            <td> premium_35_39 </td> <td> Monthly premium for covered person for age group 35 to 39 </td><td> boolean </td><td> 5.15 </td>
          </tr>
           <tr>
            <td> premium_40_44 </td> <td> Monthly premium for covered person for age group 40 to 44 </td><td> boolean </td><td> 8.65 </td>
          </tr>
          <tr>
            <td> premium_45_49 </td> <td> Monthly premium for covered person for age group 45 to 49 </td><td> boolean </td><td> 8.65 </td>
          </tr>
          <tr>
            <td> premium_50_54 </td> <td> Monthly premium for covered person for age group 50 to 54 </td><td> boolean </td><td> 14.22 </td>
          </tr>
          <tr>
            <td> premium_55_59 </td> <td> Monthly premium for covered person for age group 55 to 59 </td><td> boolean </td><td> 14.22 </td>
          </tr>
          <tr>
            <td> premium_60_64 </td> <td> Monthly premium for covered person for age group 60 to 64 </td><td> boolean </td><td> 21.75 </td>
          </tr>
          <tr>
            <td> premium_65_69 </td> <td> Monthly premium for covered person for age group 65 to 69 </td><td> boolean </td><td> 21.75 </td>
          </tr>
          <tr>
            <td> carrier </td><td> Carrier name </td><td> string </td><td> Aflac </td>
          </tr>
          <tr>
            <td> conditions </td><td> List of critical illness conditions eligible under the insurance coverage </td><td> string </td><td> heart attack|blindness|kidney failure </td>
          </tr>
          <tr>
            <td> preexisting_conditions_limitation </td> <td> Flag whether preexiting conditions apply for the plan</td><td> boolean </td><td> TRUE</td>
          </tr>
          <tr>
            <td> months_pre_coverage </td> <td> If applicable, number of months pre-coverage for preexisting conditions </td><td> integer </td><td> 12</td>
          </tr>
          <tr>
            <td> months_post_coverage </td> <td> If applicable, number of months post-coverage for preexisting conditions</td><td> integer </td><td> 12</td>
          </tr>
          <tr>
            <td> days_waiting_period </td> <td> If applicable, number of days waiting period before insurance is applicable </td><td> integer </td><td> 30</td>
          </tr>
        </table>
        <button type="button" style="background-color:#4CAF50;color:white;width:250px;height:40px;font-size:14px;"> <a href="docs/critical_illness.csv" download="critical_illness.csv" style="color:white;font-size:14px;"> EXPORT SCHEMA TO CSV </a>  </button>  
        </p>
        
        </details>
        
#        | **Column**          | **Description**                   | **Type**  | **Example**        |
#        |---------------------|-----------------------------------|-----------|--------------------|
#        | plan_year           | Plan start date's year            | integer   | 2019               |
#        | group               | Employer group code               | string    | acmecorp           |
#        | division            | Employer division code            | string    | corporate          |
#        | subscriber_id       | Plan subscriber ID                | integer   | 579635785          |
#        | subscriber_ssn      | Plan subscriber's social security | integer | 1234567890           |
#        | subscriber_dob      | Plan subscriber's date of birth   | date    | 1980-03-24           |
#        | subscriber_gender   | Plan subscriber's gender          | string  | female               |
#        | subscriber_address  | Plan subscriber street address    | string  | 123 Street #1        |
#        | subscriber_city     | Plan subscriber city address      | string  | Cambridge            |
#        | subscriber_state    | Plan subscriber state address     | string  | MA                   |
#        | subscriber_zip      | Plan subscriber zip code          | string  | 02139                |
#        | subscriber_status   | Plan subscriber status            | string  | active               |
#        | member_id           | Plan member ID                    | integer | 579635786            |
#        | member_ssn          | Plan subscriber's social security | integer | 1234567891           |
#        | member_dob          | Plan member's date of birth       | date    | 2010-04-26           |
#        | member_gender       | Plan member's gender              | string  | female               |
#        | member_address      | Plan member street address        | string  | 123 Street #1        |
#        | member_city         | Plan member city address          | string  | Cambridge            |
#        | member_state        | Plan member state address         | string  | MA                   |
#        | member_zip          | Plan member zip code              | integer | 02139                |
#        | member_relation     | Plan member zip code              | integer | child                |
#        | member_status       | Plan member status                | string  | active               |
#        | benefit             | Benefit plan ID (if enrolled)     | string  | hdhp_13958           |
#        | benefit_start       | Coverage start date (if enrolled) | date    | 2019-01-01           |
#        | benefit_end         | Coverage end date (if known)      | date    |                      |
#        | benefit_type        | Benefit plan type (if enrolled)   | string  | basic                |
#        | eligible_benefits   | List of all eligible benefit IDs  | string  | hdhp_13958;ppo_14827 |

#        | **Column**          | **Description**                   | **Type**  | **Example**        |
#        |---------------------|-----------------------------------|-----------|--------------------|
#        | plan_year           | Plan start date's year            | integer   | 2019               |
#        | group               | Employer group code               | string    | acmecorp           |
#        | division            | Employer division code            | string    | corporate          |
#        | subscriber_id       | Plan subscriber ID                | integer   | 579635785          |
#        | subscriber_ssn      | Plan subscriber's social security | integer | 1234567890           |
#        | subscriber_dob      | Plan subscriber's date of birth   | date    | 1980-03-24           |
#        | subscriber_gender   | Plan subscriber's gender          | string  | female               |
#        | subscriber_address  | Plan subscriber street address    | string  | 123 Street #1        |
#        | subscriber_city     | Plan subscriber city address      | string  | Cambridge            |
#        | subscriber_state    | Plan subscriber state address     | string  | MA                   |
#        | subscriber_zip      | Plan subscriber zip code          | string  | 02139                |
#        | subscriber_status   | Plan subscriber status            | string  | active               |
#        | member_id           | Plan member ID                    | integer | 579635786            |
#        | member_ssn          | Plan subscriber's social security | integer | 1234567891           |
#        | member_dob          | Plan member's date of birth       | date    | 2010-04-26           |
#        | member_gender       | Plan member's gender              | string  | female               |
#        | member_address      | Plan member street address        | string  | 123 Street #1        |
#        | member_city         | Plan member city address          | string  | Cambridge            |
#        | member_state        | Plan member state address         | string  | MA                   |
#        | member_zip          | Plan member zip code              | integer | 02139                |
#        | member_relation     | Plan member zip code              | integer | child                |
#        | member_status       | Plan member status                | string  | active               |
#        | benefit             | Benefit plan ID (if enrolled)     | string  | hdhp_13958           |
#        | benefit_start       | Coverage start date (if enrolled) | date    | 2019-01-01           |
#        | benefit_end         | Coverage end date (if known)      | date    |                      |
#        | benefit_type        | Benefit plan type (if enrolled)   | string  | basic                |
#        | eligible_benefits   | List of all eligible benefit IDs  | string  | hdhp_13958;ppo_14827 |
       
#        | **Column**          | **Description**                   | **Type**  | **Example**        |
#        |---------------------|-----------------------------------|-----------|--------------------|
#        | plan_year           | Plan start date's year            | integer   | 2019               |
#        
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "formData"
        name: "file"
        type: "file"
        description: "Eligibility/benefit file to upload"
        required: true  
        x-mimetype: text/csv
      - in: "formData"
        name: "name"
        description: "Description of the file to upload"
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # post file including bearer token authorization in header
            curl -X POST
            -H 'authorization: [bearer_token]' \
            -H 'type: eligibility' \
            -F 'file=@group_id_eligibility.csv' \
            https://sandbox.reclaim.health/api/groups/file
      - lang: "Python"
        source: |
            import requests

            files = {'file': open('/path/group_id_eligibility.csv', 'rb')}
            headers = {'Authorization': 'bearer_token', 'Type': 'eligibility'}
            
            response = requests.put('https://sandbox.reclaim.health/api/groups/file', files=files, data=payload, headers=headers).json()
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UploadDetailOutput"
    get:
      tags:
      - "Group-Specific Endpoints"
      summary: "Files Upload Status"
      description: "This endpoint checks the status of all uploaded data files for an existing employer group in the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/StatusCheckDetailOutput"  
  /api/group/[group_id]:
#    delete:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Delete Existing Group"
#      description: "This endpoints allows the client to delete an existing employer group in the Reclaim system. This is especially helpful at the beginning of the integration process."
#      produces:
#      - "application/json"
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/DeleteGroupDetailOutput"   
    post:
      tags:
      - "Group-Specific Endpoints"
      summary: "Update Existing Group"
      description: "This endpoint allows the client to update the information of an existing employer group in the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "UpdateGroupDetailInput"
        required: true
        schema:
          $ref: "#/definitions/UpdateGroupDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UpdateGroupDetailOutput"           
  /api/group/[group_id]/file/[file_id]:
    get:
      tags:
      - "Group-Specific Endpoints"
      summary: "Specific File Upload Status"
      description: "This endpoint checks the status of a single uploaded data file in the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UploadDetailOutput"
#    delete:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Delete Existing File"
#      description: "This endpoint deletes an existng file in the Reclaim system."
#      consumes:
#      - "application/json"
#      produces:
#      - "application/json"
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/DeleteDetailOutput" 
#    put:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Update Existing File"
#      description: |
#        This endpoint allows the client to update an existing file in the Reclaim system. Refer to the data files schema above.
#      consumes:
#      - "multipart/form-data"
#      produces:
#      - "application/json"
#      parameters:
#      - in: "formData"
#        name: "file"
#        type: "file"
#        description: "Data file to upload"
#        required: true  
#        x-mimetype: text/csv
#      - in: "formData"
#        name: "name"
#        description: "Description of the data file to upload"
#      x-code-samples:
#      - lang: "cURL"
#        source: |                              
#            # post file including bearer token authorization in header
#            curl -X POST
#            -H 'authorization: [bearer_token]' \
#            -H 'type: eligibility' \
#            -F 'file=@group_id_eligibility.csv' \
#            -F 'name=group_id_eligibility' \
#            https://platform.reclaim.health/api/group/[group_id]/file/[file_id]
#      - lang: "Python"
#        source: |
#            import requests
#
#            files = {'file': open('/path/group_id_eligibility.csv', 'rb')}
#            payload = {'name': 'group_id_eligibility'}
#            headers = {'Authorization': 'bearer_token', 'Type': 'eligibility'}
#            
#            response = requests.put('https://platform.reclaim.health/api/group/[group_id]/file/[file_id]', files=files, data=payload, headers=headers).json()
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/UpdateDetailOutput"        
#  /group/[group_id]/benefits:
#    post:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Upload Group Benefits File"
#      description: |
#        This endpoint allows the client to upload the benefit and plan attributes offered by a specific employer group to their subscribers. 
#        
#        <details>
#    
#        <summary id="text" onClick="function()"><font color="blue"><u> Click for Reclaim's preferred benefits attributes file schema details </u></font></summary>
#        <p>
#        <table id="table2" style="width:100%">
#          <tr>
#            <th>column</th>
#            <th>description</th> 
#            <th>type</th>
#            <th>example</th>
#          </tr>
#          <tr>
#            <td> benefit_id</td><td> Benefit plan ID </td><td> string </td><td> hdhp_13958</td>
#          </tr>
#          <tr>
#            <td> benefit_type</td><td> Benefit plan type </td><td> string </td><td> basic </td>
#          </tr>
#          <tr>
#            <td> benefit_name</td><td> Benefit plan user-friendly name </td><td> string </td><td> HDHP Choice Base Plus </td>
#          </tr>
#          <tr> 
#            <td> group</td><td> Employer group code </td><td> string </td><td> acmecorp </td>
#          </tr>
#          <tr> 
#            <td> division</td><td> Employer group division code </td><td> string </td><td> corporate </td>
#          </tr>
#          <tr> 
#            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2019</td>
#          </tr>
#          <tr>    
#            <td> start_date </td><td> Plan start date</td><td> date</td><td> 2019-01-01</td>
#          </tr>
#          <tr>
#            <td> end_date </td><td> Plan end date</td><td> date</td><td> 2019-12-31</td>
#          </tr>
#          <tr>    
#            <td> ee_premium </td><td> Monthly premium for subscriber only</td><td> float</td><td> 356.7</td>
#          </tr>
#          <tr>
#            <td> ec_premium </td><td> Monthly premium for subscriber and children dependents</td><td> float</td><td> 456.7</td>
#          </tr>
#          <tr>
#            <td> es_premium </td><td> Monthly premium for subscriber and spouse</td><td> float</td><td> 556.7</td>
#          </tr>
#          <tr>
#            <td> ef_premium </td><td> Monthly premium for subscriber and family (spouse and children)</td><td> float</td><td> 656.7</td>
#          </tr>
#          <tr>
#            <td> hra_included </td><td> Indicator whether benefit is associated with HRA</td><td> bool</td><td> true</td>
#          </tr>
#          <tr>
#            <td> ee_hra_contribution </td><td> Group HRA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
#          </tr>
#          <tr>
#            <td> ef_hra_contribution </td><td> Group HRA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
#          </tr>
#          <tr>
#            <td> hsa_included </td><td> Indicator whether benefit is associated with HSA</td><td> bool</td><td> true</td>
#          </tr>
#          <tr>
#            <td> ee_hsa_contribution </td><td> Group HSA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
#          </tr>
#          <tr>
#            <td> ef_hsa_contribution </td><td> Group HSA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
#          </tr>
#          <tr>
#            <td> hsa_bank </td><td> HSA bank name; if applicable</td><td> string</td><td> HSA Bank</td>
#          </tr> 
#          <tr>
#            <td> fsa_included </td><td> Indicator whether benefit is associated with FSA</td><td> bool</td><td> true</td>
#          </tr>
#          <tr>
#            <td> ee_fsa_contribution </td><td> Group FSA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
#          </tr>
#          <tr>
#            <td> ef_fsa_contribution </td><td> Group FSA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
#          </tr>
#          <tr>
#            <td> fsa_bank </td><td> FSA bank name; if applicable</td><td> string</td><td> Wageworks</td>
#          </tr> 
#          <tr>
#            <td> in_network_ee_deductible </td><td> In network deductible for subscriber only plan; if applicable</td><td> integer </td><td> 1500</td>
#          </tr>
#          <tr>
#            <td> in_network_ef_deductible </td><td> In network deductible for subscriber and dependents; if applicable</td><td> integer </td><td> 3000</td>
#          </tr>
#          <tr>
#            <td> out_network_ee_deductible </td><td> Out-of network deductible for subscriber only plan; if applicable</td><td> integer </td><td> 3000</td>
#          </tr>
#          <tr>
#            <td> out_network_ef_deductible </td><td> Out-of network deductible for subscriber and dependents; if applicable</td><td> integer </td><td> 6000</td>
#          </tr>
#          <tr>
#            <td> in_network_ee_oop_max </td><td> In network out-of-pocket max for subscriber only plan; if applicable</td><td> integer </td><td> 3000</td>
#          </tr>
#          <tr>
#            <td> in_network_ef_oop_max </td><td> In network out-of-pocket max for subscriber and dependents; if applicable</td><td> integer </td><td> 6000</td>
#          </tr>
#          <tr>
#            <td> out_network_ee_oop_max </td><td> Out-of network out-of-pocket max for subscriber only plan; if applicable</td><td> integer </td><td> 6000</td>
#          </tr>
#          <tr>
#            <td> out_network_ef_oop_max </td><td> Out-of network out-of-pocket max for subscriber and dependents; if applicable</td><td> integer </td><td> 10000</td>
#          </tr>
#          <tr>
#            <td> in_network_coinsurance </td><td> In network coinsurance; if applicable</td><td> integer </td><td> 20</td>
#          </tr>
#          <tr>
#            <td> out_network_coinsurance </td><td> Out-of network coinsurance; if applicable</td><td> integer </td><td> 30</td>
#          </tr>
#        </table>
#        <button type="button" style="background-color:#4CAF50;color:white;width:250px;height:40px;font-size:14px;" onclick="exportTableToCSV2('benefits_reclaim_schema.csv')">EXPORT SCHEMA TO CSV</button>
#
#    
#        </p>
#        </details>
##        | **Column**          | **Description**                   | **Type**  | **Example**        |
##        |---------------------|-----------------------------------|-----------|--------------------|
##        | plan_year           | Plan start date's year            | integer   | 2019               |
##        | group               | Employer group code               | string    | acmecorp           |
##        | division            | Employer division code            | string    | corporate          |
##        | subscriber_id       | Plan subscriber ID                | integer   | 579635785          |
##        | subscriber_ssn      | Plan subscriber's social security | integer | 1234567890           |
##        | subscriber_dob      | Plan subscriber's date of birth   | date    | 1980-03-24           |
##        | subscriber_gender   | Plan subscriber's gender          | string  | female               |
##        | subscriber_address  | Plan subscriber street address    | string  | 123 Street #1        |
##        | subscriber_city     | Plan subscriber city address      | string  | Cambridge            |
##        | subscriber_state    | Plan subscriber state address     | string  | MA                   |
##        | subscriber_zip      | Plan subscriber zip code          | string  | 02139                |
##        | subscriber_status   | Plan subscriber status            | string  | active               |
##        | member_id           | Plan member ID                    | integer | 579635786            |
##        | member_ssn          | Plan subscriber's social security | integer | 1234567891           |
##        | member_dob          | Plan member's date of birth       | date    | 2010-04-26           |
##        | member_gender       | Plan member's gender              | string  | female               |
##        | member_address      | Plan member street address        | string  | 123 Street #1        |
##        | member_city         | Plan member city address          | string  | Cambridge            |
##        | member_state        | Plan member state address         | string  | MA                   |
##        | member_zip          | Plan member zip code              | integer | 02139                |
##        | member_relation     | Plan member zip code              | integer | child                |
##        | member_status       | Plan member status                | string  | active               |
##        | benefit             | Benefit plan ID (if enrolled)     | string  | hdhp_13958           |
##        | benefit_start       | Coverage start date (if enrolled) | date    | 2019-01-01           |
##        | benefit_end         | Coverage end date (if known)      | date    |                      |
##        | benefit_type        | Benefit plan type (if enrolled)   | string  | basic                |
##        | eligible_benefits   | List of all eligible benefit IDs  | string  | hdhp_13958;ppo_14827 |
#
#
#      consumes:
#      - "multipart/form-data"
#      produces:
#      - "application/json"
#      parameters:
#      - in: "formData"
#        name: "file"
#        type: "file"
#        description: "Benefit file to upload"
#        required: true  
#        x-mimetype: text/csv
#      - in: "formData"
#        name: "name"
#        description: "Description of the benefit file to upload"
#      - in: "formData"
#        name: "id"
#        description: "Benefit file ID that can be used to identify the status of the specific file upload into the Reclaim system"
#      x-code-samples:
#      - lang: "cURL"
#        source: |                              
#            # post file including bearer token authorization in header
#            curl -X POST
#            -H 'authorization: [bearer_token]' \
#            -F 'file=@group_id_benefit.csv' \
#            -F 'name=group_id_benefit' \
#            -F 'id=group_id_ben_2019_4_5' \
#            https://platform.reclaim.health/api/groups/[group_id]/benefit
#      - lang: "Python"
#        source: |
#            import requests
#
#            files = {'file': open('/path/group_id_benefit.csv', 'rb')}
#            payload = {'name': 'group_id_benefit', 'id': 'group_id_ben_2019_4_5'}
#            headers = {'Authorization': 'bearer_token'}
#            
#            response = requests.put('https://platform.reclaim.health/api/groups/[group_id]/benefit', files=files, data=payload, headers=headers).json()
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/BenefitUploadDetailOutput"
#    get:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Benefit Upload Status Check"
#      description: "This endpoint checks the status of all uploaded benefit data files for an existing employer group in the Reclaim system."
#      consumes:
#      - "application/json"
#      produces:
#      - "application/json"
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/BenefitStatusCheckDetailOutput"   
#  /groups/[group_id]/benefits/[upload_id]:
#    get:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Benefit File Upload Status Check"
#      description: "This endpoint checks the status of a single uploaded benefit data file in the Reclaim system."
#      consumes:
#      - "application/json"
#      produces:
#      - "application/json"
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/BenefitUploadDetailOutput"            
  /api/subscriber:            
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Add A Subscriber"
      description: "This endpoint allows the client to add or update a subscriber's info to the Reclaim system. To update a subscriber's specific info, the POST may include only the items needed to be updated."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "SubscriberDetailInput"
        required: true
        schema:
          $ref: "#/definitions/SubscriberDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SubscriberDetailOutput"   
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # adding a subscriber
            curl -i -X POST -H "Authorization: Bearer [token]" -H "Content-Type: application/json" -d '{"id": "1774", "status": "active", "benefits": [], "name": {"first": "Jason", "middle": null, "last": "Gomez"}, "group": "acme", "division": "corporate", "dob": "1955-02-23", "ssn": "235848321", "gender": "m", "address": {"street_1": null, "street_2": null, "zip_code": "02215", "city": "Boston", "state": "MA"}, "members": [{"id": "1776", "status": "active", "benefits": [], "name": {"first": "Josie", "middle": null, "last": "Gomez"}, "dob": "1957-12-03", "ssn": "000001234", "gender": "f", "relation": "spouse", "address": {"street_1": null, "street_2": null, "zip_code": "02215", "city": "Boston", "state": "MA"}},{"id": "1777", "status": "active", "benefits": [], "name": {"first": "Bobby", "middle": null, "last": "Gomez"}, "dob": "2000-01-01", "ssn": "000005552", "gender": "m", "relation": "child", "address": {"street_1": null, "street_2": null, "zip_code": "02215", "city": "Boston", "state": "MA"}}]}' https://sandbox.reclaim.health:443/api/subscriber
            
      - lang: "Python"
        source: |
            # adding a subscriber
            payload = {"id": "1774", "status": "active", "benefits": [], "name": {"first": "Jason", "middle": null, "last": "Gomez"}, "group": "acme", "division": "corporate", "dob": "1955-02-23", "ssn": "235848321", "gender": "m", "address": {"street_1": null, "street_2": null, "zip_code": "02215", "city": "Boston", "state": "MA"}, "members": [{"id": "1776", "status": "active", "benefits": [], "name": {"first": "Josie", "middle": null, "last": "Gomez"}, "dob": "1957-12-03", "ssn": "000001234", "gender": "f", "relation": "spouse", "address": {"street_1": null, "street_2": null, "zip_code": "02215", "city": "Boston", "state": "MA"}},{"id": "1777", "status": "active", "benefits": [], "name": {"first": "Bobby", "middle": null, "last": "Gomez"}, "dob": "2000-01-01", "ssn": "000005552", "gender": "m", "relation": "child", "address": {"street_1": null, "street_2": null, "zip_code": "02215", "city": "Boston", "state": "MA"}}]}
            
            headers = {'Authorization': '[token]'}
            
            response = requests.put('https://sandbox.reclaim.health:443/api/subscriber', data=payload, headers=headers).json()   

  
  /api/subscriber/[subscriber_id]:
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Subscriber Details"
      description: "This endpoints is designed to obtain information about a specific subscriber, including whether claims data is available in the Reclaim system for the subscriber, and if so, whether the subscriber has authorized Reclaim to use their claims data to personalize the optimization of their plan recommendations. The assumption is that the `subscriber_id` that identifies the subscriber for the client is known to the Reclaim platform."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SubscriberDetailOutput"
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # obtaining information about a specific subscriber
            curl -i -X GET -H "Authorization: Bearer [token]" https://sandbox.reclaim.health:443/api/subscriber/1774
      - lang: "Python"
        source: |
            # obtaining information about a specific subscriber
            headers = {'Authorization': '[token]'}  
            response = requests.get('https://sandbox.reclaim.health:443/api/subscriber/1774', headers=headers).json()  
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Update A Subscriber"
      description: "This endpoint allows the client to update a subscriber's info to the Reclaim system. To update a subscriber's specific info, the POST may include only the items needed to be updated."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "UpdateSubscriberDetailInput"
        required: true
        schema:
          $ref: "#/definitions/UpdateSubscriberDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UpdateSubscriberDetailOutput"   
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # updating a subscriber
            curl -i -X POST -H "Authorization: Bearer [token]" -H "Content-Type: application/json" --data '{"name": {"first": "Zulu"}}' https://sandbox.reclaim.health:443/api/subscriber/1774
      - lang: "Python"
        source: |
            # updating a subscriber
            payload = {"name": {"first": "Zulu"}}
            
            headers = {'Authorization': '[token]'}
            
            response = requests.put('https://sandbox.reclaim.health:443/api/subscriber/1774', data=payload, headers=headers).json()   
        
               
  /api/subscriber/[subscriber_id]/members:
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "List Members Details"
      description: "This endpoints is designed to obtain information about all the dependent members, including the subscriber, that are eligible for the subscriber's benefits. Note that the members can be added or removed from consideration for the benefit recommendations, if instructed by the subscriber through the Client."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/MembersDetailOutput" 
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # obtaining information about a specific subscriber
            curl -i -X GET -H "Authorization: Bearer [token]" -H "Content-Type: application/json" https://sandbox.reclaim.health:443/api/subscriber/1774/members
      - lang: "Python"
        source: |
            # obtaining information about a specific subscriber
            headers = {'Authorization': '[token]'}  
            response = requests.get('https://sandbox.reclaim.health:443/api/subscriber/1774/members', headers=headers).json()   
                                    
                                    
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Add Members"
      description: "This endpoint allows the client to add the info of the members associated with the subscriber to the Reclaim system. To update a member's specific info, the POST may include only the items needed to be updated."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "MemberDetailInput"
        required: true
        schema:
          $ref: "#/definitions/AddMembersDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AddMembersDetailOutput"   
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # adding members
            curl -i -X POST -H "Authorization: Bearer [token]" -H "Content-Type: application/json -d '{"members": [{"id": "1800", "status": "active", "benefits": [], "name": { "first": "George", "middle": null, "last": "Gomez" }, "dob": "2004-12-03", "ssn": "000001334", "gender": "m", "relation": "child", "address": { "street_1": null, "street_2": null, "zip_code": "02215", "city": "Boston", "state": "MA"}}, {"id": "1801", "status": "active", "benefits": [], "name":{"first": "Lucy", "middle": null, "last": "Gomez"}, "dob": "2017-04-02", "ssn": "000005152", "gender": "f", "relation": "child"}]}' https://sandbox.reclaim.health:443/api/subscriber/1774/members
            
      - lang: "Python"
        source: |
            # adding members
            payload = {"members": [{"id": "1800", "status": "active", "benefits": [], "name": { "first": "George", "middle": null, "last": "Gomez" }, "dob": "2004-12-03", "ssn": "000001334", "gender": "m", "relation": "child", "address": { "street_1": null, "street_2": null, "zip_code": "02215", "city": "Boston", "state": "MA"}}, {"id": "1801", "status": "active", "benefits": [], "name":{"first": "Lucy", "middle": null, "last": "Gomez"}, "dob": "2017-04-02", "ssn": "000005152", "gender": "f", "relation": "child"}]}
            
            headers = {'Authorization': '[token]'}
            
            response = requests.put('https://sandbox.reclaim.health:443/api/subscriber/1774/members', data=payload, headers=headers).json()     
    
    
            
  /api/subscriber/[subscriber_id]/member/[member_id]:  
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Update A Member's Info"
      description: "This endpoint allows the client to update a specific member's info. The POST may include only the items needed to be updated."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "UpdateMemberDetailInput"
        required: true
        schema:
          $ref: "#/definitions/UpdateMemberDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UpdateMemberDetailOutput"   
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # updating a member
            curl -i -X POST -H "Authorization: Bearer [token]" -H "Content-Type: application/json -d '{"name":{"first":"Jorge"}}' https://sandbox.reclaim.health:443/api/subscriber/1774/member/1800
      - lang: "Python"
        source: |
           # updating a member
            payload = {"name":{"first":"Jorge"}}
            
            headers = {'Authorization': '[token]'}
            
            response = requests.put('https://sandbox.reclaim.health:443/api/subscriber/1774/member/1800', data=payload, headers=headers).json()  
            
  /api/subscriber/[subscriber_id]/authorize:
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Claim Opt-In"
      description: "This endpoint is designed to allow a subscriber to authorize Reclaim to make use of their claims data throughout the decision making process. The Reclaim platform recalls the subscriber's decision in its system and mirrors it in the mobile application for the continuous yearlong member engagement."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AuthorizationDetailInput"
        required: true
        schema:
          $ref: "#/definitions/AuthorizationDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AuthorizationDetailOutput"
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # updating a subscriber's claim authorization
            curl -i -X POST -H "Authorization: Bearer [token]" -H "Content-Type: application/json" -d '{"opt_in": true}' https://sandbox.reclaim.health:443/api/subscriber/1774/opt_in
 
      - lang: "Python"
        source: |
           # updating a subscriber's claim authorization
            payload = {"opt_in": true}
            
            headers = {'Authorization': '[token]'}
            
            response = requests.put('https://sandbox.reclaim.health:443/api/subscriber/1774/opt_in', data=payload, headers=headers).json()              
  /api/subscriber/[subscriber_id]/review:
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Current Plan Review"
      description: "This endpoint allows the client to output a review of how the subscriber's current plan has performed given their healthcare bills (and those of their dependents') for the year. The goal of this endpoint is to present information to the user about their current plan performance to frame the conversation around their next year's plan selections in a highly personalized manner. Please note that this is only available if Reclaim has the subscriber's claims data in its system and the subscriber has authorized Reclaim to utilize their claims data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ReviewDetailOutput"
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # retrieving a subscriber's current plan review
            curl -i -X GET -H "Authorization: Bearer [token]" -H "Content-Type: application/json"  https://sandbox.reclaim.health:443/api/subscriber/1774/review
            
            # Note that this is only applicable for subscribers who
            # have claims and have authorized their use, otherwise
            # the output will include an error
            
      - lang: "Python"
        source: |
           # updating a subscriber's claim authorization
            headers = {'Authorization': '[token]'}
            
            response = requests.get('https://sandbox.reclaim.health:443/api/subscriber/1774/review', data=payload, headers=headers).json()             
    
  /api/subscriber/[subscriber_id]/surveys:
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Retrieve Survey Questions"
      description: "This endpoint is designed to retrieve the questions to display to the subscriber or to retrieve the subscriber's most updated responses to the survey questionnaires that have been saved in the Reclaim system. Note that this endpoint can be accessible even if the subscriber has no claims in the Reclaim system or has not authorized the use of their claims data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SurveyDetailOutput"
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # retrieving the surveys for a subscriber
            curl -i -X GET -H "Authorization: Bearer [token]" https://sandbox.reclaim.health:443/api/subscriber/1774/surveys
 
      - lang: "Python"
        source: |
           # retrieving the surveys for a subscriber
            headers = {'Authorization': '[token]'}
            
            response = requests.get('https://sandbox.reclaim.health:443/api/subscriber/1774/surveys', headers=headers).json()         
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Update Survey Answers"
      description: "This endpoint is designed to post the subscriber's responses to the survey questionnaires and share them with the Reclaim system. If the Reclaim system receives the subscriber's answers, it will feed them into its enrollment recommendation algorithm. Note that this endpoint can be accessible even if the subscriber has no claims in the Reclaim system or has not authorized the use of their claims data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "SurveyDetailInput"
        required: true
        schema:
          $ref: "#/definitions/SurveyDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UpdatedSurveyDetailOutput"
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # updating all/subset of the survey answers
            curl -i -X POST -H "Authorization: Bearer [token]" -H "Content-Type: application/json -d '{"surveys": [{"id": "5f409aad-1d37-4077-ac65-c2570cfb7db7", "value": "Maybe"},{"id": "84c84277-ebc1-4200-8e57-65f2987d0cf4", "value": "I go to a convenience clinic at a nearby pharmacy or retail store."}]}' https://sandbox.reclaim.health:443/api/subscriber/1774/surveys
 
      - lang: "Python"
        source: |
            # updating all/subset of the survey answers
            payload = {"surveys": [{"id": "5f409aad-1d37-4077-ac65-c2570cfb7db7", "value": "Maybe"},{"id": "84c84277-ebc1-4200-8e57-65f2987d0cf4", "value": "I go to a convenience clinic at a nearby pharmacy or retail store."}]}
            
            headers = {'Authorization': '[token]'}
            
            response = requests.put('https://sandbox.reclaim.health:443/api/subscriber/1774/surveys', data=payload, headers=headers).json()                       
  /api/subscriber/[subscriber_id]/survey/[survey_id]:
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Retrieve Specific Survey Question"
      description: "This endpoint is designed to retrieve a specific survey question to display to the subscriber or to retrieve the subscriber's most updated response to a specific survey question that has been saved in the Reclaim system." 
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SurveyQuestionDetailOutput"
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # retrieving a specific survey question
            curl -i -X GET -H "Authorization: Bearer [token]" https://sandbox.reclaim.health:443/api/subscriber/1774/survey/d718946b-56f6-4614-9f08-f3aadec99db5
 
      - lang: "Python"
        source: |
           # retrieving a specific survey question
            headers = {'Authorization': '[token]'}
            
            response = requests.get('https://sandbox.reclaim.health:443/api/subscriber/1774/survey/d718946b-56f6-4614-9f08-f3aadec99db5', headers=headers).json()         
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Update Specific Survey Answer"
      description: "This endpoint is designed to post the subscriber's response to a specific survey question."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "SurveyQuestionDetailInput"
        required: true
        schema:
          $ref: "#/definitions/SurveyQuestionDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UpdatedSurveyQuestionDetailOutput"
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # updating a specific survey answer
            curl -i -X POST -H "Authorization: Bearer [token]" -H "Content-Type: application/json -d '{"value":"Prescription eyewear and needs are more involved."}' https://sandbox.reclaim.health:443/api/subscriber/1774/survey/d718946b-56f6-4614-9f08-f3aadec99db5
 
      - lang: "Python"
        source: |
            # updating a specific survey answer
            payload = {"value":"Prescription eyewear and needs are more involved."}
            
            headers = {'Authorization': '[token]'}
            
            response = requests.put('https://sandbox.reclaim.health:443/api/subscriber/1774/survey/d718946b-56f6-4614-9f08-f3aadec99db5', data=payload, headers=headers).json()   
            
  /api/subscriber/[subscriber_id]/recommendation:
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Calculate Benefit Recommendation"
      description: "This endpoint allows the client to post the subscriber's eligibility to a specific array of benefits from their employer group. Note that the benefit features have been already shared and processed by Reclaim. The eligibility to these benefits in this POST API is designed to reference the particular benefit IDs that the subscriber is eligible to select. The API then outputs a review of how the subscriber's current plan has performed given their healthcare bills (and those of their dependents') for the year. The goal of this endpoint is to present information to the user about their current plan performance to frame the conversation around their next year's plan selections in a highly personalized manner. Please note that this is only available if Reclaim has the subscriber's claims data in its system and the subscriber has authorized Reclaim to utilize their claims data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RecommendationDetailInput"
        required: true
        schema:
          $ref: "#/definitions/RecommendationDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/RecommendationDetailOutput"
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # calculating a recommendation based on eligible benefits
            curl -i -X POST -H "Authorization: Bearer [token]" -H "Content-Type: application/json" -d '{"eligible_benefits":[{"id":"1154caf4-ee45-44b5-8d9b-2e2beb7c55bd","type":"basic"},{"id":"3df5eb4e-e540-4f57-9a61-2b9375839757","type":"basic"},{"id":"c4ee3e25-d304-495e-ac8b-df192a296542","type":"hospital"}]}' https://sandbox.reclaim.health/api/subscriber/300001/recommendation
 
      - lang: "Python"
        source: |
            # calculating a recommendation based on eligible benefits
            payload = {"eligible_benefits":[{"id":"1154caf4-ee45-44b5-8d9b-2e2beb7c55bd","type":"basic"},{"id":"3df5eb4e-e540-4f57-9a61-2b9375839757","type":"basic"},{"id":"c4ee3e25-d304-495e-ac8b-df192a296542","type":"hospital"}]}
            
            headers = {'Authorization': '[token]'}
            
            response = requests.put('https://sandbox.reclaim.health/api/subscriber/300001/recommendation', data=payload, headers=headers).json()             

  /api/subscriber/[subscriber_id]/recommendation/[recommendation_id]:
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Update A Benefit Recommendation"
      description: "This endpoint allows the client to update the subscriber's eligibility for any one of the eligible benefits. This becomes handy if the Client retrieves further information that pertain to a specific basic plan, say an HSA or HRA plan attached to them."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "UpdateRecommendationDetailInput"
        required: true
        schema:
          $ref: "#/definitions/UpdateRecommendationDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UpdateRecommendationDetailOutput"
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # updating a recommendation based on futher benefit information
            curl -i -X POST -H "Authorization: Bearer [token]" -H "Content-Type: application/json -d '{"eligible_benefits":[{"id":"1154caf4-ee45-44b5-8d9b-2e2beb7c55bd","included":[{"id":"61affbd3-6b53-4838-a3bb-8220b369b72e","type":"hra"}]}]}' https://sandbox.reclaim.health/api/subscriber/300001/recommendation/eeb86d51-980d-49d8-bf16-74e9b738a556
 
      - lang: "Python"
        source: |
            # updating a recommendation based on futher benefit information
            payload = {"eligible_benefits":[{"id":"1154caf4-ee45-44b5-8d9b-2e2beb7c55bd","included":[{"id":"61affbd3-6b53-4838-a3bb-8220b369b72e","type":"hra"}]}]}
            
            headers = {'Authorization': '[token]'}
            
            response = requests.put('https://sandbox.reclaim.health/api/subscriber/300001/recommendation/eeb86d51-980d-49d8-bf16-74e9b738a556', data=payload, headers=headers).json()          
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Retrieve A Specific Recommendation"
      description: "This endpoint allows the client to retrieve a specific benefit recommendation bundle."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UpdateRecommendationDetailOutput"  
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # retrieving a specific benefit recommendation
            curl -i -X GET -H "Authorization: Bearer [token]" https://sandbox.reclaim.health/api/subscriber/300001/recommendation/eeb86d51-980d-49d8-bf16-74e9b738a556
 
      - lang: "Python"
        source: |
            # retrieving a specific benefit recommendation
            headers = {'Authorization': '[token]'}
            
            response = requests.get('https://sandbox.reclaim.health/api/subscriber/300001/recommendation/eeb86d51-980d-49d8-bf16-74e9b738a556', headers=headers).json()  

  /api/subscriber/[subscriber_id]/recommendations:          
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Retrieve Recent Recommendations"
      description: "This endpoint allows the client to retrieve a specific benefit recommendation bundle."
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ListRecommendationsDetailOutput"  
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # retrieving all recent benefit recommendations
            curl -i -X GET -H "Authorization: Bearer [token]" https://sandbox.reclaim.health/api/ubscriber/300001/recommendations
 
      - lang: "Python"
        source: |
            # retrieving all recent benefit recommendations
            headers = {'Authorization': '[token]'}
            
            response = requests.get('https://sandbox.reclaim.health/api/ubscriber/300001/recommendations', headers=headers).json()  
  /api/subscriber/[subscriber_id]/member/[member_id]/pcp:
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Select a PCP for Enrollment"
      description: "This endpoint allows the client to show PCP options for certain networks requiring each member on the subscriber's plan to select a PCP before finalizing the enrollment. The client furnishes the network descriptor (e.g., 'nexus'), along with any specific member zip code. Note that if the client does not include the zip code information, then Reclaim assumes the zip code from the member information."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "PCPDetailInput"
        required: true
        schema:
          $ref: "#/definitions/PCPDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/PCPDetailOutput"            
definitions:
# Auth Ouput
  AuthOutput:
    type: "object"
    properties:
      access_token:
        type: "string"
        description: "Access token to access Reclaim API"
      expires_in:
        type: "integer"
        description: "Number of seconds the access token is set to expire" 
      token_type:
        type: "string"
        description: "Token type ('Bearer')"     
    example:
      access_token: "[token]"
      expires_in: 3600
      token_type: "Bearer"
# Claim Authorization Detail Input
  AuthorizationDetailInput:
    type: "object"
    properties:
      opt_in:
        type: "boolean"
        description: "True is the subscriber opts in for Reclaim to utilize their claims data, False otherwise"
    example:
      opt_in: true
      
# Enrollment Survey Detail Input
  SurveyDetailInput:
    type: "object"
    properties:
      surveys:
        type: "array"
        description: "Array containing the subscriber's survey question IDs and answers to the different types of questionnaires the client has selected to ask on their platform, if applicable. Note that the health related questions may only needed if the subscriber has no claims in the Reclaim system or whether they have elected to not use their claims"
        items:
          type: "object"
          properties:
            id:
              type: "string"
              description: "Survey question ID"
            value:
              type: "string, integer, array"
              description: "String, integer or an array of subscriber's answer, depending on the question type. Note that an array is only applicable for questions of type `multi`" 
    example:
      surveys:
        - id: "5f409aad-1d37-4077-ac65-c2570cfb7db7"
          value: "Maybe"
        - id: "84c84277-ebc1-4200-8e57-65f2987d0cf4"
          value: "I go to a convenience clinic at a nearby pharmacy or retail store."
          
# Enrollment Survey Detail Input
  SurveyQuestionDetailInput:
    type: "object"
    properties:
            value:
              type: "string, integer, array"
              description: "String, integer or an array of subscriber's answer, depending on the question type. Note that an array is only applicable for questions of type `multi`" 
    example:
          value: "Prescription eyewear and needs are more involved."
          
# Add Group Detail Input
  AddGroupDetailInput:
    type: "object"
    properties:
      groups:
        type: "array"
        description: "Array of employer groups to add in the Reclaim system"
        items:
          type: "object"
          properties:
            id: 
              type: "string"
              description: "Short identifier for the employer group"
            name: 
              type: "string"
              description: "Detailed name for the employer group"
    example:
      groups:
        - name: "acmecorp"
          description: "ACME Corporation"
        - name: "abc"
          description: "ABC, Inc."
# Add Group Detail Output
  AddGroupDetailOutput:
    type: "object"
    properties:
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array of strings"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          count:   
                type: "integer"
                description: "Number of employer groups available in the Reclaim system"
          groups:   
                type: "array"
                description: "Array containing all the employer groups added by the Client" 
                items:
                  type: "object"
                  properties:
                    id:   
                      type: "string"
                      description: "Employer group Reclaim ID. This ID should be used to request or add information for a specific group"  
                    name:
                      type: "string"
                      description: "Short name for the employer group"
                    description:
                      type: "string"
                      description: "Long description for the employer group"  
                    status: 
                      type: "string"
                      description: "Status is ```linked``` if the employer group has claims data for their subscribers and members in the Reclaim system, otherwise, the status would be ```not linked```"
                    created:
                      type: "timestamp"
                      description: "Timestamp (in UTC) recording the time that the employer group entry was created in the Reclaim system. Note all the timestamps are UTC" 
                    updated:
                      type: "timestamp"
                      description: "Timestamp (in UTC) recording the latest update to the employer group entry in the Reclaim system"  
    example: 
      status: "success"
      detail: []
      entity:
          count: 2
          groups:
            - id: "acc711d2-7bd2-4110-9b2a-72b34f217b97"
              name: "acmecorp"
              description: "ACME Corporation"
              status: "not linked"
              created: "2019-04-10 14:59:23"
              updated: "2019-04-10 14:59:23"
            - id: "fe834068-3357-4b36-8304-781f713f71c0"
              name: "abc"
              description: "ABC, Inc."
              status: "not linked"
              created: "2019-04-04 14:59:23"
              updated: "2019-04-04 14:59:23"
# Update Group Detail Input
  UpdateGroupDetailInput:
    type: "object"
    properties:
      id: 
        type: "string"
        description: "Short identifier for the employer group"
      name: 
        type: "string"
        description: "Detailed name for the employer group"
    example:
      id: "abc"
      name: "ABC, Inc."   
# Update Group Detail Output
  UpdateGroupDetailOutput:
    type: "object"
    properties:
      id: 
        type: "string"
        description: "Short identifier for the employer group"
      name: 
        type: "string"
        description: "Detailed name for the employer group"
      updated:
        type: "timestamp"
        description: "Timestamp (in UTC) recording the latest update to the employer group entry in the Reclaim system. Note all the timestamps are UTC" 
      detail: 
        type: "array"
        description: "Array of messages (string), if applicable. These would include any list of error detailed descriptions"  
        items:
          type: "string"
    example:
      id: "abc"
      name: "ABC, Inc."  
      updated: "2019-04-04 14:59:23"
      detail: 
        - "ABC group name updated from ABC Corp to ABC, Inc."  
# Delete Group Detail Output
  DeleteGroupDetailOutput:
    type: "object"
    properties:
      id: 
        type: "string"
        description: "Short identifier for the employer group"
      name: 
        type: "string"
        description: "Detailed name for the employer group"
      updated:
        type: "timestamp"
        description: "Timestamp (in UTC) recording the latest update to the employer group entry in the Reclaim system. Note all the timestamps are UTC" 
      detail: 
        type: "array"
        description: "Array of messages (string), if applicable. These would include any list of error detailed descriptions"  
        items:
          type: "string"
    example:
      id: "abc"
      name: "ABC, Inc."  
      updated: "2019-04-04 14:59:23"
      detail: 
        - "Group ABC, Inc. has been deleted successfully."          
#Group List Detail Output
  GroupListDetailOutput:
    type: "object"
    properties: 
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array of strings"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          count:   
                type: "integer"
                description: "Number of employer groups available in the Reclaim system"
          groups:   
                type: "array"
                description: "Array containing all the employer groups available in the Reclaim system" 
                items:
                  type: "object"
                  properties:
                    id:   
                      type: "string"
                      description: "Employer group Reclaim ID. This ID should be used to request or add information for a specific group"  
                    name:
                      type: "string"
                      description: "Short name for the employer group"
                    description:
                      type: "string"
                      description: "Long description for the employer group"  
                    status: 
                      type: "string"
                      description: "Status is ```linked``` if the employer group has been correctly associated to a Reclaim employer group with claims data for their subscribers and members in the Reclaim system, otherwise, the status would be ```not linked```"
                    created:
                      type: "timestamp"
                      description: "Timestamp (in UTC) recording the time that the employer group entry was created in the Reclaim system. Note all the timestamps are UTC" 
                    updated:
                      type: "timestamp"
                      description: "Timestamp (in UTC) recording the latest update to the employer group entry in the Reclaim system"  
    example: 
      status: "success"
      detail: []
      entity:
          count: 2
          groups:
            - id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
              name: "ACME"
              description: "ACME Corporation"
              status: "linked"
              created: "2019-04-08 17:50:13"
              updated: "2019-04-08 17:50:13"
            - id: "a820c749-b46b-418b-b73a-2d15d1129d46"
              name: "IBM"
              description: "International Business Machines"
              status: "not linked"
              created: "2019-04-09 01:29:21"
              updated: "2019-04-09 01:30:03"
# Eligibility Upload Detail Output  
  UploadDetailOutput:
    type: "object"
    properties: 
      id:   
            type: "string"
            description: "Data file upload ID created by the Reclaim system to refer to the upload activity"
      type:   
            type: "string"
            description: "Data file type, e.g., eligibility, basic, hospital, etc."        
      name: 
            type: "string"
            description: "Description of the data file to upload as provided by the client"        
      status:   
            type: "string"
            description: |
              Status of the data file upload in the Reclaim system. This can take one of three values:
              
              `processing` meaning the ingestion of the data file is still processing
              
              `fail` meaning the ingestion of the data file has failed
              
              `success` meaning the ingestion of the data file has finished successfully
      detail:
            type: "array"
            description: "Detailed description of failure error, if the ingestion of the data file were to encounter a failure"
            items: 
              type: "string"
      updated: 
            type: "timestamp"
            description: "Timestamp (in UTC) of the most recent update on the status of the data file upload"        
    example: 
          id: "group_id_elig_2019_4_5"
          type: "eligibility"
          name: "group_id_eligibility"
          status: "processing"
          updated: "2019-04-10 14:59:23"
#Eligibility Status Check Detail Output      
  StatusCheckDetailOutput:
    type: "object"
    properties: 
      files:
        type: "array"
        description: "Array of all data files uploaded to the Reclaim system"
        items:
          type: "object"
          properties:
            id:   
              type: "string"
              description: "Data file upload ID created by the Reclaim system to refer to the upload activity"
            type:   
              type: "string"
              description: "Data file type, e.g., eligibility, basic, hospital, etc."    
            name:
              type: "string"
              description: "Description of the data file to upload as provided by the client"  
            status:   
              type: "string"
              description: |
                Status of the data file upload in the Reclaim system. This can take one of three values:
              
                `processing` meaning the ingestion of the data file is still processing
              
                `fail` meaning the ingestion of the data file has failed
              
                `success` meaning the ingestion of the data file has finished successfully
            detail:
              type: "array"
              description: "Detailed description of failure error, if the ingestion of the data file were to encounter a failure"   
              items: 
                type: "string"
            updated: 
              type: "timestamp"
              description: "Timestamp (in UTC) of the most recent update on the status of the data file upload"
    example: 
      files:
        - id: "group_id_elig_2019_4_5"
          type: "eligibility"
          name: "group_id_eligibility"
          status: "success"
          updated: "2019-04-10 14:59:23"
        - id: "group_id_basic_2019_5_5"  
          type: "basic_plans"
          name: "group_id_basic"
          status: "processing"
          updated: "2019-05-10 12:59:29"
        - id: "group_id_supplemental_2019_5_6" 
          type: "supplemental_plans"
          name: "group_id_supplemental"
          status: "fail"
          updated: "2019-05-10 12:59:29"  
          detail: 
            - "line 9, column 10 - found unexpected data format" 
            - "line 145, column 74 - found unexpected character"
# Update Eligibility Detail Output  
  UpdateDetailOutput:
    type: "object"
    properties: 
      id:   
            type: "string"
            description: "Data file ID created by the Reclaim system to refer to the upload activity"
      type:   
            type: "string"
            description: "Data file type, e.g., eligibility, basic, hospital, etc."         
      name:
            type: "string"
            description: "Description of the data file to upload as provided by the client"        
      status:   
            type: "string"
            description: |
              Status of the data file upload in the Reclaim system. This can take one of three values:
              
              `processing` meaning the ingestion of the data file is still processing
              
              `fail` meaning the ingestion of the data file has failed
              
              `success` meaning the ingestion of the data file has finished successfully
      detail:
            type: "array"
            description: "Detailed description of failure error, if the ingestion of the data file were to encounter a failure"
            items: 
              type: "string"
      updated: 
            type: "timestamp"
            description: "Timestamp (in UTC) of the most recent update on the status of the data file upload"        
    example: 
          id: "group_id_elig_2019_4_5"
          type: "eligibility"
          name: "group_id_eligibility"
          status: "processing"
          updated: "2019-04-10 14:59:23"    
# Delete Eligibility Detail Output  
  DeleteDetailOutput:
    type: "object"
    properties: 
      id:   
            type: "string"
            description: "Data file ID created by the Reclaim system to refer to the upload activity"
      type:   
            type: "string"
            description: "Data file type, e.g., eligibility, basic, hospital, etc."           
      name:
            type: "string"
            description: "Description of the data file to upload as provided by the client"        
      status:   
            type: "string"
            description: |
              Status of the data file upload in the Reclaim system. This can take one of three values:
              
              `processing` meaning the ingestion of the data file is still processing
              
              `fail` meaning the ingestion of the data file has failed
              
              `success` meaning the ingestion of the data file has finished successfully
      detail:
            type: "array"
            description: "Detailed description of failure error, if the deletion of the data file were to encounter a failure"
            items: 
              type: "string"
      updated: 
            type: "timestamp"
            description: "Timestamp (in UTC) of the most recent update on the deletion status of the data file"        
    example: 
          id: "group_id_elig_2019_4_5"
          type: "eligibility"
          name: "group_id_eligibility"
          status: "success"
          updated: "2019-04-10 14:59:23" 
          detail: 
            - "The file 'group_id_eligibility.csv' was successfully deleted."
## Benefit Upload Detail Output  
#  BenefitUploadDetailOutput:
#    type: "object"
#    properties: 
#      id:   
#            type: "string"
#            description: "Benefit upload ID as instructed by client upload post request"
#      status:   
#            type: "string"
#            description: |
#              Status of benefits file upload and ingestion process into the Reclaim system. This can take one of three values:
#              
#              `processing` meaning the ingestion of the benefits file is still processing
#              
#              `fail` meaning the ingestion of the benefits file has failed
#              
#              `success` meaning the ingestion of the benefits file has finished successfully
#      detail:
#            type: "string"
#            description: "Detailed description of failure error, if the ingestion of the benefits file were to encounter a failure"
#      updated: 
#            type: "timestamp"
#            description: "Timestamp of the most recent update on the status of the benefits file upload"        
#    example: 
#          id: "group_id_ben_2019_4_5"
#          status: "processing"
#          updated: "2019-04-10 14:59:23"
##Benefit Status Check Detail Output      
#  BenefitStatusCheckDetailOutput:
#    type: "object"
#    properties: 
#      eligibility:
#        type: "array"
#        description: "Array of objects describing the status of the most recent benefit file uploads by the client to the Reclaim system"
#        items:
#          type: "object"
#          properties:
#            id:   
#              type: "string"
#              description: "Benefit upload ID as instructed by client upload post request"
#            status:   
#              type: "string"
#              description: |
#                Status of benefit file upload and ingestion process into the Reclaim system. This can take one of three values:
#              
#                `processing` meaning the ingestion of the benefit file is still processing
#              
#                `fail` meaning the ingestion of the benefit file has failed
#              
#                `success` meaning the ingestion of the benefit file has finished successfully
#            detail:
#              type: "string"
#              description: "Detailed description of failure error, if the ingestion of the benefit were to encounter a failure"    
#            updated: 
#              type: "timestamp"
#              description: "Timestamp of the most recent update on the status of the benefit file upload"
#    example: 
#      eligibility:
#        - id: "group_id_ben_2019_4_5"
#          status: "success"
#          updated: "2019-04-10 14:59:23"
#        - id: "group_id_ben_2019_5_5"  
#          status: "processing"
#          updated: "2019-05-10 12:59:29"
#        - id: "group_id_ben_2019_5_6"  
#          status: "fail"
#          updated: "2019-05-10 12:59:29"  
#          detail: "line 9, column 10 - found unexpected data format"   

#Subscriber Detail Iutput
  SubscriberDetailInput:
    type: "object"
    properties: 
      id:   
            type: "string"
            description: "Subscriber ID as known to Client"
      status: 
            type: "string"
            description: "Status of the subscriber, i.e., 'active', 'terminated', etc."
      benefits: 
          type: "array"
          description: "Array of current healthcare benefits that the subscriber is enrolled in"  
      group:   
            type: "string"
            description: "Employer group unique Reclaim short name identifier" 
      division:   
            type: "string"
            description: "Employer group's division short name identifer"        
      name:
                    type: "object"
                    description: "Member's name object"
                    properties:
                      first:
                        type: "string"
                        description: "Member's first name"
                      middle:
                        type: "string"
                        description: "Member's middle name"   
                      last:
                        type: "string"
                        description: "Member's last name" 
      dob: 
                    type: "date"
                    description: "Member's date of birth formatted as yyyy-month-date"
      gender:
                    type: "string"
                    description: "Member's gender ('f' for female, 'm' for male, and 'u' for unknown)"
      ssn:
                    type: "string"
                    description: "Subscriber's social security number"
      address:
                    type: "object"
                    description: "Member's address. If omitted, Reclaim assumes member resides at the same address as the subscriber"
                    properties:
                      street_1:
                        type: "string"
                        description: "First line of street address, if available"
                      street_2:
                        type: "string"
                        description: "Second line of street address, if available"    
                      city:
                        type: "string"
                        description: "Member's city name"  
                      zip_code:
                        type: "string"
                        description: "Member's zip code (required)"
                      state:
                        type: "string"
                        description: "Member's state name"   
      members: 
        type: "array"
        description: "Array of members to add/update associated with the subscriber"
        items:
          type: "object"
          properties:
              id:   
                    type: "string"
                    description: "Member ID as known to Client"   
              status: 
                type: "string"
                description: "Status of the member, i.e., 'active', 'terminated', etc."
              benefits: 
                type: "array"
                description: "Array of current healthcare benefits that the member is enrolled in"         
              name:
                            type: "object"
                            description: "Member's name object"
                            properties:
                              first:
                                type: "string"
                                description: "Member's first name"
                              middle:
                                type: "string"
                                description: "Member's middle name"   
                              last:
                                type: "string"
                                description: "Member's last name" 
              dob: 
                            type: "date"
                            description: "Member's date of birth formatted as yyyy-month-date"
              gender:
                            type: "string"
                            description: "Member's gender ('f' for female, 'm' for male, and 'u' for unknown)"
              ssn:
                            type: "string"
                            description: "Member's social security number"
              address:
                            type: "object"
                            description: "Member's address. If omitted, Reclaim assumes member resides at the same address as the subscriber"
                            properties:
                              street_1:
                                type: "string"
                                description: "First line of street address, if available"
                              street_2:
                                type: "string"
                                description: "Second line of street address, if available"    
                              city:
                                type: "string"
                                description: "Member's city name"  
                              zip_code:
                                type: "string"
                                description: "Member's zip code"
                              state:
                                type: "string"
                                description: "Member's state name" 
              relation:
                    type: "string"
                    description: "Member's relationship to the subscriber ('spouse', 'child')"
                  
    example:
      id: "1774"
      status: "active"
      benefits: [ ]
      group: "acme"
      division: "corporate"
      name:
        first: "Jayson"
        middle: null
        last: "Gomez"
      dob: "1955-02-23"
      gender: "m"
      ssn: "235848321"
      address:
            street_1: null
            street_2: "100 Talabow Street"
            city: "Boston"
            zip_code: "02215"
            state: "MA"
      members:
        - id: "1776"
          status: "active"
          benefits: [ ]
          name:
            first: "Josie"
            middle: null
            last: "Gomez"
          dob: "1957-12-03"  
          gender: "f"
          ssn: "000001234"
          relationship: "spouse"
          address:
            street_1: null
            street_2: "100 Talabow Street"
            city: "Boston"
            zip_code: "02215"
            state: "MA"
        - id: "1777"
          name:
            first: "Bobby"
            middle: null
            last: "Gomez"
          dob: "2000-01-01"
          gender: "m"
          ssn: "000005552"
          relationship: "child"
          address:
            street_1: null
            street_2: "100 Talabow Street"
            city: "Boston"
            zip_code: "02215"
            state: "MA"
            
# Update Subscriber Details            
  UpdateSubscriberDetailInput:  
    type: "object"
    properties:    
          status: 
            type: "string"
            description: "Status of the member, i.e., 'active', 'terminated', etc."
          benefits: 
            type: "array"
            description: "Array of current healthcare benefits that the subscriber is enrolled in"          
          name:
                        type: "object"
                        description: "Subscriber's name object"
                        properties:
                          first:
                            type: "string"
                            description: "Subscriber's first name"
                          middle:
                            type: "string"
                            description: "Subscriber's middle name"   
                          last:
                            type: "string"
                            description: "Subscriber's last name" 
          dob: 
                        type: "date"
                        description: "Subscriber's date of birth formatted as yyyy-month-date"
          gender:
                        type: "string"
                        description: "Subscriber's gender ('F' for female, 'M' for male, and 'U' for unknown)"
          ssn:
                        type: "string"
                        description: "Subscriber's social security number"
          address:
                type: "object"
                description: "Subscriber's address. If omitted, Reclaim assumes member resides at the same address as the subscriber"
                properties:
                          street_1:
                            type: "string"
                            description: "First line of street address, if available"
                          street_2:
                            type: "string"
                            description: "Second line of street address, if available"    
                          city:
                            type: "string"
                            description: "Subscriber's city name"  
                          zip_code:
                            type: "string"
                            description: "Subscriber's zip code (required for subscriber)"
                          state:
                            type: "string"
                            description: "Subscriber's state name" 
    example:
      name: 
        first: "Zulu" 
        
#Subscriber Detail Output
  SubscriberDetailOutput:
    type: "object"
    properties: 
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          subscriber:
            type: "object"
            properties:         
              id:
                type: "string"
                description: "Subscriber's ID, as known to the client"
              group:
                type: "string"
                description: "Reclaim's group unique name identifier to which the subscriber belongs"
              division:
                type: "string"
                description: "Employer group division to which the subscriber belongs"
              name:
                type: "object"
                description: "Subscriber's name object"
                properties:
                  first:
                    type: "string"
                    description: "Subscriber's first name"
              age: 
                    type: "integer"
                    description: "Subscriber's age"
              gender:
                    type: "string"
                    description: "Subscriber's gender ('f' for female, 'm' for male, and 'u' for unknown)"
              zip_code:
                    type: "string"
                    description: "Subscriber's zip code" 
              claims:
                type: "object"
                description: "Object specifying claims availability and subscriber authorization status, if applicable"
                properties:
                  available:
                    type: "boolean"
                    description: "true if the subscriber has their claims mapped in the Reclaim system"
                  opt_in:
                    type: "object"
                    properties:
                      flag: 
                        type: "boolean"
                        description: "true if the subscriber has already authorized Reclaim for the use of their claims, false otherwise"
                      date: 
                        type: "timestamp"
                        description: "Timestamp (in UTC) of the latest update on the subscriber claims authorization"
              survey:
                type: "object"
                description: "Object specifying if the subscriber has taken the enrollment survey"
                properties:
                  flag: 
                    type: "boolean"
                    description: "true if the subscriber has already authorized Reclaim for the use of their claims, false otherwise"
                  date: 
                        type: "timestamp"
                        description: "Timestamp (in UTC) of the latest update on the subscriber claims authorization"

              created:
                type: "timestamp"
                description: "Timestamp (in UTC) indicating the time the subscriber was created"
              updated:
                type: "timestamp"
                description: "Timestamp (in UTC) indicating the time the subscriber was last updated" 
          members: 
            type: "array"
            description: "Array of members associated with the subscriber"
            items:
              type: "object"
              properties:
                  id:   
                    type: "string"
                    description: "Member ID as known to Client"           
                  name:
                    type: "object"
                    description: "Member's name object"
                    properties:
                      first:
                        type: "string"
                        description: "Member's first name"
                  age: 
                    type: "integer"
                    description: "Member's age"
                  gender:
                    type: "string"
                    description: "Member's gender ('f' for female, 'm' for male, and 'u' for unknown)"
                  zip_code:
                    type: "string"
                    description: "Member's zip code"
                  relation:
                        type: "string"
                        description: "Member's relationship to the subscriber ('spouse', 'child')"
                  created:
                    type: "timestamp"
                    description: "Timestamp (in UTC) indicating the time the member was created"
                  updated:
                    type: "timestamp"
                    description: "Timestamp (in UTC) indicating the time the member was last updated"         
            
    example:
      status: "success"
      details: []
      entity:
          subscriber: 
              id: "1774"
              group_id: "acme"
              division: "corporate"
              name: 
                first: "Jason"
              age: 64
              gender: "m"
              zip_code: "02215"
              claims:
                available: true
                opt_in:
                  flag: true
                  date: "2019-06-20 13:46:22.368355"       
              survey:
                flag: false
                date: null
              created: "2019-06-20 13:46:22.368361"
              updated: "2019-06-20 13:46:22.368364"
          members:
            - id: "1776"
              name:
                first: "Josie"
              age: 61
              gender: "f"
              zip_code: "02215"
              relation: "spouse"
              created: "2019-06-20 13:46:22.368371"
              updated: "2019-06-20 13:46:22.368373"
            - id: "1777"
              name:
                first: "Bobby"
              age: 19
              gender: "m"
              zip_code: "02215"
              relation: "child"
              created: "2019-06-20 13:46:22.368378"
              updated: "2019-06-20 13:46:22.368378"  
              
          
#Update Subscriber Detail Output
  UpdateSubscriberDetailOutput:
    type: "object"
    properties: 
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:      
              id:
                type: "string"
                description: "Subscriber's ID, as known to the client"
              group:
                type: "string"
                description: "Reclaim's group unique name identifier to which the subscriber belongs"
              division:
                type: "string"
                description: "Employer group division to which the subscriber belongs"
              name:
                type: "object"
                description: "Subscriber's name object"
                properties:
                  first:
                    type: "string"
                    description: "Subscriber's first name"
              age: 
                    type: "integer"
                    description: "Subscriber's age"
              gender:
                    type: "string"
                    description: "Subscriber's gender ('f' for female, 'm' for male, and 'u' for unknown)"
              zip_code:
                    type: "string"
                    description: "Subscriber's zip code" 
              claims:
                type: "object"
                description: "Object specifying claims availability and subscriber authorization status, if applicable"
                properties:
                  available:
                    type: "boolean"
                    description: "true if the subscriber has their claims mapped in the Reclaim system"
                  opt_in:
                    type: "object"
                    properties:
                      flag: 
                        type: "boolean"
                        description: "true if the subscriber has already authorized Reclaim for the use of their claims, false otherwise"
                      date: 
                        type: "timestamp"
                        description: "Timestamp (in UTC) of the latest update on the subscriber claims authorization"
              survey:
                type: "object"
                description: "Object specifying if the subscriber has taken the enrollment survey"
                properties:
                  flag: 
                    type: "boolean"
                    description: "true if the subscriber has already authorized Reclaim for the use of their claims, false otherwise"
                  date: 
                        type: "timestamp"
                        description: "Timestamp (in UTC) of the latest update on the subscriber claims authorization"

              created:
                type: "timestamp"
                description: "Timestamp (in UTC) indicating the time the subscriber was created"
              updated:
                type: "timestamp"
                description: "Timestamp (in UTC) indicating the time the subscriber was last updated"
                
    example:
      status: "success"
      details: 
        - "Updated subscriber '1774' successfully"
      entity:
          id: "1774"
          group: "acme"
          division: "corporate"
          name: 
            first: "Zulu"
          age: 64
          gender: "m"
          zip_code: "02215"
          claims:
            available: true
            opt_in:
              flag: true
              date: "2019-06-20 13:46:22.368355"       
          survey:
            flag: false
            date: null
          created: "2019-06-20 13:46:22.368361"
          updated: "2019-06-20 13:46:27.424498"  
          
#Members Detail Iutput
  AddMembersDetailInput:
    type: "object"
    properties: 
      members: 
        type: "array"
        description: "Array of members to add/update associated with the subscriber"
        items:
          type: "object"
          properties:
              id:   
                    type: "string"
                    description: "Member ID as known to Client"    
              status: 
                type: "string"
                description: "Status of the member, i.e., 'active', 'terminated', etc."
              benefits: 
                type: "array"
                description: "Array of current healthcare benefits that the member is enrolled in"          
              name:
                            type: "object"
                            description: "Member's name object"
                            properties:
                              first:
                                type: "string"
                                description: "Member's first name"
                              middle:
                                type: "string"
                                description: "Member's middle name"   
                              last:
                                type: "string"
                                description: "Member's last name" 
              dob: 
                            type: "date"
                            description: "Member's date of birth formatted as yyyy-month-date"
              gender:
                            type: "string"
                            description: "Member's gender ('F' for female, 'M' for male, and 'U' for unknown)"
              ssn:
                            type: "string"
                            description: "Member's social security number"
              address:
                    type: "object"
                    description: "Member's address. If omitted, Reclaim assumes member resides at the same address as the subscriber"
                    properties:
                              street_1:
                                type: "string"
                                description: "First line of street address, if available"
                              street_2:
                                type: "string"
                                description: "Second line of street address, if available"    
                              city:
                                type: "string"
                                description: "Member's city name"  
                              zip_code:
                                type: "string"
                                description: "Member's zip code (required for subscriber)"
                              state:
                                type: "string"
                                description: "Member's state name"                   
              relation:
                    type: "string"
                    description: "Member's relationship to the subscriber ('spouse', 'child')"
    example:
      members:
        - id: "1800"
          status: "active"
          benefits: [ ]
          name:
            first: "George"
            middle: null
            last: "Gomez"
          dob: "2004-12-03"
          gender: "m"
          ssn: "000001334"
          relation: "child"  
          address:
            street_1: null
            street_2: null
            zip_code: "02215"
            city: "Boston"
            state: "MA"
        - id: "1801"
          status: "active"
          benefits: [ ]
          name:
            first: "Lucy"
            middle: null
            last: "Gomez"
          dob: "2017-04-02"
          gender: "f"
          ssn: "000005152"
          relation: "child"       
          
#Members Detail Output
  MembersDetailOutput:
    type: "object"
    properties: 
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          count: 
            type: "integer"
            description: "Number of members, including the subscriber, eligible for the subscriber's plan"
          subscriber:
            type: "string"
            description: "Susbscriber ID as known to Client"
          members: 
            type: "array"
            description: "Array of members associated with the subscriber"
            items:
              type: "object"
              properties:
                  id:   
                    type: "string"
                    description: "Member ID as known to Client"           
                  name:
                    type: "object"
                    description: "Member's name object"
                    properties:
                      first:
                        type: "string"
                        description: "Member's first name"
                  age: 
                    type: "integer"
                    description: "Member's age"
                  gender:
                    type: "string"
                    description: "Member's gender ('f' for female, 'm' for male, and 'u' for unknown)"
                  zip_code:
                    type: "string"
                    description: "Member's zip code"
                  relation:
                        type: "string"
                        description: "Member's relationship to the subscriber ('spouse', 'child')"
                  created:
                    type: "timestamp"
                    description: "Timestamp (in UTC) indicating the time the member was created"
                  updated:
                    type: "timestamp"
                    description: "Timestamp (in UTC) indicating the time the member was last updated"          
    example:
      status: "success"
      details: []
      entity:
          count: 2
          subscriber: "1774"
          members:
            - id: "1776"
              name: 
                first: "Josie"
              age: 61
              gender: "f"
              zip_code: "02215"
              relationship: "spouse"
              created: "2019-06-20 13:46:22.368371"
              updated: "2019-06-20 13:46:22.368373"
            - id: "1777"
              name: 
                first: "Bobby"
              age: 19
              gender: "m"
              zip_code: "02215"
              relation: "child"
              created: "2019-06-20 13:46:22.368378"
              updated: "2019-06-20 13:46:22.368381"

#Members Detail Output
  AddMembersDetailOutput:
    type: "object"
    properties: 
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          subscriber:
            type: "string"
            description: "Susbscriber ID as known to Client"
          members: 
            type: "array"
            description: "Array of members associated with the subscriber"
            items:
              type: "object"
              properties:
                  id:   
                    type: "string"
                    description: "Member ID as known to Client"           
                  name:
                    type: "object"
                    description: "Member's name object"
                    properties:
                      first:
                        type: "string"
                        description: "Member's first name"
                  age: 
                    type: "integer"
                    description: "Member's age"
                  gender:
                    type: "string"
                    description: "Member's gender ('f' for female, 'm' for male, and 'u' for unknown)"
                  zip_code:
                    type: "string"
                    description: "Member's zip code"
                  relation:
                        type: "string"
                        description: "Member's relationship to the subscriber ('spouse', 'child')"
                  created:
                    type: "timestamp"
                    description: "Timestamp (in UTC) indicating the time the member was created"
                  updated:
                    type: "timestamp"
                    description: "Timestamp (in UTC) indicating the time the member was last updated"          
    example:
      status: "success"
      details: []
      entity:
          subscriber: "1774"
          members:
            - id: "1800"
              name: 
                first: "George"
              age: 14
              gender: "m"
              zip_code: "02215"
              relationship: "child"
              created: "2019-06-20 13:46:26.625506"
              updated: "2019-06-20 13:46:26.625509"
            - id: "1801"
              name: 
                first: "Lucy"
              age: 2
              gender: "f"
              zip_code: "02215"
              relation: "child"
              created: "2019-06-20 13:46:26.625517"
              updated: "2019-06-20 13:46:26.625520"

 
 
 #Members Detail Iutput
  MemberDetailInput:
    type: "object"
    properties: 
          id:   
                type: "string"
                description: "Member ID as known to Client"    
          status: 
            type: "string"
            description: "Status of the member, i.e., 'active', 'terminated', etc."
          benefits: 
            type: "array"
            description: "Array of current healthcare benefits that the member is enrolled in"          
          name:
                        type: "object"
                        description: "Member's name object"
                        properties:
                          first:
                            type: "string"
                            description: "Member's first name"
                          middle:
                            type: "string"
                            description: "Member's middle name"   
                          last:
                            type: "string"
                            description: "Member's last name" 
          dob: 
                        type: "date"
                        description: "Member's date of birth formatted as yyyy-month-date"
          gender:
                        type: "string"
                        description: "Member's gender ('F' for female, 'M' for male, and 'U' for unknown)"
          ssn:
                        type: "string"
                        description: "Member's social security number"
          address:
                type: "object"
                description: "Member's address. If omitted, Reclaim assumes member resides at the same address as the subscriber"
                properties:
                          street_1:
                            type: "string"
                            description: "First line of street address, if available"
                          street_2:
                            type: "string"
                            description: "Second line of street address, if available"    
                          city:
                            type: "string"
                            description: "Member's city name"  
                          zip_code:
                            type: "string"
                            description: "Member's zip code (required for subscriber)"
                          state:
                            type: "string"
                            description: "Member's state name"                   
          relation:
                type: "string"
                description: "Member's relationship to the subscriber ('spouse', 'child')"
    example:
      id: 91322229
      group_id: "a406653b-16a3-429f-a6d7-6f43a189b80c"
      division: "corporate"
      name:
        first: "Grace"
        middle: "M"
        last: "Doe"
      dob: "1995-08-02"
      gender: "F"
      ssn: "8345"
      address:
            street_1: "2200 Fenway Road"
            street_2: ""
            city: "Boston"
            zip_code: "02215"
            state: "MA"
      relationship: "child"        
            
 
# Update Member Details            
  UpdateMemberDetailInput:  
    type: "object"
    description: "Object including only the pieces that Client needs to update for member's info"
    properties:          
          status: 
            type: "string"
            description: "Status of the member, i.e., 'active', 'terminated', etc."
          benefits: 
            type: "array"
            description: "Array of current healthcare benefits that the member is enrolled in"          
          name:
                        type: "object"
                        description: "Member's name object"
                        properties:
                          first:
                            type: "string"
                            description: "Member's first name"
                          middle:
                            type: "string"
                            description: "Member's middle name"   
                          last:
                            type: "string"
                            description: "Member's last name" 
          dob: 
                        type: "date"
                        description: "Member's date of birth formatted as yyyy-month-date"
          gender:
                        type: "string"
                        description: "Member's gender ('F' for female, 'M' for male, and 'U' for unknown)"
          ssn:
                        type: "string"
                        description: "Member's social security number"
          address:
                type: "object"
                description: "Member's address. If omitted, Reclaim assumes member resides at the same address as the subscriber"
                properties:
                          street_1:
                            type: "string"
                            description: "First line of street address, if available"
                          street_2:
                            type: "string"
                            description: "Second line of street address, if available"    
                          city:
                            type: "string"
                            description: "Member's city name"  
                          zip_code:
                            type: "string"
                            description: "Member's zip code (required for subscriber)"
                          state:
                            type: "string"
                            description: "Member's state name"                   
          relation:
                type: "string"
                description: "Member's relationship to the subscriber ('spouse', 'child')"
    example:
      name:
        first: "Jorge"

# Update Member Detail Output
  UpdateMemberDetailOutput:
    type: "object"
    properties: 
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
              subscriber:
                type: "string"
                description: "Susbscriber ID as known to Client"
              id:   
                type: "string"
                description: "Member ID as known to Client"           
              name:
                type: "object"
                description: "Member's name object"
                properties:
                  first:
                    type: "string"
                    description: "Member's first name"
              age: 
                type: "integer"
                description: "Member's age"
              gender:
                type: "string"
                description: "Member's gender ('f' for female, 'm' for male, and 'u' for unknown)"
              zip_code:
                type: "string"
                description: "Member's zip code"
              relation:
                    type: "string"
                    description: "Member's relationship to the subscriber ('spouse', 'child')"
              created:
                type: "timestamp"
                description: "Timestamp (in UTC) indicating the time the member was created"
              updated:
                type: "timestamp"
                description: "Timestamp (in UTC) indicating the time the member was last updated"          
    example:
      status: "success"
      details: []
      entity:
          subscriber: "1774"
          id: "1800"
          name: 
            first: "Jorge"
          age: 14
          gender: "m"
          zip_code: "02215"
          relationship: "child"
          created: "2019-06-20 13:46:26.625506"
          updated: "2019-06-20 13:46:28.253351"
              
#Authorization Detail Output
  AuthorizationDetailOutput:
    type: "object"
    properties: 
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:      
              id:
                type: "string"
                description: "Subscriber's ID, as known to the client"
              group:
                type: "string"
                description: "Reclaim's group unique name identifier to which the subscriber belongs"
              division:
                type: "string"
                description: "Employer group division to which the subscriber belongs"
              name:
                type: "object"
                description: "Subscriber's name object"
                properties:
                  first:
                    type: "string"
                    description: "Subscriber's first name"
              age: 
                    type: "integer"
                    description: "Subscriber's age"
              gender:
                    type: "string"
                    description: "Subscriber's gender ('f' for female, 'm' for male, and 'u' for unknown)"
              zip_code:
                    type: "string"
                    description: "Subscriber's zip code" 
              claims:
                type: "object"
                description: "Object specifying claims availability and subscriber authorization status, if applicable"
                properties:
                  available:
                    type: "boolean"
                    description: "true if the subscriber has their claims mapped in the Reclaim system"
                  opt_in:
                    type: "object"
                    properties:
                      flag: 
                        type: "boolean"
                        description: "true if the subscriber has opted in for Reclaim to use of their claims, false otherwise"
                      date: 
                        type: "timestamp"
                        description: "Timestamp (in UTC) of the latest update on the subscriber claims authorization"
              survey:
                type: "object"
                description: "Object specifying if the subscriber has taken the enrollment survey"
                properties:
                  flag: 
                    type: "boolean"
                    description: "true if the subscriber has already authorized Reclaim for the use of their claims, false otherwise"
                  date: 
                        type: "timestamp"
                        description: "Timestamp (in UTC) of the latest update on the subscriber claims authorization"

              created:
                type: "timestamp"
                description: "Timestamp (in UTC) indicating the time the subscriber was created"
              updated:
                type: "timestamp"
                description: "Timestamp (in UTC) indicating the time the subscriber was last updated"
                
    example:
      status: "success"
      details: [ ]
      entity:
          id: "1774"
          group: "acme"
          division: "corporate"
          name: 
            first: "Zulu"
          age: 64
          gender: "m"
          zip_code: "02215"
          claims:
            available: true
            opt_in:
              flag: true
              date: "2019-06-20 13:46:29.333603"       
          survey:
            flag: false
            date: null
          created: "2019-06-20 13:46:22.368361"
          updated: "2019-06-20 13:46:27.424498"    
              
#Current Plan Performance Review Detail Output
  ReviewDetailOutput:
    type: "object"
    properties: 
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties: 
          claims:
            type: "object"
            description: "Object specifying claims availability and subscriber authorization status, if applicable"
            properties:
              available:
                type: "boolean"
                description: "true if the subscriber has their claims mapped in the Reclaim system"
              authorized:
                type: "object"
                properties:
                  flag: 
                    type: "boolean"
                    description: "true if the subscriber has already authorized Reclaim for the use of their claims, false otherwise"
                  date: 
                    type: "timestamp"
                    description: "Timestamp (in UTC) of the latest update on the subscriber claims authorization"
          members:
            type: "array"
            description: "Members array"
            items:
              type: "object"
              properties:
                  id:
                    type: "integer"
                    description: "Member's ID, as known to the client"
                  group_id:
                    type: "string"
                    description: "Reclaim's group unique identifier to which the subscriber belongs"
                  division:
                    type: "string"
                    description: "Employer group division to which the subscriber belongs"
                  name:
                    type: "object"
                    description: "Member's name object"
                    properties:
                      first:
                        type: "string"
                        description: "Member's first name"
                      middle:
                        type: "string"
                        description: "Member's middle name"   
                      last:
                        type: "string"
                        description: "Member's last name" 
                  dob: 
                        type: "date"
                        description: "Member's date of birth formatted as yyyy-month-date"
                  gender:
                        type: "string"
                        description: "Member's gender ('F' for female, 'M' for male, and 'U' for unknown)"
                  ssn:
                        type: "string"
                        description: "Member's last four digits of their social security number"
                  address:
                        type: "object"
                        description: "Member's address. If omitted, Reclaim assumes member resides at the same address as the subscriber"
                        properties:
                                  street_1:
                                    type: "string"
                                    description: "First line of street address, if available"
                                  street_2:
                                    type: "string"
                                    description: "Second line of street address, if available"    
                                  city:
                                    type: "string"
                                    description: "Member's city name"  
                                  zip_code:
                                    type: "string"
                                    description: "Member's zip code (required for subscriber)"
                                  state:
                                    type: "string"
                                    description: "Member's state name"  
                  relationship:
                    type: "string"
                    description: "Member's relationship to the subscriber ('subscriber', 'spouse', 'child')"
                  removed:
                    type: boolean
                    description: "true if the associated member is not to be considered for next year's benefits on the subscriber's plan, false otherwise"
                  created:
                    type: "timestamp"
                    description: "Timestamp (in UTC) indicating the time the subscriber was created"
                  updated:
                    type: "timestamp"
                    description: "Timestamp (in UTC) indicating the time the subscriber was last updated"           
          review: 
                type: "object"
                description: "Object describing the assessment of the subscriber's current plan performance"
                properties:
                    plan: 
                        type: "object"
                        description: "Object describing the current health plan"
                        properties:
                            name: 
                                type: "string"
                                description: "Name of the health plan as known to the subscriber on the Client's platform"
                            carrier: 
                                type: "string"
                                description: "Name of the subscriber's current insurance carrier"  
                            assessment: 
                                type: "string"
                                description: |
                                  Short descriptor conferring an assessment of how the current plan has been performing, given the subscriber's claims and healthcare bills for the year thus far. This can take on three different values:

                                  `well_insured` signifies that the cureent year's selected plan was the best option for the subscriber, 

                                  `high_premium` signifies that the subscriber is overpaying on premiums while not needing that comprehensive of coverage, and 

                                  `high_oop` meaning the subscriber has paid more in out-of-pocket expenses with respect to other plans they could have chosen for the current year.
                            detail: 
                                type: "string"
                                description: |
                                  Detailed text associated with the short assessment descriptor
                            spending:    
                              type: "object"
                              description: "Object describing the assessment of the subscriber's current plan performance"
                              properties:
                                premium:
                                    type: "float"
                                    description: "Total amount of premiums paid by the subscriber thus far for the current plan year"
                                oop: 
                                    type: "float"
                                    description: "Total amount of out-of-pocket expenses (medical and pharmacy) paid by the subscriber thus far for the current plan year"
                                chart: 
                                    type: "array"
                                    description: "Array to display spending chart on a monthly basis" 
                                    items:
                                        type: "object"
                                        properties:
                                          date: 
                                            type: "date"
                                            description: "Month on the current plan year"
                                          amount:
                                            type: "float"
                                            description: "Subscriber's total cost for the associated month in the current plan year"          
                            savings:    
                              type: "object"
                              description: "Object describing the assessment of the subscriber's savings during the current plan year, if applicable"
                              properties:
                                group:
                                    type: "float"
                                    description: "Amount contributed by the employer group either through an HSA or an FSA contribution"
                                subscriber: 
                                    type: "float"
                                    description: "Amount contributed by the subscriber either to an HSA or an FSA, if known" 
                                chart: 
                                    type: "array"
                                    description: "Array to display savings contributions chart on a monthly basis" 
                                    items:
                                        type: "object"
                                        properties:
                                          date: 
                                            type: "date"
                                            description: "Month on the current plan year"
                                          amount:
                                            type: "float"
                                            description: "Subscriber's total saving contributions for the associated month in the current plan year"  
                            alternative_savings: 
                                type: "float"
                                description: "Amount that the subscriber could have saved, had they selected another plan for the current year from the options that were made available to them during last year's open enrollment"   
                    events: 
                            type: "array"
                            description: "Array describing the highlights of the subscriber and their dependents' healthcare episodes for the current year"
                            items:
                              type: "object"
                              properties:
                                episode:
                                  type: "string"
                                  description: "Episode description"
                                event:
                                  type: "string"
                                  description: "Episode description"
                                name:
                                  type: "string"
                                  description: "First name of the member associated with the episode of care"
                                start:
                                  type: "date"
                                  description: "Start date of the episode of care"
                                end:
                                  type: "date"
                                  description: "End date of the episode of care"  
                                charge:
                                  type: "float"
                                  description: "Out-of-pocket expense to the subscriber and their dependents"
    example:
      status: "success"
      details: []
      entity:
        claims:
          available: true
          authorized:
            flag: true
            date: "2019-04-15 02:31:20"
        members:
          - id: 300001
            group_id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
            division: "part-time"
            name:
              first: "Jayson"
              middle: "M"
              last: "Yee"
            dob: "1977-01-22"
            gender: "M"
            ssn: "0125"
            address:
              street_1: "PO Box 1235"
              street_2: "100 Talabow Street"
              city: "Houston"
              state: "TX"
              zip_code: "77001"
            relation: "subscriber"
            removed: false
            created: "2019-04-08 17:56:08"
            updated: "2019-04-15 02:31:20"
          - id: 300010
            group_id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
            division: "part-time"
            name:
              first: "Julia"
              middle: "X"
              last: "Yee"
            dob: "1955-01-22"
            gender: "F"
            ssn: "4235"
            address:
              street_1: "PO Box 1235"
              street_2: "100 Talabow Street"
              city: "Houston"
              state: "TX"
              zip_code: "77001"
            relation: "spouse"
            removed: false
            created: "2019-04-08 17:56:08"
            updated: "2019-04-08 17:56:08"
          - id: 300015
            group_id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
            division: "part-time"
            name:
              first: "Zeus"
              middle: "X"
              last: "Yee"
            dob: "2018-10-02"
            gender: "M"
            ssn: "1112"
            address:
              street_1: "PO Box 1235"
              street_2: "100 Talabow Street"
              city: "Houston"
              state: "TX"
              zip_code: "77001"
            relation: "child"
            removed: false
            created: "2019-04-08 17:56:08"
            updated: "2019-04-08 17:56:08"    
          - id: 300610
            group_id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
            division: "part-time"
            name:
              first: "Acer"
              middle: "X"
              last: "Yee"
            dob: "2013-01-25"
            gender: "F"
            ssn: "9178"
            address:
              street_1: "PO Box 1235"
              street_2: "100 Talabow Street"
              city: "Houston"
              state: "TX"
              zip_code: "77001"
            relation: "child"
            removed: false
            created: "2019-04-12 19:37:59"
            updated: "2019-04-12 19:37:59"    
        review:
            plan:
                name: "HDHP Choice Base Plus"
                carrier: "United Healthcare"
                assessment: "well_insured"
                detail: "Your health costs are well managed under the current plan."
                spending:
                  premium: 8800
                  oop: 3535
                  chart: 
                    - date: "2018-01-01"
                      amount: 258.4
                    - date: "2018-02-01"
                      amount: 258.4
                    - date: "2018-03-01"
                      amount: 6173.49     
                    - date: "2018-04-01"
                      amount: 258.40  
                savings:
                  group: 1000
                  subscriber: 5500
                  chart: 
                    - date: "2018-01-01"
                      amount: 475.0
                    - date: "2018-02-01"
                      amount: 1475.0
                    - date: "2018-03-01"
                      amount: 475.0      
                    - date: "2018-04-01"
                      amount: 475.0        
                alternative_savings: 500
            events:
              - episode: "Pregnancy"
                event: "Labor and Childbirth"
                name: "Susan"
                start: "2017-03-28"
                end: "2017-04-02"
                charge: 6173.4
              - episode: "Dislocated Shoulder" 
                event: "Urgent Care"
                name: "Cora"
                start: "2017-08-05"
                end: "2017-08-05"
                charge: 568.3  
    title: "year_review"  
    
# Enrollment Survey Detail Output
  SurveyDetailOutput:
    type: "object"
    properties:
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          count: 
            type: "int"
            description: "Number of questions available to client"
          surveys:
            type: "array"
            description: "Array containing the subscriber's questions and answers to the different types of questionnaires the client has selected to ask on their platform, if applicable. Note that the health related questions may only needed if the subscriber has no claims in the Reclaim system or whether they have elected to not use their claims"
            items:
              type: "object"
              properties:
                id: 
                  type: "string"
                  description: "Survey question ID"
                category: 
                  type: "string"
                  description: "Survey question category ('health', 'financial', 'personality')"
                name:
                  type: "string"
                  description: "Short description of the survey question. The first term defines the umbrella under which the question is served, e.g. **health**, **financial**, and **personality**. The remainder is a short description of the survey question"
                description:
                  type: "string"
                  description: "Survey question verbiage, if necessary to include"  
                type:
                  type: "string"
                  description: |
                    Short descriptor describing the type of the question. This can take the following values:

                    `bool` if the answer to the question is True or False

                    `int` if the answer to the question is an integer

                    `select` if the answer involves selecting a single option from the available choices

                    `multi` if the answer involves selecting at least one option from the available choices
                options:
                  type: "array"
                  description: "Array of string options to suggest to the subscriber, if the expected answer is of type `select` or `multi`"  
                answer:
                  type: "object"
                  properties:
                    value:
                        type: "string, integer, array"
                        description: "String, integer or an array of subscriber's answer, depending on the question type. Note that an array is only applicable for questions of type `multi`"  
                    updated:
                        type: "date"
                        description: "Timestamp (in UTC) of when the latest answer to the survey question"
                ignore_if_claims:
                  type: "boolean"
                  description: "True if the survey question is to be ignored for subscribers who have claims and have authorized the use of their claims for the bundle recommendation"
                created:
                  type: "timestamp"
                  description: "Timestamp (in UTC) of when the survey ID was created"
                updated:
                  type: "timestamp"
                  description: "Timestamp (in UTC) of when the survey question was updated"  
                  
    example:
      status: "success"
      details: []
      entity:
          count: 2
          surveys:
            - id: "d718946b-56f6-4614-9f08-f3aadec99db5"
              category: "health"
              name: "vision"
              description: "Which statement best describes your vision needs?"
              type: "select"
              options: 
                - "Regular eye exams."
                - "Regularly use prescription eyewear but my needs are pretty basic."
                - "Prescription eyewear and needs are more involved."
              answer: 
                value: "Prescription eyewear and needs are more involved."
                date: "2019-06-20 13:46:32.479726"
              ignore_if_claims: false
              created: "2019-06-20 13:46:21.459919"
              updated: "2019-06-20 13:46:21.459922"
            - id: "5f409aad-1d37-4077-ac65-c2570cfb7db7"
              category: "health"
              name: "major_event"
              description: "Do you expect to have any major medical expenses next year, such as a planned surgery?"
              type: "select"
              options: 
                - "No"
                - "Maybe"
                - "Yes"
              answer: 
                value: "Maybe"
                date: "2019-06-20 13:46:35.455530"
              ignore_if_claims: false
              created: "2019-04-12 22:12:51"
              updated: "2019-04-12 22:12:51"
            

# Enrollment Survey Detail Output
  SurveyQuestionDetailOutput:
    type: "object"
    properties:
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
                id: 
                  type: "string"
                  description: "Survey question ID"
                category: 
                  type: "string"
                  description: "Survey question category ('health', 'financial', 'personality')"
                name:
                  type: "string"
                  description: "Short description of the survey question. The first term defines the umbrella under which the question is served, e.g. **health**, **financial**, and **personality**. The remainder is a short description of the survey question"
                description:
                  type: "string"
                  description: "Survey question verbiage, if necessary to include"  
                type:
                  type: "string"
                  description: |
                    Short descriptor describing the type of the question. This can take the following values:

                    `bool` if the answer to the question is True or False

                    `int` if the answer to the question is an integer

                    `select` if the answer involves selecting a single option from the available choices

                    `multi` if the answer involves selecting at least one option from the available choices
                options:
                  type: "array"
                  description: "Array of string options to suggest to the subscriber, if the expected answer is of type `select` or `multi`"  
                answer:
                  type: "object"
                  properties:
                    value:
                        type: "string, integer, array"
                        description: "String, integer or an array of subscriber's answer, depending on the question type. Note that an array is only applicable for questions of type `multi`"  
                    updated:
                        type: "date"
                        description: "Timestamp (in UTC) of when the latest answer to the survey question"
                ignore_if_claims:
                  type: "boolean"
                  description: "True if the survey question is to be ignored for subscribers who have claims and have authorized the use of their claims for the bundle recommendation"
                created:
                  type: "timestamp"
                  description: "Timestamp (in UTC) of when the survey ID was created"
                updated:
                  type: "timestamp"
                  description: "Timestamp (in UTC) of when the survey question was updated"  
                  
    example:
      status: "success"
      details: []
      entity:
              id: "d718946b-56f6-4614-9f08-f3aadec99db5"
              category: "health"
              name: "vision"
              description: "Which statement best describes your vision needs?"
              type: "select"
              options: 
                - "Regular eye exams."
                - "Regularly use prescription eyewear but my needs are pretty basic."
                - "Prescription eyewear and needs are more involved."
              answer: 
                value: "Prescription eyewear and needs are more involved."
                updated: "2019-06-20 13:46:32.479726"
              ignore_if_claims: false
              created: "2019-06-09 23:53:05.081669"
              updated: "2019-06-09 23:53:05.081719"  

# Enrollment Survey Detail Output
  UpdatedSurveyQuestionDetailOutput:
    type: "object"
    properties:
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
                id: 
                  type: "string"
                  description: "Survey question ID"
                category: 
                  type: "string"
                  description: "Survey question category ('health', 'financial', 'personality')"
                name:
                  type: "string"
                  description: "Short description of the survey question. The first term defines the umbrella under which the question is served, e.g. **health**, **financial**, and **personality**. The remainder is a short description of the survey question"
                description:
                  type: "string"
                  description: "Survey question verbiage, if necessary to include"  
                type:
                  type: "string"
                  description: |
                    Short descriptor describing the type of the question. This can take the following values:

                    `bool` if the answer to the question is True or False

                    `int` if the answer to the question is an integer

                    `select` if the answer involves selecting a single option from the available choices

                    `multi` if the answer involves selecting at least one option from the available choices
                options:
                  type: "array"
                  description: "Array of string options to suggest to the subscriber, if the expected answer is of type `select` or `multi`"  
                answer:
                  type: "object"
                  properties:
                    value:
                        type: "string, integer, array"
                        description: "String, integer or an array of subscriber's answer, depending on the question type. Note that an array is only applicable for questions of type `multi`"  
                    updated:
                        type: "date"
                        description: "Timestamp (in UTC) of when the latest answer to the survey question"
                ignore_if_claims:
                  type: "boolean"
                  description: "True if the survey question is to be ignored for subscribers who have claims and have authorized the use of their claims for the bundle recommendation"
                created:
                  type: "timestamp"
                  description: "Timestamp (in UTC) of when the survey ID was created"
                updated:
                  type: "timestamp"
                  description: "Timestamp (in UTC) of when the survey question was updated"  
                  
    example:
      status: "success"
      details: []
      entity:
              id: "d718946b-56f6-4614-9f08-f3aadec99db5"
              category: "health"
              name: "vision"
              description: "Which statement best describes your vision needs?"
              type: "select"
              options: 
                - "Regular eye exams."
                - "Regularly use prescription eyewear but my needs are pretty basic."
                - "Prescription eyewear and needs are more involved."
              answer: 
                value: "Prescription eyewear and needs are more involved."
                updated: "2019-06-20 13:46:32.479726"
              ignore_if_claims: false
              created: "2019-06-09 23:53:05.081669"
              updated: "2019-06-09 23:53:05.081719" 
              
              
# Enrollment Survey Detail Output
  UpdatedSurveyDetailOutput:
    type: "object"
    properties:
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          count:
            type: "integer"
            description: "Number of survey questions updated"
          surveys:
            type: "array"
            description: "Array containing the subscriber's questions and answers to the different types of questionnaires the client has selected to ask on their platform, if applicable. Note that the health related questions may only needed if the subscriber has no claims in the Reclaim system or whether they have elected to not use their claims"
            items:
              type: "object"
              properties:
                id: 
                  type: "string"
                  description: "Survey question ID"
                category: 
                  type: "string"
                  description: "Survey question category ('health', 'financial', 'personality')"
                name:
                  type: "string"
                  description: "Short description of the survey question. The first term defines the umbrella under which the question is served, e.g. **health**, **financial**, and **personality**. The remainder is a short description of the survey question"
                description:
                  type: "string"
                  description: "Survey question verbiage, if necessary to include"  
                type:
                  type: "string"
                  description: |
                    Short descriptor describing the type of the question. This can take the following values:

                    `bool` if the answer to the question is True or False

                    `int` if the answer to the question is an integer

                    `select` if the answer involves selecting a single option from the available choices

                    `multi` if the answer involves selecting at least one option from the available choices
                options:
                  type: "array"
                  description: "Array of string options to suggest to the subscriber, if the expected answer is of type `select` or `multi`"  
                answer:
                  type: "object"
                  properties:
                    value:
                        type: "string, integer, array"
                        description: "String, integer or an array of subscriber's answer, depending on the question type. Note that an array is only applicable for questions of type `multi`"  
                    date:
                        type: "date"
                        description: "Timestamp (in UTC) of when the latest answer to the survey question"
                ignore_if_claims:
                  type: "boolean"
                  description: "True if the survey question is to be ignored for subscribers who have claims and have authorized the use of their claims for the bundle recommendation"
                created:
                  type: "timestamp"
                  description: "Timestamp (in UTC) of when the survey ID was created"
                updated:
                  type: "timestamp"
                  description: "Timestamp (in UTC) of when the survey question was updated"  
                  
    example:
      status: "success"
      details: []
      entity:
          count: 2
          surveys:
            - id: "5f409aad-1d37-4077-ac65-c2570cfb7db7"
              category: "health"
              name: "major_event"
              description: "Do you expect to have any major medical expenses next year, such as a planned surgery?"
              type: "select"
              options: 
                - "No"
                - "Maybe"
                - "Yes"
              answer: 
                value: "Maybe"
                date: "2019-06-20 13:46:35.455530"
              ignore_if_claims: false
              created: "2019-06-09 23:53:05.082905"
              updated: "2019-06-09 23:53:05.082954"
            - id: "84c84277-ebc1-4200-8e57-65f2987d0cf4"
              category: "health"
              name: "reaction"
              description: "When I get sick..."
              type: "select"
              options: 
                - "I use home remedies or over-the-counter medication."
                - "I make an appointment with my regular doctor."
                - "I go to a convenience clinic at a nearby pharmacy or retail store."
                - "I usually end up in urgent care or the emergency room."
              answer: 
                value: "I go to a convenience clinic at a nearby pharmacy or retail store."
                date: "2019-06-20 13:46:35.455561"
              ignore_if_claims: true
              created: "2019-06-09 23:53:05.079225"
              updated: "2019-06-09 23:53:05.079275"              

#Recommendation Detail Iutput
  RecommendationDetailInput:
    type: "object"
    properties:    
      eligibile_benefits: 
            type: "array"
            description: "Array of all the benefits that the subscriber has access to."
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                  description: "Benefit plan ID"
                type:
                  type: "string"
                  description: |
                    Type of the benefit plan. This takes the following possible values
                      
                    `basic` referring to the basic health plan, 
                      
                    `hospital` referring to hospital indemnity benefits.      
                              
    example:
      eligibile_benefits:
        - id: "1154caf4-ee45-44b5-8d9b-2e2beb7c55bd"
          type: "basic"
        - id: "3df5eb4e-e540-4f57-9a61-2b9375839757"
          type: "basic" 
        - id: "c4ee3e25-d304-495e-ac8b-df192a296542"
          type: "hospital"  

#Recommendation Detail Iutput
  UpdateRecommendationDetailInput:
    type: "object"
    properties:    
      eligibile_benefits: 
            type: "array"
            description: "Array of all the benefits that the subscriber has access to."
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                  description: "Benefit basic plan ID. Note that our assumption is that benefits are included with basic plans"
                included: 
                  type: "array"
                  description: "Array detailing the list of included benefits that come with the parent basic benefit"
                  items:
                    type: "object"
                    properties:
                      id:
                          type: "string"
                          description: "Benefit plan ID"
                      type:      
                          description: |
                            Type of the benefit included. This takes the following possible values

                            `hsa` referring to an hsa plan, 

                            `hra` referring to an hra plan.  
                            
                            `fsa` referring to an fsa plan. 
                              
    example:
      eligibile_benefits:
        - id: "1154caf4-ee45-44b5-8d9b-2e2beb7c55bd"
          included:
            id: "61affbd3-6b53-4838-a3bb-8220b369b72e"
            type: "hra" 

# Plan Recommendation Detail Output
  RecommendationDetailOutput:
    type: "object"
    properties:
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          id: 
            type: "string"
            description: "Recommendation Bundle ID"
          recommendations:
            type: "array"
            description: "Object containing the subscriber's recommended bundled plans. Note that the recommendations are based off of consumer data and survery answers (if available) for the case where the subscriber has no claims in the Reclaim system or if they have not authorized Reclaim to use their claims data. The recommendations are based off of consumer data, survey answers (if available) and the claims data associated with the subscriber and their dependents, if the the subscriber has claims in the Reclaim system and has authorized Reclaim to use their claims data"
            items:
                  type: "object"
                  properties:
                    confidence:
                      type: "float"
                      description: "Proportion of people like the subscriber that would save by enrolling in this bundled plan"
                    costs:
                      type: "object"
                      properties:
                        low:
                          type: "float"
                          description: "Lower end of predicted total annual cost (total premiums + out-of-pocket expenses - potential reimbursements - potential group contributions) for this bundled plan"
                        high:
                          type: "float"
                          description: "Upper end of predicted total annual cost (total premiums + out-of-pocket expenses - potential reimbursements - potential group contributions) for this bundled plan"
                    benefits:
                      type: "object"
                      description: "Object containing the detailed policy information within this bundled plan"
                      properties:
                        type: "object"
                        properties:
                          basic: 
                            type: "object"
                            description: "Object containing details about the basic health plan recommended"
                            properties:
                              id: 
                                type: "string"
                                description: "Benefit plan ID"
                              premium:    
                                type: "float"
                                description: "Policy yearly premium"      
                              oop:    
                                type: "object"
                                description: "Object containing the predicted annual out of pocket expenses under this policy. This is only applicable for the basic policy."
                                properties:
                                  low:
                                    type: "float"
                                    description: "Lower end of predicted annual out-of-pocket cost for the policy, if applicable"
                                  high:
                                    type: "float"
                                    description: "Upper end of predicted annual out-of-pocket cost for the policy, if applicable"   
                          additional:
                            type: "array"
                            description: "Array containing additional benefits to the recommended basic plan"
                            items:
                              type: "object"
                              properties:
                                id:
                                  type: "string"
                                  description: "Benefit plan ID"
                                type:
                                  type: "string"
                                  description: |
                                    Type of the benefit plan. This takes the following possible values

                                    `hospital` referring to hospital indemnity benefits.   
                                    
                                    `accident` referring to accident coverage benefits. 
                                    
                                    `critical illness` referring to critical illness benefits. 
                                premium:    
                                    type: "float"
                                    description: "Policy yearly premium"   
                                reimbursement:    
                                    type: "object"
                                    description: "Object containing the predicted reimbursement to the subscriber under this policy. This is only applicable for the supplemental policies (hospital, accident, and critical illness)."
                                    properties:
                                      probability:
                                        type: "float"
                                        description: "Proportion of people like the subscriber who have benefitted from such supplemental policy"
                                      typical_benefit:
                                        type: "float"
                                        description: "Typical reimbursement implied from people like the subscriber who have benefitted from such supplemental policy" 
          members:
            type: "array"
            description: "Members array"
            items:
              id:
                type: "integer"
                description: "Member's ID, as known to the client"
              group_id:
                type: "string"
                description: "Reclaim's group unique identifier to which the subscriber belongs"
              division:
                type: "string"
                description: "Employer group division to which the subscriber belongs"
              name:
                type: "object"
                description: "Member's name object"
                properties:
                  first:
                    type: "string"
                    description: "Member's first name"
                  middle:
                    type: "string"
                    description: "Member's middle name"   
                  last:
                    type: "string"
                    description: "Member's last name" 
              dob: 
                    type: "date"
                    description: "Member's date of birth formatted as yyyy-month-date"
              gender:
                    type: "string"
                    description: "Member's gender ('F' for female, 'M' for male, and 'U' for unknown)"
              ssn:
                    type: "string"
                    description: "Member's last four digits of their social security number"
              address:
                    type: "object"
                    description: "Member's address. If omitted, Reclaim assumes member resides at the same address as the subscriber"
                    properties:
                              street_1:
                                type: "string"
                                description: "First line of street address, if available"
                              street_2:
                                type: "string"
                                description: "Second line of street address, if available"    
                              city:
                                type: "string"
                                description: "Member's city name"  
                              zip_code:
                                type: "string"
                                description: "Member's zip code (required for subscriber)"
                              state:
                                type: "string"
                                description: "Member's state name"  
              relationship:
                type: "string"
                description: "Member's relationship to the subscriber ('subscriber', 'spouse', 'child')"
              removed:
                type: boolean
                description: "true if the associated member is not to be considered for next year's benefits on the subscriber's plan, false otherwise"
              created:
                type: "timestamp"
                description: "Timestamp (in UTC) indicating the time the member was created"
              updated:
                type: "timestamp"
                description: "Timestamp (in UTC) indicating the time the member was last updated"                                        
    example:
      status: "success"
      detail: []
      entity:
          recommendations:
            - confidence: 0.7769
              costs:
                low: 3172.26
                high: 7360.19
              benefits:
                basic:
                  id: "3df5eb4e-e540-4f57-9a61-2b9375839757"
                  premium: 1937.04
                  oop:
                    low: 1235.22
                    high: 5423.15
            - confidence: 0.1918
              costs:
                low: 4184.69
                high: 8372.62
              benefits:
                basic:
                  id: "3df5eb4e-e540-4f57-9a61-2b9375839757"
                  premium: 1937.04
                  oop:
                    low: 1235.22
                    high: 5423.15
                additional:
                  id: "c4ee3e25-d304-495e-ac8b-df192a296542"
                  type: "hospital"
                  premium: 1052.4
                  reimbursement:
                    probability: 0.18
                    typical_benefit: 222.05
            - confidence: 0.0282
              costs:
                low: 7235.22
                high: 11423.15
              benefits:
                basic:
                  id: "1154caf4-ee45-44b5-8d9b-2e2beb7c55bd"
                  premium: 6000.0
                  oop:
                    low: 1235.22
                    high: 5423.15         
            - confidence: 0.0029
              costs:
                low: 8247.651
                high: 12435.581
              benefits:
                basic:
                  id: "1154caf4-ee45-44b5-8d9b-2e2beb7c55bd"
                  premium: 1937.04
                  oop:
                    low: 1235.22
                    high: 5423.15
                additional:
                  id: "c4ee3e25-d304-495e-ac8b-df192a296542"
                  type: "hospital"
                  premium: 1052.4
                  reimbursement:
                    probability: 0.18
                    typical_benefit: 222.05  
          members:
            - id: 300010
              group_id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
              division: "part-time"
              name: 
                first: "Julia"
                middle: "X"
                last: "Yee"
              dob: "1955-01-22"
              gender: "F"
              ssn: "4235"
              address: 
                street_1: "PO Box 1235"
                street_2: "100 Talabow Street"
                city: "Houston"
                state: "TX"
                zip_code: "77001"
              relationship: "spouse"
              removed: false
              created: "2019-04-08 17:56:08"
              updated: "2019-04-08 17:56:08"
            - id: 300015
              group_id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
              division: "part-time"
              name: 
                first: "Zeus"
                middle: "X"
                last: "Yee"
              dob: "2018-10-02"
              gender: "M"
              ssn: "1112"
              address: 
                street_1: "PO Box 1235"
                street_2: "100 Talabow Street"
                city: "Houston"
                state: "TX"
                zip_code: "77001"
              relationship: "child"
              removed: false
              created: "2019-04-08 17:56:08"
              updated: "2019-04-08 17:56:08"
            - id: 300510
              group_id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
              division: "part-time"
              name: 
                first: "Gorgio"
                middle: "X"
                last: "Yee"
              dob: "2016-01-22"
              gender: "F"
              ssn: "2223"
              address: 
                street_1: "PO Box 1235"
                street_2: "100 Talabow Street"
                city: "Houston"
                state: "TX"
                zip_code: "77001"
              relationship: "child"
              removed: false
              created: "2019-04-09 01:38:31"
              updated: "2019-04-09 01:42:18" 
            - id: 300515
              group_id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
              division: "part-time"
              name: 
                first: "Beta"
                middle: "X"
                last: "Yee"
              dob: "2016-01-02"
              gender: "M"
              ssn: "7112"
              address: 
                street_1: "PO Box 1235"
                street_2: "100 Talabow Street"
                city: "Houston"
                state: "TX"
                zip_code: "77001"
              relationship: "child"
              removed: false
              created: "2019-04-09 01:38:31"
              updated: "2019-04-09 01:38:31"  
            - id: 300001
              group_id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
              division: "part-time"
              name: 
                first: "Jayson"
                middle: "X"
                last: "Yee"
              dob: "1977-01-22"
              gender: "M"
              ssn: "0125"
              address: 
                street_1: "PO Box 1235"
                street_2: "100 Talabow Street"
                city: "Houston"
                state: "TX"
                zip_code: "77001"
              relationship: "subscriber"
              removed: false
              created: "2019-04-08 17:56:08"
              updated: "2019-04-10 00:46:46"    
            
                    
# Plan Recommendation Detail Output
  UpdateRecommendationDetailOutput:
    type: "object"
    properties:
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          id: 
            type: "string"
            description: "Recommendation Bundle ID"
          recommendations:
            type: "array"
            description: "Object containing the subscriber's recommended bundled plans. Note that the recommendations are based off of consumer data and survery answers (if available) for the case where the subscriber has no claims in the Reclaim system or if they have not authorized Reclaim to use their claims data. The recommendations are based off of consumer data, survey answers (if available) and the claims data associated with the subscriber and their dependents, if the the subscriber has claims in the Reclaim system and has authorized Reclaim to use their claims data"
            items:
                  type: "object"
                  properties:
                    confidence:
                      type: "float"
                      description: "Proportion of people like the subscriber that would save by enrolling in this bundled plan"
                    costs:
                      type: "object"
                      properties:
                        low:
                          type: "float"
                          description: "Lower end of predicted total annual cost (total premiums + out-of-pocket expenses - potential reimbursements - potential group contributions) for this bundled plan"
                        high:
                          type: "float"
                          description: "Upper end of predicted total annual cost (total premiums + out-of-pocket expenses - potential reimbursements - potential group contributions) for this bundled plan"
                    benefits:
                      type: "object"
                      description: "Object containing the detailed policy information within this bundled plan"
                      properties:
                        type: "object"
                        properties:
                          basic: 
                            type: "object"
                            description: "Object containing details about the basic health plan recommended"
                            properties:
                              id: 
                                type: "string"
                                description: "Benefit plan ID"
                              premium:    
                                type: "float"
                                description: "Policy yearly premium"      
                              oop:    
                                type: "object"
                                description: "Object containing the predicted annual out of pocket expenses under this policy. This is only applicable for the basic policy."
                                properties:
                                  low:
                                    type: "float"
                                    description: "Lower end of predicted annual out-of-pocket cost for the policy, if applicable"
                                  high:
                                    type: "float"
                                    description: "Upper end of predicted annual out-of-pocket cost for the policy, if applicable"   
                              included: 
                                  type: "array"
                                  description: "Array detailing the list of included benefits that come with the parent basic benefit"
                                  items:
                                    type: "object"
                                    properties:
                                      id:
                                          type: "string"
                                          description: "Benefit plan ID"
                                      type:      
                                          description: |
                                            Type of the benefit included. This takes the following possible values

                                            `hsa` referring to an hsa plan, 

                                            `hra` referring to an hra plan.  

                                            `fsa` referring to an fsa plan.
                                      group_contribution:
                                        type: "float"
                                        description: "Subscriber's employer group's contribution to the HSA, if applicable"
                                      recommended_savings:
                                        type: "float"
                                        description: "Recommended subscriber's annual contribution to the HSA or FSA. Note that this does not apply for an HRA"      
                          additional:
                            type: "array"
                            description: "Array containing additional benefits to the recommended basic plan"
                            items:
                              type: "object"
                              properties:
                                id:
                                  type: "string"
                                  description: "Benefit plan ID"
                                type:
                                  type: "string"
                                  description: |
                                    Type of the benefit plan. This takes the following possible values

                                    `hospital` referring to hospital indemnity benefits.   
                                    
                                    `accident` referring to accident coverage benefits. 
                                    
                                    `critical illness` referring to critical illness benefits. 
                                premium:    
                                    type: "float"
                                    description: "Policy yearly premium"   
                                reimbursement:    
                                    type: "object"
                                    description: "Object containing the predicted reimbursement to the subscriber under this policy. This is only applicable for the supplemental policies (hospital, accident, and critical illness)."
                                    properties:
                                      probability:
                                        type: "float"
                                        description: "Proportion of people like the subscriber who have benefitted from such supplemental policy"
                                      typical_benefit:
                                        type: "float"
                                        description: "Typical reimbursement implied from people like the subscriber who have benefitted from such supplemental policy" 
          members:
            type: "array"
            description: "Members array"
            items:
              id:
                type: "integer"
                description: "Member's ID, as known to the client"
              group_id:
                type: "string"
                description: "Reclaim's group unique identifier to which the subscriber belongs"
              division:
                type: "string"
                description: "Employer group division to which the subscriber belongs"
              name:
                type: "object"
                description: "Member's name object"
                properties:
                  first:
                    type: "string"
                    description: "Member's first name"
                  middle:
                    type: "string"
                    description: "Member's middle name"   
                  last:
                    type: "string"
                    description: "Member's last name" 
              dob: 
                    type: "date"
                    description: "Member's date of birth formatted as yyyy-month-date"
              gender:
                    type: "string"
                    description: "Member's gender ('F' for female, 'M' for male, and 'U' for unknown)"
              ssn:
                    type: "string"
                    description: "Member's last four digits of their social security number"
              address:
                    type: "object"
                    description: "Member's address. If omitted, Reclaim assumes member resides at the same address as the subscriber"
                    properties:
                              street_1:
                                type: "string"
                                description: "First line of street address, if available"
                              street_2:
                                type: "string"
                                description: "Second line of street address, if available"    
                              city:
                                type: "string"
                                description: "Member's city name"  
                              zip_code:
                                type: "string"
                                description: "Member's zip code (required for subscriber)"
                              state:
                                type: "string"
                                description: "Member's state name"  
              relationship:
                type: "string"
                description: "Member's relationship to the subscriber ('subscriber', 'spouse', 'child')"
              removed:
                type: boolean
                description: "true if the associated member is not to be considered for next year's benefits on the subscriber's plan, false otherwise"
              created:
                type: "timestamp"
                description: "Timestamp (in UTC) indicating the time the member was created"
              updated:
                type: "timestamp"
                description: "Timestamp (in UTC) indicating the time the member was last updated"                                        
    example:
      status: "success"
      detail: []
      entity:
          recommendations:
            - confidence: 0.7769
              costs:
                low: 3172.26
                high: 7360.19
              benefits:
                basic:
                  id: "3df5eb4e-e540-4f57-9a61-2b9375839757"
                  premium: 1937.04
                  oop:
                    low: 1235.22
                    high: 5423.15
            - confidence: 0.1918
              costs:
                low: 4184.69
                high: 8372.62
              benefits:
                basic:
                  id: "3df5eb4e-e540-4f57-9a61-2b9375839757"
                  premium: 1937.04
                  oop:
                    low: 1235.22
                    high: 5423.15
                additional:
                  id: "c4ee3e25-d304-495e-ac8b-df192a296542"
                  type: "hospital"
                  premium: 1052.4
                  reimbursement:
                    probability: 0.18
                    typical_benefit: 222.05
            - confidence: 0.0282
              costs:
                low: 6235.22
                high: 10423.15
              benefits:
                basic:
                  id: "1154caf4-ee45-44b5-8d9b-2e2beb7c55bd"
                  premium: 6000.0
                  oop:
                    low: 1235.22
                    high: 5423.15  
                  included:
                    id: "61affbd3-6b53-4838-a3bb-8220b369b72e"
                    type: "hra"
                    group_contribution: 1000.0
            - confidence: 0.0029
              costs:
                low: 7247.651
                high: 11435.581
              benefits:
                basic:
                  id: "1154caf4-ee45-44b5-8d9b-2e2beb7c55bd"
                  premium: 1937.04
                  oop:
                    low: 1235.22
                    high: 5423.15
                  included:
                    id: "61affbd3-6b53-4838-a3bb-8220b369b72e"
                    type: "hra"
                    group_contribution: 1000.0    
                additional:
                  id: "c4ee3e25-d304-495e-ac8b-df192a296542"
                  type: "hospital"
                  premium: 1052.4
                  reimbursement:
                    probability: 0.18
                    typical_benefit: 222.05  
          members:
            - id: 300010
              group_id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
              division: "part-time"
              name: 
                first: "Julia"
                middle: "X"
                last: "Yee"
              dob: "1955-01-22"
              gender: "F"
              ssn: "4235"
              address: 
                street_1: "PO Box 1235"
                street_2: "100 Talabow Street"
                city: "Houston"
                state: "TX"
                zip_code: "77001"
              relationship: "spouse"
              removed: false
              created: "2019-04-08 17:56:08"
              updated: "2019-04-08 17:56:08"
            - id: 300015
              group_id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
              division: "part-time"
              name: 
                first: "Zeus"
                middle: "X"
                last: "Yee"
              dob: "2018-10-02"
              gender: "M"
              ssn: "1112"
              address: 
                street_1: "PO Box 1235"
                street_2: "100 Talabow Street"
                city: "Houston"
                state: "TX"
                zip_code: "77001"
              relationship: "child"
              removed: false
              created: "2019-04-08 17:56:08"
              updated: "2019-04-08 17:56:08"
            - id: 300510
              group_id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
              division: "part-time"
              name: 
                first: "Gorgio"
                middle: "X"
                last: "Yee"
              dob: "2016-01-22"
              gender: "F"
              ssn: "2223"
              address: 
                street_1: "PO Box 1235"
                street_2: "100 Talabow Street"
                city: "Houston"
                state: "TX"
                zip_code: "77001"
              relationship: "child"
              removed: false
              created: "2019-04-09 01:38:31"
              updated: "2019-04-09 01:42:18" 
            - id: 300515
              group_id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
              division: "part-time"
              name: 
                first: "Beta"
                middle: "X"
                last: "Yee"
              dob: "2016-01-02"
              gender: "M"
              ssn: "7112"
              address: 
                street_1: "PO Box 1235"
                street_2: "100 Talabow Street"
                city: "Houston"
                state: "TX"
                zip_code: "77001"
              relationship: "child"
              removed: false
              created: "2019-04-09 01:38:31"
              updated: "2019-04-09 01:38:31"  
            - id: 300001
              group_id: "5a17a442-82b6-4e7a-9e24-5576b755cfb6"
              division: "part-time"
              name: 
                first: "Jayson"
                middle: "X"
                last: "Yee"
              dob: "1977-01-22"
              gender: "M"
              ssn: "0125"
              address: 
                street_1: "PO Box 1235"
                street_2: "100 Talabow Street"
                city: "Houston"
                state: "TX"
                zip_code: "77001"
              relationship: "subscriber"
              removed: false
              created: "2019-04-08 17:56:08"
              updated: "2019-04-10 00:46:46"  
              
              
#List Recommendations Detail Output
  ListRecommendationsDetailOutput:
    type: "object"
    properties:    
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          count: 
            type: "integer"
            description: "Number of recently calculated benefit recommendations"
          recommendations: 
            type: "array"
            description: "Array of all recent benefit recommendations computed for a subscriber."
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                  description: "Benefit Recomendation ID"
                created:
                    type: "timestamp"
                    description: "Timestamp (in UTC) indicating the time the recommendation was created"
                updated:
                    type: "timestamp"
                    description: "Timestamp (in UTC) indicating the time the recommendation was last updated"
    example:
      status: "success"
      detail: []
      entity:
        count: 4
        recommendations:
          - id: "d784be51-1071-4659-84f0-bbdaa3b368de"
            created: "2019-04-15 00:48:33"
            updated: "2019-04-15 00:48:33"
          - id: "7c066f97-badd-482e-b6a9-5114151d6358"
            created: "2019-04-15 00:45:44"
            updated: "2019-04-15 00:45:44"
          - id: "05b5d94f-859f-4e0e-b6ae-ff20d4f67dbf"
            created: "2019-04-15 00:44:03"
            updated: "2019-04-15 01:01:27"
          - id: "eeb86d51-980d-49d8-bf16-74e9b738a556"
            created: "2019-04-15 13:48:23"
            updated: "2019-04-15 14:24:49"            

# Input for PCP Enrollment
  PCPDetailInput:
    type: "object"
    properties:
      network: 
        type: "string"
        description: "Short identifier for the carrier network (e.g., 'nexus'). Note that this descriptor should align with one of the basic benefit carrier networks for the group that the subscriber is associated with."
      zip_code: 
        type: "string"
        description: "Zip code to include if the subscriber/member selects a zip code that is different from the one in the Reclaim system. If not furnished, then Reclaim assumes it is the zip code associated with that plan member as per Reclaim's records."
    example:
      network: "nexus"
      zip_code: "02139"   
# Output for PCP Enrollment
  PCPDetailOutput:
    type: "object"
    properties:
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          count: 
            type: "integer"
            description: "Number of potential primary care providers accepting new patients in the requested network, with at least one affiliation within 25 miles of the member's address / zip code"
          providers: 
            type: "array"
            description: "Provider array in the member's vicinity"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                  description: "National provider identification (NPI)"
                tier:
                  type: "string"
                  description: "Provider's tier designationation"
                name:
                  type: "object"
                  properties: 
                    first: 
                      type: "string"
                      description: "Provider's first name"
                    middle: 
                      type: "string"
                      description: "Provider's middle name"
                    last: 
                      type: "string"
                      description: "Provider's last name"
                    suffix: 
                      type: "string"
                      description: "Provider's name suffix"  
                gender: 
                  type: "string"
                  description: "Provider's gender, if known"
                education:
                  type: "object"
                  properties:
                    school: 
                      type: "string"
                      description: "Provider's medical school"
                    residency:   
                      type: "string"
                      description: "Provider's residency institution"
                    internship: 
                      type: "string"
                      description: "Provider's internship institution"
                specialty: 
                  type: "array"
                  description: "Provider's list of specialties and board certifications"
                  items: 
                    type: "object"
                    properties:
                      name: 
                        type: "string"
                        description: "Provider's specialty name"
                      primary: 
                        type: "boolean"
                        description: "True if associated with provider's primary specialty"
                      board_certification: 
                        type: "string"
                        description: "Provider's board certification, if available"
                affiliations:
                  type: "array"
                  description: "List of provider affiliations, including medical groups and hospital affiliations"
                  items:
                    type: "object"
                    properties: 
                        name: 
                          type: "string"
                          description: "Provider's affiliation organization name (medical group or hospital)"
                        type: 
                          type: "string"
                          description: "Affiliation type descriptor (i.e., 'group' or 'hospital')"
                        distance: 
                          type: "float"
                          description: "Estimated distance in miles from member's address / zip code"
                        address:
                            type: "object"
                            description: "Provider affiliation's address"
                            properties:
                              street_1:
                                type: "string"
                                description: "First line of street address, if available"
                              street_2:
                                type: "string"
                                description: "Second line of street address, if available"    
                              city:
                                type: "string"
                                description: "Provider affiliation's city name"  
                              zip_code:
                                type: "string"
                                description: "Provider affiliation's zip code (required)"
                              state:
                                type: "string"
                                description: "Provider affiliation's state name" 
                        phone: 
                          type: "string"
                          description: "Provider affiliation's telephone number"
                        web:
                          type: "string"
                          description: "Provider affiliation's web address, if available"
                        languages:
                          type: "array of strings"
                          description: "Array of spoken languages at the provider's office"
                        office_hours:
                          type: "array of strings"
                          description: "Listing for weekend hours or extended hours, if applicable"
                        wheelchair_access:
                          type: "boolean"
                          description: "True if the provider's office has wheelchair access, if available"
    example:
      status: "success"
      detail: []
      entity:
        count: 2
        providers:
          - id: "1881616894"
            tier: "Tier 1"
            name:
              first: "Edmund"
              middle: "A"
              last: "Kim"
              suffix: "MD"
            gender: "M"
            education: 
              school: "University of Connecticut"
            specialty:
              - name: "Family Practice"
                primary: true
                board_certification: "Family Pactice"
            affiliations:
              - name: "Prohealth Physicians"
                type: "group"
                distance: 9.2
                address:
                  street_1: "950 Yale Ave"
                  city: "Wallingford"
                  zip_code: "06492"
                  state: "CT"
                phone: "2032659600"
                web: "http://www.prohealthmd.com/"
                languages:
                  - "English"
                  - "Spanish"
                office_hours:
                  - "Extended Hours"
                wheelchair_access: true
              - name: "Prohealth Physicians"
                type: "group"
                distance: 14.7
                address:
                  street_1: "21 South Rd"
                  street_2: "Ste 110"
                  city: "Farmington"
                  zip_code: "06032"
                  state: "CT"
                phone: "8602844945"
                web: "http://www.prohealthmd.com/"
                languages:
                  - "English" 
              - name: "Prohealth Physicians"
                type: "group"
                distance: 23.2
                address:
                  street_1: "225 Hopmeadow St"
                  city: "Weatogue"
                  zip_code: "06089"
                  state: "CT"
                phone: "8606580465"
                web: "http://www.prohealthmd.com/"
                languages:
                  - "English"
                  - "Spanish"
                office_hours:
                  - "Extended Hours"
                  - "Weekend Hours"
                wheelchair_access: true  
          - id: "1780194324"
            tier: "Tier 1"
            name:
              first: "Pinky"
              last: "Gaba"
              suffix: "NP"
            gender: "F"
            education: 
              school: "Yale Medical School"
              internship: "St Francis Hospital Medical Center"
            specialty:
              - name: "Nurse Practitioner"
                primary: true
            affiliations:
              - name: "Healthwise Medical Association"
                type: "group"
                distance: 2.2
                address:
                  street_1: "375 E Center St"
                  city: "New Haven"
                  zip_code: "06702"
                  state: "CT"
                phone: "8606460166"
                web: "http://www.healthwisema.com/"
                languages:
                  - "English"
                  - "Spanish"
                office_hours:
                  - "Extended Hours"
                wheelchair_access: true
              - name: "Saint Francis Hospital and Medical Center"
                type: "hospital"
                distance: 23.7
                address:
                  street_1: "114 Woodland St"
                  city: "Hartford"
                  zip_code: "06105"
                  state: "CT"
                phone: "8777837262"
                web: "https://www.stfranciscare.org/hartford"
                languages:
                  - "English" 
                  - "Spanish"
                  - "Arabic"
              

            
          
