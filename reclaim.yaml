---
swagger: "2.0"
info:
  description: |
    # Introduction
    
    The Reclaim Client API provides secure access to our hosted subscriber and group information and is available only to trusted partners under legal contract. Authorization is required for all endpoints (See Security and Authorization for the process of acquiring and access token). The api follows conventional REST guidelines. Two primary sets of resources are available, group and subscriber. Group endpoints are primarily for creating new employer groups and uploading eligibility data in csv format. Subscriber endpoints provide enrollment recommendation-related resources for individual subscribers.
    
    # Getting Started
    
    The Reclaim Client API is a REST API that is designed to access the following RESTful resources:
    
      - **group** or **groups** which provide access to employer group(s) data. Group related APIs can be accessed offline (i.e., before open enrollment), to set up an employer group, upload the features of the benefits they provide to their employees (subscribers), and to gain analytics insights that are related to their employee population.  
    
      - **subscriber** which provide access to a specific subscriber (employee) data. Subscriber related APIs can be accessed at open enrollment and are designed for real-time access as the subscriber is making decisions regarding their benefits.
      
    To better understand the flow of how the API endpoints can be used, we consider separately the scenarios of 1) **pre-enrollment setup**, where the Client can set up the employer groups, upload their corresponding eligibility files and the list of benefits and plan features they offer, and 2) **open enrollment**, where the Client can now access or set up a subscriber, allow them to authorize the use of their claims data, if available, and guide them through the enrollment survey and optimized bebenfit packages.
    
    ## Pre-Enrollment Setup
    TBD
    
    ## Open Enrollment
    Now fast-forward to the time a specific subscriber is ready to start enrolling in their benefits on the Client's platform.
    
    Our assumption is that by the time the Client is ready to enroll a subscriber in their benefits, Reclaim has already ingested the benefit features available to the subscriber's group ahead of time. Note that, Reclaim does not know which of these benefits is the subscriber specifically eligible for. 
    
    Furthermore, while the Client may have shared an eligibility file ahead of open enrollment, the subscriber in question may have joined their employer group recently and therefore may not exist in the Reclaim system. Under this scenario, the Client can add that subscriber's information, along with that of their dependents (members). 
    
    Below is a summary flowchart indicating the minimum steps required for the open enrollment API flow. Click on the POST and GET methods below to delve into the details of the schemas of the expected request payload and the expected outputs, along with sample examples.
    
    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="630px" height="1061px" viewBox="-0.5 -0.5 630 1061" style="background-color: rgb(255, 255, 255);"><defs/><g><rect x="0" y="0" width="180" height="50" fill="#ffffff" stroke="#000000" pointer-events="none"/><g transform="translate(1.5,4.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="176" height="40" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 176px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Subscriber (employee) ready to enroll in next year's benefits on Client platform.</font></div></div></foreignObject><text x="88" y="26" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="217.5" y="107.5" width="158" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(222.5,106.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="148" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 150px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'status': 'success'</font></div></div></foreignObject><text x="74" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New">[Not supported by viewer]</text></switch></g><path d="M 298 100 L 298 70" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="385.5" y="94.5" width="150" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(390.5,93.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="140" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 142px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'status' = 'error'</font></div></div></foreignObject><text x="70" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New">[Not supported by viewer]</text></switch></g><path d="M 460.5 115 L 460.5 133.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 460.5 138.88 L 457 131.88 L 460.5 133.63 L 464 131.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 297 128 L 297 143 Q 297 153 297.07 163 L 297.95 283.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 297.99 288.88 L 294.44 281.91 L 297.95 283.63 L 301.44 281.86 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="101" y="292" width="510" height="50" fill="#fff2cc" stroke="#d6b656" pointer-events="none"/><g transform="translate(102.5,303.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="506" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 506px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">The output will indicate whether the subscriber and their members have claims data available and whether they have authorized their use, or not.</font></div></div></foreignObject><text x="253" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">&lt;font color="#333333" style="font-size: 12px"&gt;The output will indicate whether the subscriber and their members have claims data available and whether they have authorized their use, or not.&lt;/font&gt;</text></switch></g><path d="M 90 452 L 90 583.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 90 588.88 L 86.5 581.88 L 90 583.63 L 93.5 581.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 460.5 90 L 460.5 70" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="378" y="238" width="165" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(381.5,237.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="157" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 157px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'status' = 'success'</font></div></div></foreignObject><text x="79" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New">[Not supported by viewer]</text></switch></g><path d="M 460.5 260 L 460.5 283.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 460.5 288.88 L 457 281.88 L 460.5 283.63 L 464 281.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 460.5 233 L 460.5 213" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="388.5" y="372" width="223" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(390.5,371.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="219" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 219px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'claims.available' = 'false'</font></div></div></foreignObject><text x="110" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New">&lt;font style="font-size: 13px"&gt;'claims.available' = 'false'&lt;/font&gt;</text></switch></g><path d="M 499 391 L 499.49 683.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 499.5 688.88 L 495.99 681.89 L 499.49 683.63 L 502.99 681.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="69.5" y="372" width="223" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(75.5,371.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="211" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 211px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'claims.available' = 'true'</font></div></div></foreignObject><text x="106" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New">&lt;font style="font-size: 13px"&gt;'claims.available' = 'true'&lt;/font&gt;</text></switch></g><path d="M 180.5 368 L 180.5 346" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="2" y="432" width="175" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(7.5,431.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="163" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 165px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'authorized' = 'true'</font></div></div></foreignObject><text x="82" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New">[Not supported by viewer]</text></switch></g><path d="M 89 428 L 89 390" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="182.5" y="412.5" width="180" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(186.5,411.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="172" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 172px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'authorized' = 'false'</font></div></div></foreignObject><text x="86" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New">[Not supported by viewer]</text></switch></g><path d="M 272 410 L 272 391" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 272 430.5 L 272 443.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 272 448.88 L 268.5 441.88 L 272 443.63 L 275.5 441.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="96" y="546" width="168" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(97.5,545.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="164" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 164px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'authorized' = 'true'</font></div></div></foreignObject><text x="82" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New">[Not supported by viewer]</text></switch></g><path d="M 179.5 543 L 179.5 524" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 180 566 L 180 582.13" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 180 587.38 L 176.5 580.38 L 180 582.13 L 183.5 580.38 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="282.5" y="546" width="178" height="15" fill="#f5f5f5" stroke="#b3b3b3" pointer-events="none"/><g transform="translate(285.5,545.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="172" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 15px; font-family: &quot;Courier New&quot;; color: rgb(255, 51, 51); line-height: 1.2; vertical-align: top; width: 172px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">'authorized' = 'false'</font></div></div></foreignObject><text x="86" y="16" fill="#FF3333" text-anchor="middle" font-size="15px" font-family="Courier New">[Not supported by viewer]</text></switch></g><path d="M 371 540 L 371 525.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 372 566.5 L 372 681.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 372 686.88 L 368.5 679.88 L 372 681.63 L 375.5 679.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 136 663.5 L 136 681.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 136 686.88 L 132.5 679.88 L 136 681.63 L 139.5 679.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 186 25 L 249.63 24.55" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 254.88 24.51 L 247.91 28.06 L 249.63 24.55 L 247.86 21.06 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 499 347 L 499 367" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="70" y="693" width="540" height="25" fill="#fff2cc" stroke="#d6b656" pointer-events="none"/><g transform="translate(76.5,699.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="526" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 526px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Subscriber now starts the survey. Client can filter survey questions based on flag 'ignore_if_claims'.</font></div></div></foreignObject><text x="263" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">&lt;font color="#333333" style="font-size: 12px"&gt;Subscriber now starts the survey. Client can filter survey questions based on flag 'ignore_if_claims'.&lt;/font&gt;</text></switch></g><path d="M 350 722 L 350 740.13" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 350 745.38 L 346.5 738.38 L 350 740.13 L 353.5 738.38 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 351.5 804 L 351.5 822.13" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 351.5 827.38 L 348 820.38 L 351.5 822.13 L 355 820.38 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="69" y="912" width="560" height="50" fill="#fff2cc" stroke="#d6b656" pointer-events="none"/><g transform="translate(70.5,923.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="556" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 556px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Subscriber now is ready to get their optimal bundle recommendations. Client may auto-enroll subscriber iteratively into basic plans before posting subscriber's eligible plans to Reclaim. </font></div></div></foreignObject><text x="278" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><path d="M 350 887 L 350 900.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 350 905.88 L 346.5 898.88 L 350 900.63 L 353.5 898.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 352.5 966 L 352.5 984.13" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 352.5 989.38 L 349 982.38 L 352.5 984.13 L 356 982.38 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="261" y="0" width="240" height="65" fill="#ffffff" stroke="#000000" pointer-events="none"/><g transform="translate(262.5,34.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="236" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 236px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Check if Reclaim has subscriber info from an earlier eligibility file ingest.</font></div></div></foreignObject><text x="118" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Subscriber-Specific-Endpoints/paths/~1api~1subscriber~1[subscriber_id]/get"><rect x="260.5" y="0" width="240" height="28" fill="#60a917" stroke="none"/><g transform="translate(289.5,7.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="182" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 184px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">GET /subscriber/[subscriber_id]</div></div></foreignObject><text x="91" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">GET /subscriber/[subscriber_id]</text></switch></g></a><rect x="340.5" y="145" width="240" height="65" fill="#ffffff" stroke="#000000"/><g transform="translate(342.5,179.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="236" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 236px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Subscriber is not in Reclaim system. Add subscriber and their member information.</font></div></div></foreignObject><text x="118" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Subscriber-Specific-Endpoints/paths/~1subscribers/post"><rect x="340.5" y="145" width="240" height="28" fill="#3399ff" stroke="none"/><g transform="translate(409.5,152.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="102" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 104px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">POST /subscriber</div></div></foreignObject><text x="51" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">POST /subscriber</text></switch></g></a><rect x="147.5" y="454.5" width="250" height="65" fill="#ffffff" stroke="#000000"/><g transform="translate(149.5,489.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="246" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 246px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Subscriber authorize claims through Client. Client posts subscriber response.</font></div></div></foreignObject><text x="123" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Subscriber-Specific-Endpoints/paths/~1subscriber~1[subscriber_id]~1authorize/post"><rect x="147.5" y="454.5" width="250" height="28" fill="#3399ff" stroke="none"/><g transform="translate(152.5,461.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="240" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 242px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">POST /subscriber/subscriber_id/authorize</font></div></div></foreignObject><text x="120" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">&lt;font style="font-size: 13px"&gt;POST /subscriber/subscriber_id/authorize&lt;/font&gt;</text></switch></g></a><rect x="10.5" y="595.5" width="250" height="65" fill="#ffffff" stroke="#000000"/><g transform="translate(12.5,630.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="246" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 246px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Subscriber reviews current year claims and plan performance before the survey.</font></div></div></foreignObject><text x="123" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Subscriber-Specific-Endpoints/paths/~1subscriber~1[subscriber_id]~1review/get"><rect x="11" y="596" width="250" height="28" fill="#60a917" stroke="none"/><g transform="translate(23.5,603.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="224" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 224px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">GET /subscriber/[subscriber_id]/review</div></div></foreignObject><text x="112" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">GET /subscriber/[subscriber_id]/review</text></switch></g></a><rect x="230" y="750" width="240" height="50" fill="#ffffff" stroke="#000000"/><g transform="translate(249.5,783.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="200" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 202px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Client list and filters survey questions.</font></div></div></foreignObject><text x="100" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Subscriber-Specific-Endpoints/paths/~1subscriber~1[subscriber_id]~1surveys/get"><rect x="229" y="750" width="240" height="28" fill="#60a917" stroke="none"/><g transform="translate(233.5,757.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="230" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 232px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;">GET /subscriber/[subscriber_id]/surveys</div></div></foreignObject><text x="115" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">GET /subscriber/[subscriber_id]/surveys</text></switch></g></a><rect x="228.5" y="832" width="240" height="50" fill="#ffffff" stroke="#000000"/><g transform="translate(257.5,865.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="182" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 182px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Client posts subscriber's answers.</font></div></div></foreignObject><text x="91" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Subscriber-Specific-Endpoints/paths/~1subscriber~1[subscriber_id]~1surveys/post"><rect x="228.5" y="832" width="241" height="28" fill="#3399ff" stroke="none"/><g transform="translate(233.5,839.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="231" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 233px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">POST /subscriber/subscriber_id/surveys</font></div></div></foreignObject><text x="116" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">&lt;font style="font-size: 13px"&gt;POST /subscriber/subscriber_id/surveys&lt;/font&gt;</text></switch></g></a><rect x="200" y="994" width="300" height="66" fill="#ffffff" stroke="#000000"/><g transform="translate(201.5,1029.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="296" height="26" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 296px; white-space: normal; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font color="#333333" style="font-size: 12px">Client posts subscriber's list of eligible benefits. Reclaim outputs the optimal benefit bundle(s). </font></div></div></foreignObject><text x="148" y="19" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><a xlink:href="#tag/Subscriber-Specific-Endpoints/paths/~1subscriber~1[subscriber_id]~1recommendation/post"><rect x="200" y="994" width="300" height="28" fill="#3399ff" stroke="none"/><g transform="translate(207.5,1001.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="284" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(255, 255, 255); line-height: 1.2; vertical-align: top; width: 284px; white-space: nowrap; overflow-wrap: normal; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><font style="font-size: 13px">POST /subscriber/subscriber_id/recommendation</font></div></div></foreignObject><text x="142" y="13" fill="#ffffff" text-anchor="middle" font-size="13px" font-family="Helvetica">&lt;font style="font-size: 13px"&gt;POST /subscriber/subscriber_id/recommendation&lt;/font&gt;</text></switch></g></a></g></svg>

    Note that the Reclaim API includes a wider array of methods and resources that you can access, well beyond those presented in the flowchart above. The rest of the documentation attempts to delve into the details of both the group-specific and the subscriber-specific endpoints.
    
   
  version: "v0.2"
  title: "RECLAIM Backend APIs"
host: "sandbox.reclaim.health"
x-logo:
   url: 'https://rebilly.github.io/ReDoc/petstore-logo.png'


#![foo](https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png 'title')
#You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For this sample, you can use the api key `special-key` to test the authorization filters.

#This API is documented in **OpenAPI format** and is based on [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team. It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo) tool and [ReDoc](https://github.com/Rebilly/ReDoc) documentation. In addition to standard OpenAPI syntax we use a few [vendor extensions](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md).

### OpenAPI Specification
#    This API is documented in **OpenAPI format** and is based on
#    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
#    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
#    tool and [ReDoc](https://github.com/Rebilly/ReDoc) documentation. In addition to standard
#    OpenAPI syntax we use a few [vendor extensions](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md).
#    # Cross-Origin Resource Sharing
#    This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).
#    And that allows cross-domain communication from the browser.
#    All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.
#    # Authentication
#    Petstore offers two forms of authentication:
#      - API Key
#      - OAuth2
#
    

tags:
- name: "Security and Authorization"
  description: |   
    ## Security
    All calls to Reclaim’s APIs are encrypted over HTTPS. Our APIs support connections using TLS version 1.2 or higher. All modern languages and frameworks support TLS 1.2 (although specific older ones do not).
    
#    While these examples illustrate the typical process of obtaining an access token and then properly utilizing that token in an Authorization header for subsequent API requests, be aware that it is extremely inefficient to request a new token if you already obtained one that is still valid (note the number of seconds specified in the expires_in parameter in the cURL example’s response). For this reason we recommend using a PokitDok client library, giving you the ability to instantiate and use a long-lived PokitDok client connection that provides automatic handling of token retrieval, expiration, and rotation.
- name: "Group-Specific Endpoints"
  description: "This section documents the available endpoints associated with open enrollment. These endpoints come from the perspective of obtaining or updating information specific to a subscriber. Following the Reclaim terminology, an employee who enrolls their family in an employer-sponsored plan is the subscriber of the plan."
- name: "Subscriber-Specific Endpoints"
  description: "This section documents the available endpoints associated with open enrollment. These endpoints come from the perspective of obtaining or updating information specific to a subscriber. Following the Reclaim terminology, an employee who enrolls their family in an employer-sponsored plan is the subscriber of the plan."
schemes:
- "https"
paths:
  /oauth2/token:
    post:
      tags:
      - "Security and Authorization"
      summary: "Authorization via OAuth2"
      description: |   
       All API methods requires authentication via an oauth2 token.  This endpoint returns a token for valid client identifiers and secrets provided in the authentication header of the request.  Tokens will expire after 3600 seconds (1 hour) unless refreshed or revoked.
    
       The auth flow follows the following steps: 
         - A client encodes its `client key` and `secret key` into a specially encoded set of credentials. 
         - A client makes a request to the POST oauth2 / token endpoint to exchange these credentials for a bearer token.
         - When accessing the REST API, the client uses the bearer token to authenticate.

       In the cURL tab to the right you can see an example of obtaining an access token via the command line. Likewise, the Python tab contains an example of authorization from scratch using the popular requests library. 
       
       **Note:** For testing purposes, we provide a token that does not expire. You can use this token for sandbox development only.
       ```ZWN1ADwzLc5dMPDI9e48LgtzxWEtM4Dub0UmScmho4```
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AuthOutput"   
      x-code-samples:
      - lang: "cURL"
        source: |                             
            # define your client id and secret
            CLIENT_ID=<YOUR_CLIENT_ID>
            CLIENT_SECRET=<YOUR_CLIENT_SECRET>

            # request an access token
            curl -X POST -u $CLIENT_ID:$CLIENT_SECRET -d "grant_type=client_credentials" https://sandbox.reclaim.health/oauth2/token

            # the response from https://sandbox.reclaim.health/oauth2/token
            {
              "access_token": "XXXXXXXXXXXXXX",
              "expires_in": 3600,
              "token_type": "Bearer"
            }
   
      - lang: "Python"
        source: |
            # define your client id and secret
            client_id     = <YOUR_CLIENT_ID>
            client_secret = <YOUR_CLIENT_SECRET>

            # request an access token
            r = requests.post (url    = "https://sandbox.reclaim.health/oauth2/token',
                               params = {"grant_type": "client_credentials"},
                               auth   = (client_id, client_secret))
            access_token = r.json () ['access_token']                                              
  /api/groups:
    get:
      tags:
      - "Group-Specific Endpoints"
      summary: "List Available Groups"
      description: "This endpoints allows the client to list all the available group IDs in the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/GroupListDetailOutput" 
    post:
      tags:
      - "Group-Specific Endpoints"
      summary: "Adding Groups"
      description: "This endpoint allows the client to add employer groups to the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AddGroupDetailInput"
        required: true
        schema:
          $ref: "#/definitions/AddGroupDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AddGroupDetailOutput" 
  /api/groups/file:
    post:
      tags:
      - "Group-Specific Endpoints"
      summary: "Upload Eligibility/Benefit File"
      description: |
        This endpoint allows the client to add a group eligibility or benefit file in the Reclaim system. Note that the type of file to upload should be provided in the header of the API. File types include
        
        `eligibility` referring to a group's eligibility file. 
        
        `basic` referring to a group's basic plans offerings and their attributes.
        
        `hospital` referring to a group's supplemental hospital indemnity offerings and their attributes.
        
        <b> Discuss with Client types of voluntary benefits to include in recommendations. </b>
        
        <details>
        <summary id="text" onClick="function()"><font color="blue"><u> Click for Reclaim's preferred schema details for each of the file types</u></font></summary>
        <p>
        <br/>
        <b> Eligibility file schema </b>
        <table id="table" style="width:100%">
          <tr>
            <th>column</th>
            <th>description</th> 
            <th>type</th>
            <th>example</th>
          </tr>
          <tr>
            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2019</td>
          </tr>
          <tr>
            <td> group</td><td> Employer group code</td><td> string</td><td> acmecorp</td>
          </tr>
          <tr>
            <td> division</td><td> Employer division code</td><td> string</td><td> corporate</td>
          </tr>
          <tr>
            <td> subscriber_id</td><td> Plan subscriber ID</td><td> integer</td><td> 579635785</td>
          </tr>
          <tr>
            <td> subscriber_ssn</td><td> Plan subscriber's social security </td><td> integer</td><td> 1234567890</td>
          </tr>
          <tr>
            <td> subscriber_dob</td><td> Plan subscriber's date of birth</td><td> date</td><td> 1980-03-24</td>
          </tr>
          <tr>
            <td> subscriber_gender</td><td> Plan subscriber's gender</td><td> string</td><td> female</td>
          </tr>
          <tr>
            <td> subscriber_address</td><td> Plan subscriber street address</td><td> string</td><td> 123 Street #1</td>
          </tr>
          <tr>
            <td> subscriber_city</td><td> Plan subscriber city address</td><td> string</td><td> Cambridge</td>
          </tr>
          <tr>
            <td> subscriber_state</td><td> Plan subscriber state address</td><td> string</td><td> MA</td>
          </tr>
          <tr>
            <td> subscriber_zip</td><td> Plan subscriber zip code</td><td> string</td><td> 02139</td>
          </tr>
          <tr>
            <td> subscriber_status</td><td> Plan subscriber status</td><td> string</td><td> active</td>
          </tr>
          <tr>
            <td> member_id</td><td> Plan member ID</td><td> integer</td><td> 579635786</td>
          </tr>
          <tr>
            <td> member_ssn</td><td> Plan subscriber's social security</td><td> integer</td><td> 1234567891</td>
          </tr>
          <tr>
            <td> member_dob</td><td> Plan member's date of birth</td><td> date</td><td> 2010-04-26</td>
          </tr>
          <tr>
            <td> member_gender</td><td> Plan member's gender</td><td> string</td><td> female</td>
          </tr>
          <tr>
            <td> member_address</td><td> Plan member street address</td><td> string</td><td> 123 Street #1</td>
          </tr>
          <tr>
            <td> member_city</td><td> Plan member city address</td><td> string</td><td> Cambridge</td>
          </tr>
          <tr>
            <td> member_state</td><td> Plan member state address</td><td> string</td><td> MA</td>
          </tr>
          <tr>
            <td> member_zip</td><td> Plan member zip code</td><td> integer</td><td> 02139</td>
          </tr>
            <td> member_relation</td><td> Plan member zip code</td><td> integer</td><td> child</td>
          </tr>
          <tr>
            <td> member_status</td><td> Plan member status</td><td> string</td><td> active</td>
          </tr>
          <tr>
            <td> benefit</td><td> Benefit plan ID (if enrolled)</td><td> string</td><td> hdhp_13958</td>
          </tr>
          <tr>
            <td> benefit_start</td><td> Coverage start date (if enrolled)</td><td> date</td><td> 2019-01-01</td
          </tr>
          <tr>
            <td> benefit_end</td><td> Coverage end date (if known)</td><td> date</td><td></td>
          </tr>
          <tr>
            <td> benefit_type</td><td> Benefit plan type (if enrolled)</td><td> string</td><td> basic</td>
          </tr>
          <tr>
            <td> eligible_benefits</td><td> List of all eligible benefit IDs</td><td> string</td><td> hdhp_13958;ppo_14827 </td>
          </tr>
        </table>
        <button type="button" style="background-color:#4CAF50;color:white;width:300px;height:40px;font-size:14px;" onclick="exportTableToCSV('eligibility_reclaim_schema.csv')">EXPORT ELIGIBILITY SCHEMA TO CSV</button>
        </p>
        
        <p>
        <br/>
        <b> Basic health plan file schema </b>
        <table id="table2" style="width:100%">
          <tr>
            <th>column</th>
            <th>description</th> 
            <th>type</th>
            <th>example</th>
          </tr>
          <tr>
            <td> benefit_id</td><td> Benefit plan ID </td><td> string </td><td> hdhp_13958</td>
          </tr>
          <tr>
            <td> benefit_type</td><td> Benefit plan type </td><td> string </td><td> basic </td>
          </tr>
          <tr>
            <td> benefit_name</td><td> Benefit plan user-friendly name </td><td> string </td><td> HDHP Choice Base Plus </td>
          </tr>
          <tr> 
            <td> group</td><td> Employer group code </td><td> string </td><td> acmecorp </td>
          </tr>
          <tr> 
            <td> division</td><td> Employer group division code </td><td> string </td><td> corporate </td>
          </tr>
          <tr> 
            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2019</td>
          </tr>
          <tr>    
            <td> start_date </td><td> Plan start date</td><td> date</td><td> 2019-01-01</td>
          </tr>
          <tr>
            <td> end_date </td><td> Plan end date</td><td> date</td><td> 2019-12-31</td>
          </tr>
          <tr>    
            <td> ee_premium </td><td> Monthly premium for subscriber only</td><td> float</td><td> 356.7</td>
          </tr>
          <tr>
            <td> ec_premium </td><td> Monthly premium for subscriber and children dependents</td><td> float</td><td> 456.7</td>
          </tr>
          <tr>
            <td> es_premium </td><td> Monthly premium for subscriber and spouse</td><td> float</td><td> 556.7</td>
          </tr>
          <tr>
            <td> ef_premium </td><td> Monthly premium for subscriber and family (spouse and children)</td><td> float</td><td> 656.7</td>
          </tr>
          <tr>
            <td> hra_included </td><td> Indicator whether benefit is associated with HRA</td><td> bool</td><td> true</td>
          </tr>
          <tr>
            <td> ee_hra_contribution </td><td> Group HRA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
          </tr>
          <tr>
            <td> ef_hra_contribution </td><td> Group HRA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
          </tr>
          <tr>
            <td> hsa_included </td><td> Indicator whether benefit is associated with HSA</td><td> bool</td><td> true</td>
          </tr>
          <tr>
            <td> ee_hsa_contribution </td><td> Group HSA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
          </tr>
          <tr>
            <td> ef_hsa_contribution </td><td> Group HSA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
          </tr>
          <tr>
            <td> hsa_bank </td><td> HSA bank name; if applicable</td><td> string</td><td> HSA Bank</td>
          </tr> 
          <tr>
            <td> fsa_included </td><td> Indicator whether benefit is associated with FSA</td><td> bool</td><td> true</td>
          </tr>
          <tr>
            <td> ee_fsa_contribution </td><td> Group FSA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
          </tr>
          <tr>
            <td> ef_fsa_contribution </td><td> Group FSA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
          </tr>
          <tr>
            <td> fsa_bank </td><td> FSA bank name; if applicable</td><td> string</td><td> Wageworks</td>
          </tr> 
          <tr>
            <td> in_network_ee_deductible </td><td> In network deductible for subscriber only plan; if applicable</td><td> integer </td><td> 1500</td>
          </tr>
          <tr>
            <td> in_network_ef_deductible </td><td> In network deductible for subscriber and dependents; if applicable</td><td> integer </td><td> 3000</td>
          </tr>
          <tr>
            <td> out_network_ee_deductible </td><td> Out-of network deductible for subscriber only plan; if applicable</td><td> integer </td><td> 3000</td>
          </tr>
          <tr>
            <td> out_network_ef_deductible </td><td> Out-of network deductible for subscriber and dependents; if applicable</td><td> integer </td><td> 6000</td>
          </tr>
          <tr>
            <td> in_network_ee_oop_max </td><td> In network out-of-pocket max for subscriber only plan; if applicable</td><td> integer </td><td> 3000</td>
          </tr>
          <tr>
            <td> in_network_ef_oop_max </td><td> In network out-of-pocket max for subscriber and dependents; if applicable</td><td> integer </td><td> 6000</td>
          </tr>
          <tr>
            <td> out_network_ee_oop_max </td><td> Out-of network out-of-pocket max for subscriber only plan; if applicable</td><td> integer </td><td> 6000</td>
          </tr>
          <tr>
            <td> out_network_ef_oop_max </td><td> Out-of network out-of-pocket max for subscriber and dependents; if applicable</td><td> integer </td><td> 10000</td>
          </tr>
          <tr>
            <td> in_network_coinsurance </td><td> In network coinsurance; if applicable</td><td> integer </td><td> 20</td>
          </tr>
          <tr>
            <td> out_network_coinsurance </td><td> Out-of network coinsurance; if applicable</td><td> integer </td><td> 30</td>
          </tr>
        </table>
        <button type="button" style="background-color:#4CAF50;color:white;width:250px;height:40px;font-size:14px;" onclick="exportTableToCSV2('benefits_reclaim_schema.csv')">EXPORT SCHEMA TO CSV</button>   
        </p>
        
        <p>
        <br/>
        <b> Supplemental hospital indemnity file schema </b>
        <table id="table2" style="width:100%">
          <tr>
            <th>column</th>
            <th>description</th> 
            <th>type</th>
            <th>example</th>
          </tr>
          <tr>
            <td> benefit_id</td><td> Benefit plan ID </td><td> string </td><td> aflac_bronze_13958</td>
          </tr>
          <tr>
            <td> benefit_type</td><td> Benefit plan type </td><td> string </td><td> hospital </td>
          </tr>
          <tr>
            <td> benefit_name</td><td> Benefit plan user-friendly name </td><td> string </td><td> Aflac Hospital Benefit (Bronze) </td>
          </tr>
          <tr> 
            <td> group</td><td> Employer group code </td><td> string </td><td> acmecorp </td>
          </tr>
          <tr> 
            <td> division</td><td> Employer group division code </td><td> string </td><td> corporate </td>
          </tr>
          <tr> 
            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2019</td>
          </tr>
          <tr>    
            <td> start_date </td><td> Plan start date</td><td> date</td><td> 2019-01-01</td>
          </tr>
          <tr>
            <td> end_date </td><td> Plan end date</td><td> date</td><td> 2019-12-31</td>
          </tr>
          <tr>    
            <td> ee_premium </td><td> Monthly premium for subscriber only</td><td> float</td><td> 50.7</td>
          </tr>
          <tr>
            <td> ec_premium </td><td> Monthly premium for subscriber and children dependents</td><td> float</td><td> 66.7</td>
          </tr>
          <tr>
            <td> es_premium </td><td> Monthly premium for subscriber and spouse</td><td> float</td><td> 76.7</td>
          </tr>
          <tr>
            <td> ef_premium </td><td> Monthly premium for subscriber and family (spouse and children)</td><td> float</td><td> 86.7</td>
          </tr>
          <tr>
            <td> service </td> <td> Service for which the benefit applies </td><td> string</td><td> intensive_care_unit</td>
          </tr>
          <tr>
            <td> limit </td> <td> Maximum limit (days, number of visits, etc.) eligible for benefit</td><td> integer</td><td> 39</td>
          </tr>
          <tr>
            <td> limit_unit </td> <td> Unit corresponding to maximum limit  </td><td> string</td><td> days/confinement</td>
          </tr>
          <tr>
            <td> reimbursement </td> <td> Benefit reimbursement potential for given service</td><td> float</td><td> 50.0</td>
          </tr>
          <tr>
            <td> reimbursement_unit </td> <td> Unit corresponding to reimbursement</td><td> string</td><td> day</td>
          </tr>
        </table>
        <button type="button" style="background-color:#4CAF50;color:white;width:250px;height:40px;font-size:14px;" onclick="exportTableToCSV2('benefits_reclaim_schema.csv')">EXPORT SCHEMA TO CSV</button>
        </p>
        </details>
        
        
         
#        | **Column**          | **Description**                   | **Type**  | **Example**        |
#        |---------------------|-----------------------------------|-----------|--------------------|
#        | plan_year           | Plan start date's year            | integer   | 2019               |
#        | group               | Employer group code               | string    | acmecorp           |
#        | division            | Employer division code            | string    | corporate          |
#        | subscriber_id       | Plan subscriber ID                | integer   | 579635785          |
#        | subscriber_ssn      | Plan subscriber's social security | integer | 1234567890           |
#        | subscriber_dob      | Plan subscriber's date of birth   | date    | 1980-03-24           |
#        | subscriber_gender   | Plan subscriber's gender          | string  | female               |
#        | subscriber_address  | Plan subscriber street address    | string  | 123 Street #1        |
#        | subscriber_city     | Plan subscriber city address      | string  | Cambridge            |
#        | subscriber_state    | Plan subscriber state address     | string  | MA                   |
#        | subscriber_zip      | Plan subscriber zip code          | string  | 02139                |
#        | subscriber_status   | Plan subscriber status            | string  | active               |
#        | member_id           | Plan member ID                    | integer | 579635786            |
#        | member_ssn          | Plan subscriber's social security | integer | 1234567891           |
#        | member_dob          | Plan member's date of birth       | date    | 2010-04-26           |
#        | member_gender       | Plan member's gender              | string  | female               |
#        | member_address      | Plan member street address        | string  | 123 Street #1        |
#        | member_city         | Plan member city address          | string  | Cambridge            |
#        | member_state        | Plan member state address         | string  | MA                   |
#        | member_zip          | Plan member zip code              | integer | 02139                |
#        | member_relation     | Plan member zip code              | integer | child                |
#        | member_status       | Plan member status                | string  | active               |
#        | benefit             | Benefit plan ID (if enrolled)     | string  | hdhp_13958           |
#        | benefit_start       | Coverage start date (if enrolled) | date    | 2019-01-01           |
#        | benefit_end         | Coverage end date (if known)      | date    |                      |
#        | benefit_type        | Benefit plan type (if enrolled)   | string  | basic                |
#        | eligible_benefits   | List of all eligible benefit IDs  | string  | hdhp_13958;ppo_14827 |

#        | **Column**          | **Description**                   | **Type**  | **Example**        |
#        |---------------------|-----------------------------------|-----------|--------------------|
#        | plan_year           | Plan start date's year            | integer   | 2019               |
#        | group               | Employer group code               | string    | acmecorp           |
#        | division            | Employer division code            | string    | corporate          |
#        | subscriber_id       | Plan subscriber ID                | integer   | 579635785          |
#        | subscriber_ssn      | Plan subscriber's social security | integer | 1234567890           |
#        | subscriber_dob      | Plan subscriber's date of birth   | date    | 1980-03-24           |
#        | subscriber_gender   | Plan subscriber's gender          | string  | female               |
#        | subscriber_address  | Plan subscriber street address    | string  | 123 Street #1        |
#        | subscriber_city     | Plan subscriber city address      | string  | Cambridge            |
#        | subscriber_state    | Plan subscriber state address     | string  | MA                   |
#        | subscriber_zip      | Plan subscriber zip code          | string  | 02139                |
#        | subscriber_status   | Plan subscriber status            | string  | active               |
#        | member_id           | Plan member ID                    | integer | 579635786            |
#        | member_ssn          | Plan subscriber's social security | integer | 1234567891           |
#        | member_dob          | Plan member's date of birth       | date    | 2010-04-26           |
#        | member_gender       | Plan member's gender              | string  | female               |
#        | member_address      | Plan member street address        | string  | 123 Street #1        |
#        | member_city         | Plan member city address          | string  | Cambridge            |
#        | member_state        | Plan member state address         | string  | MA                   |
#        | member_zip          | Plan member zip code              | integer | 02139                |
#        | member_relation     | Plan member zip code              | integer | child                |
#        | member_status       | Plan member status                | string  | active               |
#        | benefit             | Benefit plan ID (if enrolled)     | string  | hdhp_13958           |
#        | benefit_start       | Coverage start date (if enrolled) | date    | 2019-01-01           |
#        | benefit_end         | Coverage end date (if known)      | date    |                      |
#        | benefit_type        | Benefit plan type (if enrolled)   | string  | basic                |
#        | eligible_benefits   | List of all eligible benefit IDs  | string  | hdhp_13958;ppo_14827 |
       
#        | **Column**          | **Description**                   | **Type**  | **Example**        |
#        |---------------------|-----------------------------------|-----------|--------------------|
#        | plan_year           | Plan start date's year            | integer   | 2019               |
#        
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "formData"
        name: "file"
        type: "file"
        description: "Eligibility/benefit file to upload"
        required: true  
        x-mimetype: text/csv
      - in: "formData"
        name: "name"
        description: "Description of the file to upload"
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # post file including bearer token authorization in header
            curl -X POST
            -H 'authorization: [bearer_token]' \
            -H 'type: eligibility' \
            -F 'file=@group_id_eligibility.csv' \
            https://sandbox.reclaim.health/api/groups/file
      - lang: "Python"
        source: |
            import requests

            files = {'file': open('/path/group_id_eligibility.csv', 'rb')}
            headers = {'Authorization': 'bearer_token', 'Type': 'eligibility'}
            
            response = requests.put('https://sandbox.reclaim.health/api/groups/file', files=files, data=payload, headers=headers).json()
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UploadDetailOutput"
    get:
      tags:
      - "Group-Specific Endpoints"
      summary: "Files Upload Status"
      description: "This endpoint checks the status of all uploaded data files for an existing employer group in the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/StatusCheckDetailOutput"  
  /api/group/[group_id]:
#    delete:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Delete Existing Group"
#      description: "This endpoints allows the client to delete an existing employer group in the Reclaim system. This is especially helpful at the beginning of the integration process."
#      produces:
#      - "application/json"
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/DeleteGroupDetailOutput"   
    post:
      tags:
      - "Group-Specific Endpoints"
      summary: "Update Existing Group"
      description: "This endpoint allows the client to update the information of an existing employer group in the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "UpdateGroupDetailInput"
        required: true
        schema:
          $ref: "#/definitions/UpdateGroupDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UpdateGroupDetailOutput"           
  /group/[group_id]/file/[file_id]:
    get:
      tags:
      - "Group-Specific Endpoints"
      summary: "Specific File Upload Status"
      description: "This endpoint checks the status of a single uploaded data file in the Reclaim system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UploadDetailOutput"
#    delete:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Delete Existing File"
#      description: "This endpoint deletes an existng file in the Reclaim system."
#      consumes:
#      - "application/json"
#      produces:
#      - "application/json"
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/DeleteDetailOutput" 
#    put:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Update Existing File"
#      description: |
#        This endpoint allows the client to update an existing file in the Reclaim system. Refer to the data files schema above.
#      consumes:
#      - "multipart/form-data"
#      produces:
#      - "application/json"
#      parameters:
#      - in: "formData"
#        name: "file"
#        type: "file"
#        description: "Data file to upload"
#        required: true  
#        x-mimetype: text/csv
#      - in: "formData"
#        name: "name"
#        description: "Description of the data file to upload"
#      x-code-samples:
#      - lang: "cURL"
#        source: |                              
#            # post file including bearer token authorization in header
#            curl -X POST
#            -H 'authorization: [bearer_token]' \
#            -H 'type: eligibility' \
#            -F 'file=@group_id_eligibility.csv' \
#            -F 'name=group_id_eligibility' \
#            https://platform.reclaim.health/api/group/[group_id]/file/[file_id]
#      - lang: "Python"
#        source: |
#            import requests
#
#            files = {'file': open('/path/group_id_eligibility.csv', 'rb')}
#            payload = {'name': 'group_id_eligibility'}
#            headers = {'Authorization': 'bearer_token', 'Type': 'eligibility'}
#            
#            response = requests.put('https://platform.reclaim.health/api/group/[group_id]/file/[file_id]', files=files, data=payload, headers=headers).json()
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/UpdateDetailOutput"        
#  /group/[group_id]/benefits:
#    post:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Upload Group Benefits File"
#      description: |
#        This endpoint allows the client to upload the benefit and plan attributes offered by a specific employer group to their subscribers. 
#        
#        <details>
#    
#        <summary id="text" onClick="function()"><font color="blue"><u> Click for Reclaim's preferred benefits attributes file schema details </u></font></summary>
#        <p>
#        <table id="table2" style="width:100%">
#          <tr>
#            <th>column</th>
#            <th>description</th> 
#            <th>type</th>
#            <th>example</th>
#          </tr>
#          <tr>
#            <td> benefit_id</td><td> Benefit plan ID </td><td> string </td><td> hdhp_13958</td>
#          </tr>
#          <tr>
#            <td> benefit_type</td><td> Benefit plan type </td><td> string </td><td> basic </td>
#          </tr>
#          <tr>
#            <td> benefit_name</td><td> Benefit plan user-friendly name </td><td> string </td><td> HDHP Choice Base Plus </td>
#          </tr>
#          <tr> 
#            <td> group</td><td> Employer group code </td><td> string </td><td> acmecorp </td>
#          </tr>
#          <tr> 
#            <td> division</td><td> Employer group division code </td><td> string </td><td> corporate </td>
#          </tr>
#          <tr> 
#            <td> plan_year</td><td> Plan start date's year</td><td> integer</td><td> 2019</td>
#          </tr>
#          <tr>    
#            <td> start_date </td><td> Plan start date</td><td> date</td><td> 2019-01-01</td>
#          </tr>
#          <tr>
#            <td> end_date </td><td> Plan end date</td><td> date</td><td> 2019-12-31</td>
#          </tr>
#          <tr>    
#            <td> ee_premium </td><td> Monthly premium for subscriber only</td><td> float</td><td> 356.7</td>
#          </tr>
#          <tr>
#            <td> ec_premium </td><td> Monthly premium for subscriber and children dependents</td><td> float</td><td> 456.7</td>
#          </tr>
#          <tr>
#            <td> es_premium </td><td> Monthly premium for subscriber and spouse</td><td> float</td><td> 556.7</td>
#          </tr>
#          <tr>
#            <td> ef_premium </td><td> Monthly premium for subscriber and family (spouse and children)</td><td> float</td><td> 656.7</td>
#          </tr>
#          <tr>
#            <td> hra_included </td><td> Indicator whether benefit is associated with HRA</td><td> bool</td><td> true</td>
#          </tr>
#          <tr>
#            <td> ee_hra_contribution </td><td> Group HRA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
#          </tr>
#          <tr>
#            <td> ef_hra_contribution </td><td> Group HRA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
#          </tr>
#          <tr>
#            <td> hsa_included </td><td> Indicator whether benefit is associated with HSA</td><td> bool</td><td> true</td>
#          </tr>
#          <tr>
#            <td> ee_hsa_contribution </td><td> Group HSA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
#          </tr>
#          <tr>
#            <td> ef_hsa_contribution </td><td> Group HSA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
#          </tr>
#          <tr>
#            <td> hsa_bank </td><td> HSA bank name; if applicable</td><td> string</td><td> HSA Bank</td>
#          </tr> 
#          <tr>
#            <td> fsa_included </td><td> Indicator whether benefit is associated with FSA</td><td> bool</td><td> true</td>
#          </tr>
#          <tr>
#            <td> ee_fsa_contribution </td><td> Group FSA contribution to subscriber only; if applicable</td><td> float</td><td> 500</td>
#          </tr>
#          <tr>
#            <td> ef_fsa_contribution </td><td> Group FSA contribution to subscriber and dependents; if applicable</td><td> float</td><td> 1000</td>
#          </tr>
#          <tr>
#            <td> fsa_bank </td><td> FSA bank name; if applicable</td><td> string</td><td> Wageworks</td>
#          </tr> 
#          <tr>
#            <td> in_network_ee_deductible </td><td> In network deductible for subscriber only plan; if applicable</td><td> integer </td><td> 1500</td>
#          </tr>
#          <tr>
#            <td> in_network_ef_deductible </td><td> In network deductible for subscriber and dependents; if applicable</td><td> integer </td><td> 3000</td>
#          </tr>
#          <tr>
#            <td> out_network_ee_deductible </td><td> Out-of network deductible for subscriber only plan; if applicable</td><td> integer </td><td> 3000</td>
#          </tr>
#          <tr>
#            <td> out_network_ef_deductible </td><td> Out-of network deductible for subscriber and dependents; if applicable</td><td> integer </td><td> 6000</td>
#          </tr>
#          <tr>
#            <td> in_network_ee_oop_max </td><td> In network out-of-pocket max for subscriber only plan; if applicable</td><td> integer </td><td> 3000</td>
#          </tr>
#          <tr>
#            <td> in_network_ef_oop_max </td><td> In network out-of-pocket max for subscriber and dependents; if applicable</td><td> integer </td><td> 6000</td>
#          </tr>
#          <tr>
#            <td> out_network_ee_oop_max </td><td> Out-of network out-of-pocket max for subscriber only plan; if applicable</td><td> integer </td><td> 6000</td>
#          </tr>
#          <tr>
#            <td> out_network_ef_oop_max </td><td> Out-of network out-of-pocket max for subscriber and dependents; if applicable</td><td> integer </td><td> 10000</td>
#          </tr>
#          <tr>
#            <td> in_network_coinsurance </td><td> In network coinsurance; if applicable</td><td> integer </td><td> 20</td>
#          </tr>
#          <tr>
#            <td> out_network_coinsurance </td><td> Out-of network coinsurance; if applicable</td><td> integer </td><td> 30</td>
#          </tr>
#        </table>
#        <button type="button" style="background-color:#4CAF50;color:white;width:250px;height:40px;font-size:14px;" onclick="exportTableToCSV2('benefits_reclaim_schema.csv')">EXPORT SCHEMA TO CSV</button>
#
#    
#        </p>
#        </details>
##        | **Column**          | **Description**                   | **Type**  | **Example**        |
##        |---------------------|-----------------------------------|-----------|--------------------|
##        | plan_year           | Plan start date's year            | integer   | 2019               |
##        | group               | Employer group code               | string    | acmecorp           |
##        | division            | Employer division code            | string    | corporate          |
##        | subscriber_id       | Plan subscriber ID                | integer   | 579635785          |
##        | subscriber_ssn      | Plan subscriber's social security | integer | 1234567890           |
##        | subscriber_dob      | Plan subscriber's date of birth   | date    | 1980-03-24           |
##        | subscriber_gender   | Plan subscriber's gender          | string  | female               |
##        | subscriber_address  | Plan subscriber street address    | string  | 123 Street #1        |
##        | subscriber_city     | Plan subscriber city address      | string  | Cambridge            |
##        | subscriber_state    | Plan subscriber state address     | string  | MA                   |
##        | subscriber_zip      | Plan subscriber zip code          | string  | 02139                |
##        | subscriber_status   | Plan subscriber status            | string  | active               |
##        | member_id           | Plan member ID                    | integer | 579635786            |
##        | member_ssn          | Plan subscriber's social security | integer | 1234567891           |
##        | member_dob          | Plan member's date of birth       | date    | 2010-04-26           |
##        | member_gender       | Plan member's gender              | string  | female               |
##        | member_address      | Plan member street address        | string  | 123 Street #1        |
##        | member_city         | Plan member city address          | string  | Cambridge            |
##        | member_state        | Plan member state address         | string  | MA                   |
##        | member_zip          | Plan member zip code              | integer | 02139                |
##        | member_relation     | Plan member zip code              | integer | child                |
##        | member_status       | Plan member status                | string  | active               |
##        | benefit             | Benefit plan ID (if enrolled)     | string  | hdhp_13958           |
##        | benefit_start       | Coverage start date (if enrolled) | date    | 2019-01-01           |
##        | benefit_end         | Coverage end date (if known)      | date    |                      |
##        | benefit_type        | Benefit plan type (if enrolled)   | string  | basic                |
##        | eligible_benefits   | List of all eligible benefit IDs  | string  | hdhp_13958;ppo_14827 |
#
#
#      consumes:
#      - "multipart/form-data"
#      produces:
#      - "application/json"
#      parameters:
#      - in: "formData"
#        name: "file"
#        type: "file"
#        description: "Benefit file to upload"
#        required: true  
#        x-mimetype: text/csv
#      - in: "formData"
#        name: "name"
#        description: "Description of the benefit file to upload"
#      - in: "formData"
#        name: "id"
#        description: "Benefit file ID that can be used to identify the status of the specific file upload into the Reclaim system"
#      x-code-samples:
#      - lang: "cURL"
#        source: |                              
#            # post file including bearer token authorization in header
#            curl -X POST
#            -H 'authorization: [bearer_token]' \
#            -F 'file=@group_id_benefit.csv' \
#            -F 'name=group_id_benefit' \
#            -F 'id=group_id_ben_2019_4_5' \
#            https://platform.reclaim.health/api/groups/[group_id]/benefit
#      - lang: "Python"
#        source: |
#            import requests
#
#            files = {'file': open('/path/group_id_benefit.csv', 'rb')}
#            payload = {'name': 'group_id_benefit', 'id': 'group_id_ben_2019_4_5'}
#            headers = {'Authorization': 'bearer_token'}
#            
#            response = requests.put('https://platform.reclaim.health/api/groups/[group_id]/benefit', files=files, data=payload, headers=headers).json()
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/BenefitUploadDetailOutput"
#    get:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Benefit Upload Status Check"
#      description: "This endpoint checks the status of all uploaded benefit data files for an existing employer group in the Reclaim system."
#      consumes:
#      - "application/json"
#      produces:
#      - "application/json"
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/BenefitStatusCheckDetailOutput"   
#  /groups/[group_id]/benefits/[upload_id]:
#    get:
#      tags:
#      - "Group-Specific Endpoints"
#      summary: "Benefit File Upload Status Check"
#      description: "This endpoint checks the status of a single uploaded benefit data file in the Reclaim system."
#      consumes:
#      - "application/json"
#      produces:
#      - "application/json"
#      responses:
#        200:
#          description: "Success"
#          schema:
#            $ref: "#/definitions/BenefitUploadDetailOutput"            
  /api/subscriber/[subscriber_id]:
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Subscriber Details"
      description: "This endpoints is designed to obtain information about a specific subscriber, including whether claims data is available in the Reclaim system for the subscriber, and if so, whether the subscriber has authorized Reclaim to use their claims data to personalize the optimization of their plan recommendations. The assumption is that the `subscriber_id` that identifies the subscriber for the client is known to the Reclaim platform."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SubscriberDetailOutput"
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # obtaining information about a specific subscriber
            curl -X GET -H "Authorization: Bearer ZWN1ADwzLc5dMPDI9e48LgtzxWEtM4Dub0UmScmho4" https://sandbox.reclaim.health/api/subscriber/1200001
      - lang: "Python"
        source: |
            # obtaining information about a specific subscriber
            headers = {'Authorization': 'ZWN1ADwzLc5dMPDI9e48LgtzxWEtM4Dub0UmScmho4'}  
            response = requests.get('https://sandbox.reclaim.health/api/subscriber/1200001', headers=headers).json()
            
  /api/subscriber/[subscriber_id]/members:
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "List Members Details"
      description: "This endpoints is designed to obtain information about all the dependent members, including the subscriber, that are eligible for the subscriber's benefits. Note that the members can be added or removed from consideration for the benefit recommendations, if instructed by the subscriber through the Client."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/MembersDetailOutput" 
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # obtaining information about a specific subscriber
            curl -X GET -H "Authorization: Bearer ZWN1ADwzLc5dMPDI9e48LgtzxWEtM4Dub0UmScmho4" https://sandbox.reclaim.health/api/subscriber/1200001/members
      - lang: "Python"
        source: |
            # obtaining information about a specific subscriber
            headers = {'Authorization': 'ZWN1ADwzLc5dMPDI9e48LgtzxWEtM4Dub0UmScmho4'}  
            response = requests.get('https://sandbox.reclaim.health/api/subscriber/1200001/members', headers=headers).json()            
  /subscriber:            
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Add/Update Subscriber"
      description: "This endpoint allows the client to add or update a subscriber's info to the Reclaim system. To update a subscriber's specific info, the POST may include only the items needed to be updated."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "SubscriberDetailInput"
        required: true
        schema:
          $ref: "#/definitions/SubscriberDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SubscriberDetailOutput"   
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # adding a subscriber
            curl -X POST -H "Authorization: Bearer ZWN1ADwzLc5dMPDI9e48LgtzxWEtM4Dub0UmScmho4" -H "Content-Type: application/json" --data '{"id":91322222,"group_id":"f8ceee2b-de05-4125-b68c-5019680fab95","division":"Corporate","name":{"first":"Roy","middle":"G","last":"Biv"},"address":{"street_1":"100 Alpine Street","city":"Cornelius","state":"OR","zip_code":"97113"},"dob":"1945-01-22","gender":"M","ssn":"1155"}' https://sandbox.reclaim.health/api/subscriber
            
            # updating a subscriber
            curl -i -X POST -H "Authorization: Bearer ZWN1ADwzLc5dMPDI9e48LgtzxWEtM4Dub0UmScmho4" -H "Content-Type: application/json" --data '{"name":{"first":"Royally"}}' https://sandbox.reclaim.health/api/subscriber/91322222
      - lang: "Python"
        source: |
            # adding a subscriber
            payload = {"id":91322222,"group_id":"f8ceee2b-de05-4125-b68c-5019680fab95","division":"Corporate","name":{"first":"Roy","middle":"G","last":"Biv"},"address":{"street_1":"100 Alpine Street","city":"Cornelius","state":"OR","zip_code":"97113"},"dob":"1945-01-22","gender":"M","ssn":"1155"}
            
            headers = {'Authorization': 'ZWN1ADwzLc5dMPDI9e48LgtzxWEtM4Dub0UmScmho4'}
            
            response = requests.put('https://sandbox.reclaim.health/api/subscriber', data=payload, headers=headers).json()   
            
            # updating a subscriber
            payload = {"name":{"first":"Royally"}}
            
            headers = {'Authorization': 'ZWN1ADwzLc5dMPDI9e48LgtzxWEtM4Dub0UmScmho4'}
            
            response = requests.put('https://sandbox.reclaim.health/api/subscriber', data=payload, headers=headers).json()   
   /subscriber'[subscriber_id]/members:            
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Add/Update Subscriber"
      description: "This endpoint allows the client to add or update a subscriber's info to the Reclaim system. To update a subscriber's specific info, the POST may include only the items needed to be updated."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "SubscriberDetailInput"
        required: true
        schema:
          $ref: "#/definitions/SubscriberDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SubscriberDetailOutput"   
      x-code-samples:
      - lang: "cURL"
        source: |                              
            # adding a subscriber
            curl -X POST -H "Authorization: Bearer ZWN1ADwzLc5dMPDI9e48LgtzxWEtM4Dub0UmScmho4" -H "Content-Type: application/json" --data '{"id":91322222,"group_id":"f8ceee2b-de05-4125-b68c-5019680fab95","division":"Corporate","name":{"first":"Roy","middle":"G","last":"Biv"},"address":{"street_1":"100 Alpine Street","city":"Cornelius","state":"OR","zip_code":"97113"},"dob":"1945-01-22","gender":"M","ssn":"1155"}' https://sandbox.reclaim.health/api/subscriber
            
            # updating a subscriber
            curl -i -X POST -H "Authorization: Bearer ZWN1ADwzLc5dMPDI9e48LgtzxWEtM4Dub0UmScmho4" -H "Content-Type: application/json" --data '{"name":{"first":"Royally"}}' https://sandbox.reclaim.health/api/subscriber/91322222
      - lang: "Python"
        source: |
            # adding a subscriber
            payload = {"id":91322222,"group_id":"f8ceee2b-de05-4125-b68c-5019680fab95","division":"Corporate","name":{"first":"Roy","middle":"G","last":"Biv"},"address":{"street_1":"100 Alpine Street","city":"Cornelius","state":"OR","zip_code":"97113"},"dob":"1945-01-22","gender":"M","ssn":"1155"}
            
            headers = {'Authorization': 'ZWN1ADwzLc5dMPDI9e48LgtzxWEtM4Dub0UmScmho4'}
            
            response = requests.put('https://sandbox.reclaim.health/api/subscriber', data=payload, headers=headers).json()   
            
            # updating a subscriber
            payload = {"name":{"first":"Royally"}}
            
            headers = {'Authorization': 'ZWN1ADwzLc5dMPDI9e48LgtzxWEtM4Dub0UmScmho4'}
            
            response = requests.put('https://sandbox.reclaim.health/api/subscriber', data=payload, headers=headers).json()            
  /subscriber/[subscriber_id]/authorize:
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Check Claim Authorization"
      description: "This endpoint is designed to allow the client to check if a subscriber has authorized Reclaim to make use of their claims data throughout the decision making process. This may be useful for subscribers that have access the continuous engagement Reclaim application or who have authorized Reclaim during last year's open enrollment."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AuthorizationDetailOutput"
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Claim Authorization"
      description: "This endpoint is designed to allow a subscriber to authorize Reclaim to make use of their claims data throughout the decision making process. The Reclaim platform recalls the subscriber's decision in its system and mirrors it in the mobile application for the continuous yearlong member engagement."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AuthorizationDetailInput"
        required: true
        schema:
          $ref: "#/definitions/AuthorizationDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AuthorizationDetailOutput"
  /subscriber/[subscriber_id]/review:
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Current Plan Review"
      description: "This endpoint allows the client to output a review of how the subscriber's current plan has performed given their healthcare bills (and those of their dependents') for the year. The goal of this endpoint is to present information to the user about their current plan performance to frame the conversation around their next year's plan selections in a highly personalized manner. Please note that this is only available if Reclaim has the subscriber's claims data in its system and the subscriber has authorized Reclaim to utilize their claims data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ReviewDetailOutput"
  /subscriber/[subscriber_id]/surveys:
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Enrollment Surveys"
      description: "This endpoint is designed to retrieve the questions to display to the subscriber or to retrieve the subscriber's most updated responses to the survey questionnaires that have been saved in the Reclaim system. Note that this endpoint can be accessible even if the subscriber has no claims in the Reclaim system or has not authorized the use of their claims data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SurveyDetailOutput"
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Update Survey Answers"
      description: "This endpoint is designed to post the subscriber's responses to the survey questionnaires and share them with the Reclaim system. If the Reclaim system receives the subscriber's answers, it will feed them into its enrollment recommendation algorithm. Note that this endpoint can be accessible even if the subscriber has no claims in the Reclaim system or has not authorized the use of their claims data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "SurveyDetailInput"
        required: true
        schema:
          $ref: "#/definitions/SurveyDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/SurveyDetailOutput"
  /subscriber/[subscriber_id]/recommendation:
    post:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Recommended Plan Bundles"
      description: "This endpoint allows the client to post the list of members that the subscriber would like to include in their plan, as well as their eligibility to a specific array of benefits from their employer group. Note that the benefit features have been already shared and processed by Reclaim. The eligibility to these benefits in this POST API is designed to reference the particular benefit IDs that the subscriber is eligible to select. The API then outputs a review of how the subscriber's current plan has performed given their healthcare bills (and those of their dependents') for the year. The goal of this endpoint is to present information to the user about their current plan performance to frame the conversation around their next year's plan selections in a highly personalized manner. Please note that this is only available if Reclaim has the subscriber's claims data in its system and the subscriber has authorized Reclaim to utilize their claims data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RecommendationDetailInput"
        required: true
        schema:
          $ref: "#/definitions/RecommendationDetailInput"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/RecommendationDetailOutput"
    get:
      tags:
      - "Subscriber-Specific Endpoints"
      summary: "Recommended Plan Bundles"
      description: "This endpoint allows the client to output a review of how the subscriber's current plan has performed given their healthcare bills (and those of their dependents') for the year. The goal of this endpoint is to present information to the user about their current plan performance to frame the conversation around their next year's plan selections in a highly personalized manner. Please note that this is only available if Reclaim has the subscriber's claims data in its system and the subscriber has authorized Reclaim to utilize their claims data."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/RecommendationDetailOutput"    
definitions:
# Auth Ouput
  AuthOutput:
    type: "object"
    properties:
      access_token:
        type: "string"
        description: "Access token to access Reclaim API"
      expires_in:
        type: "integer"
        description: "Number of seconds the access token is set to expire" 
      token_type:
        type: "string"
        description: "Token type ('Bearer')"     
    example:
      access_token: "ZWN1ADwzLc5dMPDI9e48LgtzxWEtM4Dub0UmScmho4"
      expires_in: 3600
      token_type: "Bearer"
# Claim Authorization Detail Input
  AuthorizationDetailInput:
    type: "object"
    properties:
      authorized:
        type: "boolean"
        description: "True is the subscriber authorizes Reclaim to utilize their claims data for the decision support during open enrollment, False otherwise"
    example:
      authorized: true
# Enrollment Survey Detail Input
  SurveyDetailInput:
    type: "object"
    properties:
      surveys:
        type: "array"
        description: "Array containing the subscriber's survey question IDs and answers to the different types of questionnaires the client has selected to ask on their platform, if applicable. Note that the health related questions may only needed if the subscriber has no claims in the Reclaim system or whether they have elected to not use their claims"
        items:
          type: "object"
          properties:
            id:
              type: "string"
              description: "Slug describing the survey question. The first term defines the umbrella under which the question is served, e.g. **health**, **financial**, and **personality**. The remainder is a short description of the survey question"
            value:
              type: "string, integer, array"
              description: "String, integer or an array of subscriber's answer, depending on the question type. Note that an array is only applicable for questions of type `multi`" 
    example:
      surveys:
        - id: "86937568-97d9-4c1e-9d41-fdf6a465a050"
          value: "I'm willing to pay more in premiums each month so that when I go to the pharmacy or doctor, I pay very little."
        - id: "9cb89ac4-77b6-488f-825c-8fc18107697a"
          value: 
            - "pregnancy"
            - "income_loss" 
# Add Group Detail Input
  AddGroupDetailInput:
    type: "object"
    properties:
      groups:
        type: "array"
        description: "Array of employer groups to add in the Reclaim system"
        items:
          type: "object"
          properties:
            id: 
              type: "string"
              description: "Short identifier for the employer group"
            name: 
              type: "string"
              description: "Detailed name for the employer group"
    example:
      groups:
        - name: "acmecorp"
          description: "ACME Corporation"
        - name: "abc"
          description: "ABC, Inc."
# Add Group Detail Output
  AddGroupDetailOutput:
    type: "object"
    properties:
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array of strings"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          count:   
                type: "integer"
                description: "Number of employer groups available in the Reclaim system"
          groups:   
                type: "array"
                description: "Array containing all the employer groups added by the Client" 
                items:
                  type: "object"
                  properties:
                    id:   
                      type: "string"
                      description: "Employer group Reclaim ID. This ID should be used to request or add information for a specific group"  
                    name:
                      type: "string"
                      description: "Short name for the employer group"
                    description:
                      type: "string"
                      description: "Long description for the employer group"  
                    status: 
                      type: "string"
                      description: "Status is ```linked``` if the employer group has claims data for their subscribers and members in the Reclaim system, otherwise, the status would be ```not linked```"
                    created:
                      type: "timestamp"
                      description: "Timestamp (in UTC) recording the time that the employer group entry was created in the Reclaim system. Note all the timestamps are UTC" 
                    updated:
                      type: "timestamp"
                      description: "Timestamp (in UTC) recording the latest update to the employer group entry in the Reclaim system"  
    example: 
      status: "success"
      detail: []
      entity:
          count: 2
          groups:
            - id: "acc711d2-7bd2-4110-9b2a-72b34f217b97"
              name: "acmecorp"
              description: "ACME Corporation"
              status: "not linked"
              created: "2019-04-10 14:59:23"
              updated: "2019-04-10 14:59:23"
            - id: "fe834068-3357-4b36-8304-781f713f71c0"
              name: "abc"
              description: "ABC, Inc."
              status: "not linked"
              created: "2019-04-04 14:59:23"
              updated: "2019-04-04 14:59:23"
# Update Group Detail Input
  UpdateGroupDetailInput:
    type: "object"
    properties:
      id: 
        type: "string"
        description: "Short identifier for the employer group"
      name: 
        type: "string"
        description: "Detailed name for the employer group"
    example:
      id: "abc"
      name: "ABC, Inc."   
# Update Group Detail Output
  UpdateGroupDetailOutput:
    type: "object"
    properties:
      id: 
        type: "string"
        description: "Short identifier for the employer group"
      name: 
        type: "string"
        description: "Detailed name for the employer group"
      updated:
        type: "timestamp"
        description: "Timestamp (in UTC) recording the latest update to the employer group entry in the Reclaim system. Note all the timestamps are UTC" 
      detail: 
        type: "array"
        description: "Array of messages (string), if applicable. These would include any list of error detailed descriptions"  
        items:
          type: "string"
    example:
      id: "abc"
      name: "ABC, Inc."  
      updated: "2019-04-04 14:59:23"
      detail: 
        - "ABC group name updated from ABC Corp to ABC, Inc."  
# Delete Group Detail Output
  DeleteGroupDetailOutput:
    type: "object"
    properties:
      id: 
        type: "string"
        description: "Short identifier for the employer group"
      name: 
        type: "string"
        description: "Detailed name for the employer group"
      updated:
        type: "timestamp"
        description: "Timestamp (in UTC) recording the latest update to the employer group entry in the Reclaim system. Note all the timestamps are UTC" 
      detail: 
        type: "array"
        description: "Array of messages (string), if applicable. These would include any list of error detailed descriptions"  
        items:
          type: "string"
    example:
      id: "abc"
      name: "ABC, Inc."  
      updated: "2019-04-04 14:59:23"
      detail: 
        - "Group ABC, Inc. has been deleted successfully."          
#Group List Detail Output
  GroupListDetailOutput:
    type: "object"
    properties: 
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array of strings"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          count:   
                type: "integer"
                description: "Number of employer groups available in the Reclaim system"
          groups:   
                type: "array"
                description: "Array containing all the employer groups available in the Reclaim system" 
                items:
                  type: "object"
                  properties:
                    id:   
                      type: "string"
                      description: "Employer group Reclaim ID. This ID should be used to request or add information for a specific group"  
                    name:
                      type: "string"
                      description: "Short name for the employer group"
                    description:
                      type: "string"
                      description: "Long description for the employer group"  
                    status: 
                      type: "string"
                      description: "Status is ```linked``` if the employer group has claims data for their subscribers and members in the Reclaim system, otherwise, the status would be ```not linked```"
                    created:
                      type: "timestamp"
                      description: "Timestamp (in UTC) recording the time that the employer group entry was created in the Reclaim system. Note all the timestamps are UTC" 
                    updated:
                      type: "timestamp"
                      description: "Timestamp (in UTC) recording the latest update to the employer group entry in the Reclaim system"  
    example: 
      status: "success"
      detail: []
      entity:
          count: 3
          groups:
            - id: "acc711d2-7bd2-4110-9b2a-72b34f217b96"
              name: "acmecorp"
              description: "ACME Corporation"
              status: "linked"
              created: "2019-04-10 14:59:23"
              updated: "2019-04-10 14:59:23"
            - id: "fe834068-3357-4b36-8304-781f713f71c0"
              name: "abc"
              description: "ABC, Inc."
              status: "not_linked"
              created: "2019-04-04 14:59:23"
              updated: "2019-04-04 14:59:23"
            - id: "0a126c1b-7f6f-463e-8a41-4856279f8a1a"
              name: "def"
              description: "DEF LLC."
              created: "2019-04-04 14:59:23"
              updated: "2019-04-10 14:59:23"   
# Eligibility Upload Detail Output  
  UploadDetailOutput:
    type: "object"
    properties: 
      id:   
            type: "string"
            description: "Data file upload ID created by the Reclaim system to refer to the upload activity"
      type:   
            type: "string"
            description: "Data file type, e.g., eligibility, basic, hospital, etc."        
      name: 
            type: "string"
            description: "Description of the data file to upload as provided by the client"        
      status:   
            type: "string"
            description: |
              Status of the data file upload in the Reclaim system. This can take one of three values:
              
              `processing` meaning the ingestion of the data file is still processing
              
              `fail` meaning the ingestion of the data file has failed
              
              `success` meaning the ingestion of the data file has finished successfully
      detail:
            type: "array"
            description: "Detailed description of failure error, if the ingestion of the data file were to encounter a failure"
            items: 
              type: "string"
      updated: 
            type: "timestamp"
            description: "Timestamp (in UTC) of the most recent update on the status of the data file upload"        
    example: 
          id: "group_id_elig_2019_4_5"
          type: "eligibility"
          name: "group_id_eligibility"
          status: "processing"
          updated: "2019-04-10 14:59:23"
#Eligibility Status Check Detail Output      
  StatusCheckDetailOutput:
    type: "object"
    properties: 
      files:
        type: "array"
        description: "Array of all data files uploaded to the Reclaim system"
        items:
          type: "object"
          properties:
            id:   
              type: "string"
              description: "Data file upload ID created by the Reclaim system to refer to the upload activity"
            type:   
              type: "string"
              description: "Data file type, e.g., eligibility, basic, hospital, etc."    
            name:
              type: "string"
              description: "Description of the data file to upload as provided by the client"  
            status:   
              type: "string"
              description: |
                Status of the data file upload in the Reclaim system. This can take one of three values:
              
                `processing` meaning the ingestion of the data file is still processing
              
                `fail` meaning the ingestion of the data file has failed
              
                `success` meaning the ingestion of the data file has finished successfully
            detail:
              type: "array"
              description: "Detailed description of failure error, if the ingestion of the data file were to encounter a failure"   
              items: 
                type: "string"
            updated: 
              type: "timestamp"
              description: "Timestamp (in UTC) of the most recent update on the status of the data file upload"
    example: 
      files:
        - id: "group_id_elig_2019_4_5"
          type: "eligibility"
          name: "group_id_eligibility"
          status: "success"
          updated: "2019-04-10 14:59:23"
        - id: "group_id_basic_2019_5_5"  
          type: "basic_plans"
          name: "group_id_basic"
          status: "processing"
          updated: "2019-05-10 12:59:29"
        - id: "group_id_supplemental_2019_5_6" 
          type: "supplemental_plans"
          name: "group_id_supplemental"
          status: "fail"
          updated: "2019-05-10 12:59:29"  
          detail: 
            - "line 9, column 10 - found unexpected data format" 
            - "line 145, column 74 - found unexpected character"
# Update Eligibility Detail Output  
  UpdateDetailOutput:
    type: "object"
    properties: 
      id:   
            type: "string"
            description: "Data file ID created by the Reclaim system to refer to the upload activity"
      type:   
            type: "string"
            description: "Data file type, e.g., eligibility, basic, hospital, etc."         
      name:
            type: "string"
            description: "Description of the data file to upload as provided by the client"        
      status:   
            type: "string"
            description: |
              Status of the data file upload in the Reclaim system. This can take one of three values:
              
              `processing` meaning the ingestion of the data file is still processing
              
              `fail` meaning the ingestion of the data file has failed
              
              `success` meaning the ingestion of the data file has finished successfully
      detail:
            type: "array"
            description: "Detailed description of failure error, if the ingestion of the data file were to encounter a failure"
            items: 
              type: "string"
      updated: 
            type: "timestamp"
            description: "Timestamp (in UTC) of the most recent update on the status of the data file upload"        
    example: 
          id: "group_id_elig_2019_4_5"
          type: "eligibility"
          name: "group_id_eligibility"
          status: "processing"
          updated: "2019-04-10 14:59:23"    
# Delete Eligibility Detail Output  
  DeleteDetailOutput:
    type: "object"
    properties: 
      id:   
            type: "string"
            description: "Data file ID created by the Reclaim system to refer to the upload activity"
      type:   
            type: "string"
            description: "Data file type, e.g., eligibility, basic, hospital, etc."           
      name:
            type: "string"
            description: "Description of the data file to upload as provided by the client"        
      status:   
            type: "string"
            description: |
              Status of the data file upload in the Reclaim system. This can take one of three values:
              
              `processing` meaning the ingestion of the data file is still processing
              
              `fail` meaning the ingestion of the data file has failed
              
              `success` meaning the ingestion of the data file has finished successfully
      detail:
            type: "array"
            description: "Detailed description of failure error, if the deletion of the data file were to encounter a failure"
            items: 
              type: "string"
      updated: 
            type: "timestamp"
            description: "Timestamp (in UTC) of the most recent update on the deletion status of the data file"        
    example: 
          id: "group_id_elig_2019_4_5"
          type: "eligibility"
          name: "group_id_eligibility"
          status: "success"
          updated: "2019-04-10 14:59:23" 
          detail: 
            - "The file 'group_id_eligibility.csv' was successfully deleted."
## Benefit Upload Detail Output  
#  BenefitUploadDetailOutput:
#    type: "object"
#    properties: 
#      id:   
#            type: "string"
#            description: "Benefit upload ID as instructed by client upload post request"
#      status:   
#            type: "string"
#            description: |
#              Status of benefits file upload and ingestion process into the Reclaim system. This can take one of three values:
#              
#              `processing` meaning the ingestion of the benefits file is still processing
#              
#              `fail` meaning the ingestion of the benefits file has failed
#              
#              `success` meaning the ingestion of the benefits file has finished successfully
#      detail:
#            type: "string"
#            description: "Detailed description of failure error, if the ingestion of the benefits file were to encounter a failure"
#      updated: 
#            type: "timestamp"
#            description: "Timestamp of the most recent update on the status of the benefits file upload"        
#    example: 
#          id: "group_id_ben_2019_4_5"
#          status: "processing"
#          updated: "2019-04-10 14:59:23"
##Benefit Status Check Detail Output      
#  BenefitStatusCheckDetailOutput:
#    type: "object"
#    properties: 
#      eligibility:
#        type: "array"
#        description: "Array of objects describing the status of the most recent benefit file uploads by the client to the Reclaim system"
#        items:
#          type: "object"
#          properties:
#            id:   
#              type: "string"
#              description: "Benefit upload ID as instructed by client upload post request"
#            status:   
#              type: "string"
#              description: |
#                Status of benefit file upload and ingestion process into the Reclaim system. This can take one of three values:
#              
#                `processing` meaning the ingestion of the benefit file is still processing
#              
#                `fail` meaning the ingestion of the benefit file has failed
#              
#                `success` meaning the ingestion of the benefit file has finished successfully
#            detail:
#              type: "string"
#              description: "Detailed description of failure error, if the ingestion of the benefit were to encounter a failure"    
#            updated: 
#              type: "timestamp"
#              description: "Timestamp of the most recent update on the status of the benefit file upload"
#    example: 
#      eligibility:
#        - id: "group_id_ben_2019_4_5"
#          status: "success"
#          updated: "2019-04-10 14:59:23"
#        - id: "group_id_ben_2019_5_5"  
#          status: "processing"
#          updated: "2019-05-10 12:59:29"
#        - id: "group_id_ben_2019_5_6"  
#          status: "fail"
#          updated: "2019-05-10 12:59:29"  
#          detail: "line 9, column 10 - found unexpected data format"   

#Subscriber Detail Iutput
  SubscriberDetailInput:
    type: "object"
    properties: 
      id:   
            type: "integer"
            description: "Subscriber ID as known to Client"
      group_id:   
            type: "string"
            description: "Employer group unique Reclaim identifier" 
      division:   
            type: "string"
            description: "Employer group's division ID"        
      name:
                    type: "object"
                    description: "Member's name object"
                    properties:
                      first:
                        type: "string"
                        description: "Member's first name"
                      middle:
                        type: "string"
                        description: "Member's middle name"   
                      last:
                        type: "string"
                        description: "Member's last name" 
      dob: 
                    type: "date"
                    description: "Member's date of birth formatted as yyyy-month-date"
      gender:
                    type: "string"
                    description: "Member's gender ('F' for female, 'M' for male, and 'U' for unknown)"
      ssn:
                    type: "string"
                    description: "Member's last four digits of their social security number"
      address:
                    type: "object"
                    description: "Member's address. If omitted, Reclaim assumes member resides at the same address as the subscriber"
                    properties:
                      street_1:
                        type: "string"
                        description: "First line of street address, if available"
                      street_2:
                        type: "string"
                        description: "Second line of street address, if available"    
                      city:
                        type: "string"
                        description: "Member's city name"  
                      zip_code:
                        type: "string"
                        description: "Member's zip code (required)"
                      state:
                        type: "string"
                        description: "Member's state name"                   
    example:
      id: 91322222
      group_id: "a406653b-16a3-429f-a6d7-6f43a189b80c"
      division: "corporate"
      name:
        first: "Susan"
        middle: "M"
        last: "Doe"
      dob: "1966-08-02"
      gender: "F"
      ssn: "8345"
      address:
            street_1: "2200 Fenway Road"
            street_2: ""
            city: "Boston"
            zip: "02215"
            state: "MA"
            
# Update Subscriber Details            
  UpdateSubscriberDetailInput:              
    example:
      dob: "1966-08-02"
      address:
            street_1: "2200 Cornelius Road"           
#Subscriber Detail Output
  SubscriberDetailOutput:
    type: "object"
    properties: 
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          id:
            type: "integer"
            description: "Member's ID, as known to the client"
          group_id:
            type: "string"
            description: "Reclaim's group unique identifier to which the subscriber belongs"
          division:
            type: "string"
            description: "Employer group division to which the subscriber belongs"
          name:
            type: "object"
            description: "Member's name object"
            properties:
              first:
                type: "string"
                description: "Member's first name"
              middle:
                type: "string"
                description: "Member's middle name"   
              last:
                type: "string"
                description: "Member's last name" 
          dob: 
                type: "date"
                description: "Member's date of birth formatted as yyyy-month-date"
          gender:
                type: "string"
                description: "Member's gender ('F' for female, 'M' for male, and 'U' for unknown)"
          ssn:
                type: "string"
                description: "Member's last four digits of their social security number"
          address:
                type: "object"
                description: "Member's address. If omitted, Reclaim assumes member resides at the same address as the subscriber"
                properties:
                          street_1:
                            type: "string"
                            description: "First line of street address, if available"
                          street_2:
                            type: "string"
                            description: "Second line of street address, if available"    
                          city:
                            type: "string"
                            description: "Member's city name"  
                          zip_code:
                            type: "string"
                            description: "Member's zip code (required for subscriber)"
                          state:
                            type: "string"
                            description: "Member's state name"   
          claims:
            type: "object"
            description: "Object specifying claims availability and subscriber authorization status, if applicable"
            properties:
              available:
                type: "boolean"
                description: "true if the subscriber has their claims mapped in the Reclaim system"
              authorized:
                type: "object"
                properties:
                  flag: 
                    type: "boolean"
                    description: "true if the subscriber has already authorized Reclaim for the use of their claims, false otherwise"
                  date: 
                    type: "timestamp"
                    description: "Timestamp (in UTC) of the latest update on the subscriber claims authorization"
          survey:
            type: "object"
            description: "Object specifying if the subscriber has taken the enrollment survey"
            properties:
              flag: 
                type: "boolean"
                description: "true if the subscriber has already authorized Reclaim for the use of their claims, false otherwise"
              date: 
                    type: "timestamp"
                    description: "Timestamp (in UTC) of the latest update on the subscriber claims authorization"

          created:
            type: "timestamp"
            description: "Timestamp (in UTC) indicating the time the subscriber was created"
          updated:
            type: "timestamp"
            description: "Timestamp (in UTC) indicating the time the subscriber was last updated"      
    example:
      status: "success"
      details: []
      entity:
          id: 1200001
          group_id: "a406653b-16a3-429f-a6d7-6f43a189b80c"
          division: "part-timer"
          name: 
            first: "Zimzalabin"
            middle: "M"
            last: "Bronx"
          dob: "1966-08-02"
          gender: "M"
          ssn: "8215"
          address: 
            street_1: "2200 Fenway Road"
            street_2: ""
            city: "Boston"
            state: "MA"
            zip_code: "02215"
          claims:
            available: true
            authorized:
              flag: true
              date: "2019-04-01 10:13:48"       
          survey:
            flag: true
            date: "2019-03-27 16:36:08"
          created: "2019-03-20 19:35:48"
          updated: "2019-03-21 14:57:04"
          
          
#Members Detail Output
  MembersDetailOutput:
    type: "object"
    properties: 
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          count: 
            type: "integer"
            description: "Number of members, including the subscriber, eligible for the subscriber's plan"
          members:
            type: "array"
            description: "Members array"
            items:
              id:
                type: "integer"
                description: "Member's ID, as known to the client"
              group_id:
                type: "string"
                description: "Reclaim's group unique identifier to which the subscriber belongs"
              division:
                type: "string"
                description: "Employer group division to which the subscriber belongs"
              name:
                type: "object"
                description: "Member's name object"
                properties:
                  first:
                    type: "string"
                    description: "Member's first name"
                  middle:
                    type: "string"
                    description: "Member's middle name"   
                  last:
                    type: "string"
                    description: "Member's last name" 
              dob: 
                    type: "date"
                    description: "Member's date of birth formatted as yyyy-month-date"
              gender:
                    type: "string"
                    description: "Member's gender ('F' for female, 'M' for male, and 'U' for unknown)"
              ssn:
                    type: "string"
                    description: "Member's last four digits of their social security number"
              address:
                    type: "object"
                    description: "Member's address. If omitted, Reclaim assumes member resides at the same address as the subscriber"
                    properties:
                              street_1:
                                type: "string"
                                description: "First line of street address, if available"
                              street_2:
                                type: "string"
                                description: "Second line of street address, if available"    
                              city:
                                type: "string"
                                description: "Member's city name"  
                              zip_code:
                                type: "string"
                                description: "Member's zip code (required for subscriber)"
                              state:
                                type: "string"
                                description: "Member's state name"  
              relationship:
                type: "string"
                description: "Member's relationship to the subscriber ('subscriber', 'spouse', 'child')"
              removed:
                type: boolean
                description: "true if the associated member is not to be considered for next year's benefits on the subscriber's plan, false otherwise"
              created:
                type: "timestamp"
                description: "Timestamp (in UTC) indicating the time the subscriber was created"
              updated:
                type: "timestamp"
                description: "Timestamp (in UTC) indicating the time the subscriber was last updated"      
    example:
      status: "success"
      details: []
      entity:
          count: 2
          members:
            - id: 1200001
              group_id: "a406653b-16a3-429f-a6d7-6f43a189b80c"
              division: "part-timer"
              name: 
                first: "Zimzalabin"
                middle: "M"
                last: "Bronx"
              dob: "1966-08-02"
              gender: "M"
              ssn: "8215"
              address: 
                street_1: "2200 Fenway Road"
                street_2: ""
                city: "Boston"
                state: "MA"
                zip_code: "02215"
              relationship: "subscriber"
              removed: false
              created: "2019-03-20 19:35:48"
              updated: "2019-03-21 14:57:04"
            - id: 1200002
              group_id: "a406653b-16a3-429f-a6d7-6f43a189b80c"
              division: "part-timer"
              name: 
                first: "Jenna"
                middle: "F"
                last: "Bronx"
              dob: "1989-08-02"
              gender: "U"
              ssn: "0285"
              address: 
                street_1: "2200 Fenway Road"
                street_2: ""
                city: "Boston"
                state: "MA"
                zip_code: "02215"
              relationship: "child"
              removed: false
              created: "2019-04-02 18:06:36"
              updated: "2019-04-03 01:13:32"
#Authorization Detail Output
  AuthorizationDetailOutput:
    type: "object"
    properties: 
      authorized:   
            type: "object"
            properties:
              flag: 
                type: "boolean"
                description: "True if the subscriber has authorized Reclaim to use their claims to personalize their decision support, False otherwise"
              updated: 
                type: "timestamp"
                description: "Timestamp (in UTC) recording the time the flag was updated to the current value, if applicable"
    example: 
      authorized: 
        flag: true
        updated: "2019-05-10 12:59:29"
    title: "claim_authorization" 
#Current Plan Performance Review Detail Output
  ReviewDetailOutput:
    type: "object"
    properties: 
      authorized:   
            type: "object"
            properties:
              flag: 
                type: "boolean"
                description: "True if the subscriber has authorized Reclaim to use their claims to personalize their decision support, False otherwise"
              updated: 
                type: "timestamp"
                description: "Timestamp (in UTC) recording the time the flag was updated to the current value, if applicable"
      members: 
            type: "array"
            description: "Array of all the current dependents on the subscriber's plan."
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                  description: "Plan member ID"
                is_subscriber:
                  type: "boolean"
                  description: "True if the member is the plan subscriber, false otherwise"
                name:
                  type: "string"
                  description: "Member's first name"  
                relation:
                  type: "string"
                  description: |
                    Slug describing the relation of the member to the subscriber. This takes three possible values
                      
                    `subscriber` referring to the member being the plan subscriber, 
                      
                    `spouse` referring to the member being the subscriber's spouse, 
                      
                    `child` referring to the member being the subscriber's child.            
      plan: 
            type: "object"
            description: "Object describing the assessment of the subscriber's current plan performance"
            properties:
                plan: 
                    type: "string"
                    description: "Name of the subscriber's current health plan"
                carrier: 
                    type: "string"
                    description: "Name of the subscriber's current insurance carrier"  
                assessment: 
                    type: "string"
                    description: |
                      Short descriptor conferring an assessment of how the current plan has been performing, given the subscriber's claims and healthcare bills for the year thus far. This can take on three different values:
                      
                      `well_insured` signifies that the cureent year's selected plan was the best option for the subscriber, 
                      
                      `high_premium` signifies that the subscriber is overpaying on premiums while not needing that comprehensive of coverage, and 
                      
                      `high_oop` meaning the subscriber has paid more in out-of-pocket expenses with respect to other plans they could have chosen for the current year.
                detail: 
                    type: "string"
                    description: |
                      Detailed text associated with the short assessment descriptor
                spending:    
                  type: "object"
                  description: "Object describing the assessment of the subscriber's current plan performance"
                  properties:
                    premium:
                        type: "float"
                        description: "Total amount of premiums paid by the subscriber thus far for the current plan year"
                    oop: 
                        type: "float"
                        description: "Total amount of out-of-pocket expenses (medical and pharmacy) paid by the subscriber thus far for the current plan year"
                    chart: 
                        type: "array"
                        description: "Array to display spending chart on a monthly basis" 
                        items:
                            type: "object"
                            properties:
                              date: 
                                type: "date"
                                description: "Month on the current plan year"
                              amount:
                                type: "float"
                                description: "Subscriber's total cost for the associated month in the current plan year"          
                savings:    
                  type: "object"
                  description: "Object describing the assessment of the subscriber's savings during the current plan year, if applicable"
                  properties:
                    group:
                        type: "float"
                        description: "Amount contributed by the employer group either through an HSA or an FSA contribution"
                    subscriber: 
                        type: "float"
                        description: "Amount contributed by the subscriber either to an HSA or an FSA, if known" 
                    chart: 
                        type: "array"
                        description: "Array to display savings contributions chart on a monthly basis" 
                        items:
                            type: "object"
                            properties:
                              date: 
                                type: "date"
                                description: "Month on the current plan year"
                              amount:
                                type: "float"
                                description: "Subscriber's total saving contributions for the associated month in the current plan year"  
                alternative_savings: 
                    type: "float"
                    description: "Amount that the subscriber could have saved, had they selected another plan for the current year from the options that were made available to them during last year's open enrollment"   
      events: 
            type: "array"
            description: "Array describing the highlights of the subscriber and their dependents' healthcare episodes for the current year"
            items:
              type: "object"
              properties:
                episode:
                  type: "string"
                  description: "Episode description"
                event:
                  type: "string"
                  description: "Episode description"
                name:
                  type: "string"
                  description: "First name of the member associated with the episode of care"
                start:
                  type: "date"
                  description: "Start date of the episode of care"
                end:
                  type: "date"
                  description: "End date of the episode of care"  
                charge:
                  type: "float"
                  description: "Out-of-pocket expense to the subscriber and their dependents"
    example:
      authorized: 
        flag: true
        updated: "2019-05-10 12:59:29"
      members:
        - id: 511750
          is_subscriber: true
          name: "Susan"
          relation: "subscriber"
        - id: 511751
          is_subscriber: false
          name: "Cora"
          relation: "Spouse"  
      plan:
        plan: "HDHP Choice Base Plus"
        carrier: "United Healthcare"
        assessment: "well_insured"
        detail: "Your health costs are well managed under the current plan."
        spending:
          premium: 8800
          oop: 3535
          chart: 
            - date: "2018-01-01"
              amount: 258.4
            - date: "2018-02-01"
              amount: 258.4
            - date: "2018-03-01"
              amount: 6173.49     
            - date: "2018-04-01"
              amount: 258.40  
        savings:
          group: 1000
          subscriber: 5500
          chart: 
            - date: "2018-01-01"
              amount: 475.0
            - date: "2018-02-01"
              amount: 1475.0
            - date: "2018-03-01"
              amount: 475.0      
            - date: "2018-04-01"
              amount: 475.0        
        alternative_savings: 500
      events:
        - episode: "Pregnancy"
          event: "Labor and Childbirth"
          name: "Susan"
          start: "2017-03-28"
          end: "2017-04-02"
          charge: 6173.4
        - episode: "Dislocated Shoulder" 
          event: "Urgent Care"
          name: "Cora"
          start: "2017-08-05"
          end: "2017-08-05"
          charge: 568.3  
    title: "year_review"  
# Enrollment Survey Detail Output
  SurveyDetailOutput:
    type: "object"
    properties:
      status: 
        type: "string"
        description: |
          Indicates the status of the operation:
          
          `success` indicates that the operation was successful 

          `warning` indicates that the operation was successful, however, there was some issues during the processing of the request
          
          `error` indicates that the operation failed
      details:
        type: "array"
        descrption: "Array of strings providing information to the caller when the operation status was warning or error"
      entity:
        type: "object"
        description: "API detailed output"
        properties:
          count: 
            type: "int"
            description: "Number of questions available to client"
          surveys:
            type: "array"
            description: "Array containing the subscriber's questions and answers to the different types of questionnaires the client has selected to ask on their platform, if applicable. Note that the health related questions may only needed if the subscriber has no claims in the Reclaim system or whether they have elected to not use their claims"
            items:
              type: "object"
              properties:
                id: 
                  type: "string"
                  description: "Survey question ID"
                category: 
                  type: "string"
                  description: "Survey question category ('health', 'financial', 'personality')"
                name:
                  type: "string"
                  description: "Slug describing the survey question. The first term defines the umbrella under which the question is served, e.g. **health**, **financial**, and **personality**. The remainder is a short description of the survey question"
                description:
                  type: "string"
                  description: "Survey question verbiage, if necessary to include"  
                type:
                  type: "string"
                  description: |
                    Short descriptor describing the type of the question. This can take the following values:

                    `bool` if the answer to the question is True or False

                    `int` if the answer to the question is an integer

                    `select` if the answer involves selecting a single option from the available choices

                    `multi` if the answer involves selecting at least one option from the available choices
                options:
                  type: "array"
                  description: "Array of string options to suggest to the subscriber, if the expected answer is of type `select` or `multi`"  
                value:
                  type: "string, integer, array"
                  description: "String, integer or an array of subscriber's answer, depending on the question type. Note that an array is only applicable for questions of type `multi`"  
                ignore_if_claims:
                  type: "boolean"
                  description: "True is the survey question is to be ignored for subscribers who have claims and have authorized the use of their claims for the bundle recommendation"
                created:
                  type: "timestamp"
                  description: "Timestamp (in UTC) of when the survey ID was created"
                updated:
                  type: "timestamp"
                  description: "Timestamp (in UTC) of when the survey ID or answer was last updated"  
                  
    example:
      status: "success"
      details: []
      entity:
          count: 3
          surveys:
            - id: "cf692b71-caa8-4b2d-8a6c-efda480904a1"
              category: "health"
              name: "doctor_visits"
              description: "About how many times did you see your doctor last year? This can be anything from a basic checkup to visits with a specialist."
              type: "select"
              options: 
                - "None"
                - "1 to 3"
                - "4 to 5"
                - "6 or more"
              value: "1 to 3"
              ignore_if_claims: true
              created: "2019-03-27 18:11:29"
              updated: "2019-03-27 18:11:29"
            - id: "28a809d6-3d3c-492e-90c5-eef860156a40"
              category: "health"
              name: "major_event"
              description: "Do you expect to have any major medical expenses next year, such as a planned surgery?"
              type: "select"
              options: 
                - "No"
                - "Maybe"
                - "Yes"
              value: "Yes"
              ignore_if_claims: false
              created: "2019-03-20 19:35:40"
              updated: "2019-03-20 19:35:40"
            - id: "86937568-97d9-4c1e-9d41-fdf6a465a050"
              category: "financial"
              name: "premium_oop_tradeoff"
              description: "When it comes to your monthly health insurance payments (which are called your 'premiums'), which best describes your preference?"
              type: "select"
              options: 
                - "I'm willing to pay more in premiums each month so that when I go to the pharmacy or doctor, I pay very little."
                - "I would rather pay as little as possible in premiums each month and then pay more for the services if and when I need them."
              value: null
              ignore_if_claims: false
              created: "2019-03-20 19:35:40"
              updated: "2019-03-20 19:35:40"
#Recommendation Detail Iutput
  RecommendationDetailInput:
    type: "object"
    properties: 
      subscriber:   
            type: "integer"
            description: "Subscriber ID"
      group:   
            type: "string"
            description: "Employer group ID" 
      division:   
            type: "string"
            description: "Employer group's division ID"  
      members: 
            type: "array"
            description: "Array of all the current dependents on the subscriber's plan."
            items:
              type: "object"
              properties:
                id:
                  type: "integer"
                  description: "Plan member ID"
                is_subscriber:
                  type: "boolean"
                  description: "True if the member is the plan subscriber, false otherwise"
                name:
                  type: "string"
                  description: "Member's first name"  
                relation:
                  type: "string"
                  description: |
                    Slug describing the relation of the member to the subscriber. This takes three possible values
                      
                    `subscriber` referring to the member being the plan subscriber, 
                      
                    `spouse` referring to the member being the subscriber's spouse, 
                      
                    `child` referring to the member being the subscriber's child.      
      eligibility: 
            type: "array"
            description: "Array of all the benefits that the subscriber has access to."
            items:
              type: "object"
              properties:
                benefit_id:
                  type: "string"
                  description: "Benefit plan ID"
                benefit_type:
                  type: "boolean"
                  description: |
                    Type of the benefit plan. This takes the following possible values
                      
                    `medical` referring to the basic health plan, 
                      
                    `hospital` referring to hospital indemnity benefits.      
                
                    
    example:
      subscriber: 57122389
      group: "acmecorp"
      division: "corporate"
      members:
        - id: 57122389
          is_subscriber: true
          name: "Susan"
          relation: "subscriber"
        - id: 57122390
          is_subscriber: false
          name: "Cora"
          relation: "Spouse"  
      eligibility:
        - benefit_id: "HumanaCDHP"
          type: "medical"
        - benefit_id: "UnumHospitalGold"
          type: "hospital"     
            
# Plan Recommendation Detail Output
  RecommendationDetailOutput:
    type: "object"
    properties:
      updated: 
        type: "timestamp"
        description: "Timestamp (in UTC) of latest updated recommendations computed in the Reclaim system"
      claims_available: 
            type: "object"
            properties:
              flag: 
                type: "boolean"
                description: "True if Reclaim has mapped the medical and pharmacy claims of this subscriber and their dependants, False otherwise"
              updated: 
                type: "timestamp"
                description: "Timestamp (in UTC) recording the time the flag was updated to the current value, if applicable"
      authorized:   
            type: "object"
            properties:
              flag: 
                type: "boolean"
                description: "True if the subscriber has authorized Reclaim to use their claims to personalize their decision support, False otherwise"
              updated: 
                type: "timestamp"
                description: "Timestamp (in UTC) recording the time the flag was updated to the current value, if applicable"
      survey:   
            type: "object"
            properties:
              flag: 
                type: "boolean"
                description: "True if the subscriber has taken the subscriber enrollment survey, False otherwise"
              updated: 
                type: "timestamp"
                description: "Timestamp (in UTC) recording the time the flag was updated to the current value, if applicable"    
      recommendations:
        type: "array"
        description: "Object containing the subscriber's recommended bundled plans. Note that the recommendations are based off of consumer data and survery answers (if available) for the case where the subscriber has no claims in the Reclaim system or if they have not authorized Reclaim to use their claims data. The recommendations are based off of consumer data, survey answers (if available) and the claims data associated with the subscriber and their dependents, if the the subscriber has claims in the Reclaim system and has authorized Reclaim to use their claims data"
        items:
              type: "object"
              properties:
                confidence:
                  type: "float"
                  description: "Proportion of people like the subscriber that would save by enrolling in this bundled plan"
                cost:
                  type: "object"
                  properties:
                    low:
                      type: "float"
                      description: "Lower end of predicted total annual cost (total premiums + out-of-pocket expenses - potential reimbursements - potential group contributions) for this bundled plan"
                    high:
                      type: "float"
                      description: "Upper end of predicted total annual cost (total premiums + out-of-pocket expenses - potential reimbursements - potential group contributions) for this bundled plan"
                benefits:
                  type: "array"
                  description: "Array containing the detailed policy information within this bundled plan"
                  items:
                    type: "object"
                    properties:
                      type:
                        type: "string"
                        description: |
                          Slug describing the policy type. This can take any one of the following values:
                          
                          `basic` refers to the medical and rx plan (basic health plan)
                          
                          `hospital` refers to a supplemental hospital indemnity plan
                          
                          `accident` refers to a supplemental accident coverage plan
                          
                          `critical_illness` refers to a supplemental critical illness plan
                          
                          `disease_management` refers to a generic disease management benefit
                      id:    
                        type: "integer"
                        description: "Policy unique ID"  
                      premium:    
                        type: "float"
                        description: "Policy yearly premium"      
                      oop:    
                        type: "object"
                        description: "Object containing the predicted annual out of pocket expenses under this policy. This is only applicable for the basic policy."
                        properties:
                          low:
                            type: "float"
                            description: "Lower end of predicted annual out-of-pocket cost for the policy, if applicable"
                          high:
                            type: "float"
                            description: "Upper end of predicted annual out-of-pocket cost for the policy, if applicable"   
                      hsa:
                        type: "object"
                        description: "Object containing the HSA related information, if applicable with the basic plan."
                        properties:
                          group_contribution:
                            type: "float"
                            description: "Subscriber's employer group's contribution to the HSA, if applicable"
                          recommended_savings:
                            type: "float"
                            description: "Recommended subscriber's annual contribution to the HSA. Note that we do not have visibility into their retirement savings or contributions"      
                      fsa:
                        type: "object"
                        description: "Object containing the FSA related information, if applicable with the basic plan."
                        properties:
                          group_contribution:
                            type: "float"
                            description: "Subscriber's employer group's contribution to the FSA, if applicable"
                          recommended_savings:
                            type: "float"
                            description: "Recommended subscriber's annual contribution to the FSA based on their health needs for the upcoming plan year"                                
                      reimbursement:    
                        type: "object"
                        description: "Object containing the predicted reimbursement to the subscriber under this policy. This is only applicable for the supplemental policies (hospital, accident, and critical illness)."
                        properties:
                          probability:
                            type: "float"
                            description: "Proportion of people like the subscriber who have benefitted from such supplemental policy"
                          typical:
                            type: "float"
                            description: "Typical reimbursement implied from people like the subscriber who have benefitted from such supplemental policy"      
    example:
      updated: "2019-07-05 14:59:23"
      claims_available: 
        flag: true
        updated: "2019-05-10 12:59:29"
      authorized: 
        flag: true
        updated: "2019-07-05 14:00:29"
      survey: 
        flag: true
        updated: "2019-07-05 14:15:29"
      recommendations:
        - confidence: 0.754
          cost:
            low: 6000
            high: 7000
          benefits:
            - type: "basic"
              id: 2579285709
              premium: 4000
              oop:
                low: 3000
                high: 4000
              hsa:
                group_contribution: 1000
                recommended_savings: 5500
            - type: "hospital"
              id: 5128746926
              premium: 500
              reimbursement: 
                probability: 0.30
                typical_benefit: 2500
            - type: "disease_management"
              id: 35847948578